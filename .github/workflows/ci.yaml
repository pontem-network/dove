name: Tests
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  sonarqube:
    name: sonarqube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  clippy:
    name: clippy + rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Rust cache (pontemapi)
        uses: Swatinem/rust-cache@v1
        with:
          working-directory: ./pontem/pontemapi/
          cache-on-failure: true

      - name: Rust cache (root)
        uses: Swatinem/rust-cache@v1

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --tests --examples -- -Dwarnings

  tests:
    name: tests (${{ matrix.name }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        include:
          - name: macos
            os: macos-latest
            triplet: x64-osx
          - name: ubuntu
            os: ubuntu-latest
            triplet: x64-linux

    env:
      RUSTFLAGS: -D warnings
      CARGO_INCREMENTAL: 1
      RUSTUP_MAX_RETRIES: 10
      CARGO_NET_RETRY: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

#      - name: Restore from cache and run vcpkg
#        if: ${{ matrix.platform == 'win' }}
#        uses: lukka/run-vcpkg@v7
#        with:
#          vcpkgArguments: openssl
#          vcpkgDirectory: ${{github.workspace}}/3rdparty/vcpkg
#          vcpkgTriplet: ${{ matrix.triplet }}
#          vcpkgGitCommitId: 71422c627264daedcbcd46f01f1ed0dcd8460f1b

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Rust cache (pontemapi)
        uses: Swatinem/rust-cache@v1
        with:
          key: pontemapi
          working-directory: ./pontem/pontemapi/
          cache-on-failure: true

      - name: Rust cache (root)
        uses: Swatinem/rust-cache@v1
        with:
          key: root

      - name: Test All
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-fail-fast --all --all-features -- --test-threads=1

      - name: Upload dove debug binary to use in subsequent jobs
        uses: actions/upload-artifact@v2
        with:
          name: dove-${{ matrix.name }}
          path: target/debug/dove
          if-no-files-found: error
          retention-days: 1

  install:
    needs: clippy
    name: cargo install (${{ matrix.name }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        include:
          - name: macos
            os: macos-latest
            triplet: x64-osx
          - name: ubuntu
            os: ubuntu-latest
            triplet: x64-linux

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

#      - name: Restore from cache and run vcpkg
#        if: ${{ matrix.platform == 'win' }}
#        uses: lukka/run-vcpkg@v7
#        with:
#          vcpkgArguments: openssl
#          vcpkgDirectory: ${{github.workspace}}/3rdparty/vcpkg
#          vcpkgTriplet: ${{ matrix.triplet }}
#          vcpkgGitCommitId: 71422c627264daedcbcd46f01f1ed0dcd8460f1b

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Rust cache (pontemapi)
        uses: Swatinem/rust-cache@v1
        with:
          key: pontemapi
          working-directory: ./pontem/pontemapi/
          cache-on-failure: true

      - name: Rust cache (root)
        uses: Swatinem/rust-cache@v1
        with:
          key: root
          cache-on-failure: true

      - name: Build & Install Dove
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --path=dove --force

  dove_build:
    needs: tests
    name: dove build | build --doc | test (${{ matrix.name }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: macos
            os: macos-latest
          - name: ubuntu
            os: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: dove-${{ matrix.name }}
          path: ./bin
      - name: Prepare dove
        run: chmod +x ./bin/dove && echo "./bin" >> $GITHUB_PATH

      - run: dove build --dev --path ./aptos-core/aptos-move/framework/move-stdlib
      - run: dove build --dev --doc --path ./aptos-core/aptos-move/framework/move-stdlib
      - run: dove test --path ./aptos-core/aptos-move/framework/move-stdlib


#  dove_prove:
#    needs: tests
#    name: dove prove (${{ matrix.name }})
#    runs-on: ${{ matrix.os }}
#
#    strategy:
#      fail-fast: true
#      matrix:
#        include:
#          - name: macos
#            os: macos-latest
#          - name: ubuntu
#            os: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#        with:
#          submodules: recursive
#
#      - name: Install Boogie
#        uses: pontem-network/get-boogie@main
#        with:
#          ref: 927c229cd8dfa6dcd50ba84811f80d10496c76d2
#          token: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Download artifact
#        uses: actions/download-artifact@v2
#        with:
#          name: dove-${{ matrix.name }}
#          path: ./bin
#      - name: Prepare dove
#        run: chmod +x ./bin/dove && echo "./bin" >> $GITHUB_PATH
#
#      - name: Prove move-stdlib
#        run: dove prove -p=dove/resources/for_tests/move-stdlib/

  dove_node_integration:
    needs: tests
    name: Node Integration tests (${{ matrix.name }})
    runs-on: ${{ matrix.os }}
    if: ${{ false }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: macos
            os: macos-latest
          - name: ubuntu
            os: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: dove-${{ matrix.name }}
          path: ./bin
      - name: Prepare dove
        run: chmod +x ./bin/dove && echo "./bin" >> $GITHUB_PATH
      # TODO: download the node
