name: Tests
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  clippy:
    name: clippy + rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: restore rust cache
        uses: Swatinem/rust-cache@v1

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --tests --examples -- -Dwarnings

  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: macos
            os: macos-latest
            triplet: x64-osx
          - name: ubuntu
            os: ubuntu-latest
            triplet: x64-linux
          - name: windows
            os: windows-latest
            triplet: x64-windows-static-md

    env:
      RUSTFLAGS: -D warnings
      CARGO_INCREMENTAL: 1
      RUSTUP_MAX_RETRIES: 10
      CARGO_NET_RETRY: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Restore from cache and run vcpkg
        uses: lukka/run-vcpkg@v7
        with:
          vcpkgArguments: openssl
          vcpkgDirectory: ${{github.workspace}}/3rdparty/vcpkg
          vcpkgTriplet: ${{ matrix.triplet }}
          vcpkgGitCommitId: 3b4dd085b0f5b410d9f587b3c9f7ad08a07449aa

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - uses: Swatinem/rust-cache@v1

      - name: Test All
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-fail-fast --all -- --test-threads=1

  wasm:
    name: wasm
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        rust:
          - "1.50.0"
        crate:
          - decompiler

    env:
      RUSTFLAGS: -D warnings
      CARGO_INCREMENTAL: 1
      RUSTUP_MAX_RETRIES: 10
      CARGO_NET_RETRY: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          target: wasm32-unknown-unknown
          override: true

      - name: Build ${{ matrix.crate }}
        run: cargo build -p ${{ matrix.crate }} --lib --target wasm32-unknown-unknown --release

      # - name: Install wasm-bindgen tool
      #   continue-on-error: true
      #   run: cargo install wasm-bindgen-cli or use wasm-pack

      - uses: jetli/wasm-bindgen-action@v0.1.0
        with:
          version: "0.2.74"

      - name: Gen JS/TS API
        run: |
          wasm-bindgen target/wasm32-unknown-unknown/release/${{ matrix.crate }}.wasm --out-dir ./dist_${{ matrix.crate }} --no-modules --no-modules-global ${{ matrix.crate }}
          wasm-bindgen target/wasm32-unknown-unknown/release/${{ matrix.crate }}.wasm --out-dir ./dist_${{ matrix.crate }}/js-modules
      # - name: Install wasm-pack toolchain
      #   run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      # - name: Test in Chrome
      #   run: wasm-pack test --headless --chrome
      # - name: Test in Firefox
      #   run: wasm-pack test --headless --firefox
      # - name: Test in Safari
      #   run: wasm-pack test --headless --safari
