name: Tests
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  clippy:
    name: clippy + rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Rusty cache
        uses: Swatinem/rust-cache@v1

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --tests --examples -- -Dwarnings

  tests:
    name: Units (${{ matrix.name }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        include:
          - name: macos
            os: macos-latest
            triplet: x64-osx
          - name: ubuntu
            os: ubuntu-latest
            triplet: x64-linux

    env:
      RUSTFLAGS: -D warnings
      CARGO_INCREMENTAL: 1
      RUSTUP_MAX_RETRIES: 10
      CARGO_NET_RETRY: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Restore from cache and run vcpkg
        if: ${{ matrix.platform == 'win' }}
        uses: lukka/run-vcpkg@v7
        with:
          vcpkgArguments: openssl
          vcpkgDirectory: ${{github.workspace}}/3rdparty/vcpkg
          vcpkgTriplet: ${{ matrix.triplet }}
          vcpkgGitCommitId: 71422c627264daedcbcd46f01f1ed0dcd8460f1b

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Rusty cache
        uses: Swatinem/rust-cache@v1

      # Clearing cache "~/.move/" before testing
      - name: Build, dove clean --global
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: clean --global

      # Download MoveStdlib
      # Preliminary preparation for the "cargo test" in multithreading
      # Do not delete it, otherwise the tests will not work in multithreaded mode.
      - name: Download MoveStdlib
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: test_cmd_dove_run_with_params

      - name: Test All
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-fail-fast --all --all-features

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: dove-${{ matrix.name }}
          path: target/debug/dove
          if-no-files-found: error
          retention-days: 1

  install:
    name: install (${{ matrix.name }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        include:
          - name: macos
            os: macos-latest
            triplet: x64-osx
          - name: ubuntu
            os: ubuntu-latest
            triplet: x64-linux

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Restore from cache and run vcpkg
        if: ${{ matrix.platform == 'win' }}
        uses: lukka/run-vcpkg@v7
        with:
          vcpkgArguments: openssl
          vcpkgDirectory: ${{github.workspace}}/3rdparty/vcpkg
          vcpkgTriplet: ${{ matrix.triplet }}
          vcpkgGitCommitId: 71422c627264daedcbcd46f01f1ed0dcd8460f1b

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Rusty cache
        uses: Swatinem/rust-cache@v1

      - name: Build & Install Dove
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --path=dove

  proover:
    needs: tests
    name: proover (${{ matrix.name }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        include:
          - name: macos
            os: macos-latest
          - name: ubuntu
            os: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Boogie
        uses: pontem-network/get-boogie@main
        with:
          ref: 927c229cd8dfa6dcd50ba84811f80d10496c76d2
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: dove-${{ matrix.name }}
          path: ./bin
      - name: Prepare dove
        run: chmode +x ./bin/dove && echo "./bin" >> $GITHUB_PATH

      - name: Proove move-stdlib
        run: dove prove -p=dove/resources/for_tests/move-stdlib/

  builds:
    needs: tests
    name: Builds (${{ matrix.name }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: macos
            os: macos-latest
          - name: ubuntu
            os: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: dove-${{ matrix.name }}
          path: ./bin
      - name: Prepare dove
        run: chmode +x ./bin/dove && echo "./bin" >> $GITHUB_PATH

      - run: dove build --path ./dove/resources/for_tests/move-stdlib
      - run: dove build --doc --path ./dove/resources/for_tests/move-stdlib
      - run: dove test --path ./dove/resources/for_tests/move-stdlib

  integration:
    needs: tests
    name: Integration (${{ matrix.name }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: macos
            os: macos-latest
          - name: ubuntu
            os: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: dove-${{ matrix.name }}
          path: ./bin
      - name: Prepare dove
        run: chmode +x ./bin/dove && echo "./bin" >> $GITHUB_PATH
      # TODO: download the node
