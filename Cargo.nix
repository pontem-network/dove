
# This file was @generated by crate2nix 0.10.0-alpha.1 with the command:
#   "generate"
# See https://github.com/kolloch/crate2nix for more info.

{ nixpkgs ? <nixpkgs>
, pkgs ? import nixpkgs { config = {}; }
, lib ? pkgs.lib
, stdenv ? pkgs.stdenv
, buildRustCrateForPkgs ? if buildRustCrate != null
    then lib.warn "crate2nix: Passing `buildRustCrate` as argument to Cargo.nix is deprecated. If you don't customize `buildRustCrate`, replace `callPackage ./Cargo.nix {}` by `import ./Cargo.nix { inherit pkgs; }`, and if you need to customize `buildRustCrate`, use `buildRustCrateForPkgs` instead." (_: buildRustCrate)
    else pkgs: pkgs.buildRustCrate
  # Deprecated
, buildRustCrate ? null
  # This is used as the `crateOverrides` argument for `buildRustCrate`.
, defaultCrateOverrides ? pkgs.defaultCrateOverrides
  # The features to enable for the root_crate or the workspace_members.
, rootFeatures ? [ "default" ]
  # If true, throw errors instead of issueing deprecation warnings.
, strictDeprecation ? false
  # Used for conditional compilation based on CPU feature detection.
, targetFeatures ? []
  # Whether to perform release builds: longer compile times, faster binaries.
, release ? true
  # Additional crate2nix configuration if it exists.
, crateConfig
  ? if builtins.pathExists ./crate-config.nix
    then pkgs.callPackage ./crate-config.nix {}
    else {}
}:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #


  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "disassembler" = rec {
      packageId = "disassembler";
      build = internal.buildRustCrateWithFeatures {
        packageId = "disassembler";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "dnode-rest-client" = rec {
      packageId = "dnode-rest-client";
      build = internal.buildRustCrateWithFeatures {
        packageId = "dnode-rest-client";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "dove" = rec {
      packageId = "dove";
      build = internal.buildRustCrateWithFeatures {
        packageId = "dove";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "git-hash" = rec {
      packageId = "git-hash";
      build = internal.buildRustCrateWithFeatures {
        packageId = "git-hash";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "lang" = rec {
      packageId = "lang";
      build = internal.buildRustCrateWithFeatures {
        packageId = "lang";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "move-compat" = rec {
      packageId = "move-compat";
      build = internal.buildRustCrateWithFeatures {
        packageId = "move-compat";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "move-executor" = rec {
      packageId = "move-executor";
      build = internal.buildRustCrateWithFeatures {
        packageId = "move-executor";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "move-language-server" = rec {
      packageId = "move-language-server";
      build = internal.buildRustCrateWithFeatures {
        packageId = "move-language-server";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "move-resource-viewer" = rec {
      packageId = "move-resource-viewer";
      build = internal.buildRustCrateWithFeatures {
        packageId = "move-resource-viewer";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "resources" = rec {
      packageId = "resources";
      build = internal.buildRustCrateWithFeatures {
        packageId = "resources";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
  };

  # A derivation that joins the outputs of all workspace members together.
  allWorkspaceMembers = pkgs.symlinkJoin {
      name = "all-workspace-members";
      paths =
        let members = builtins.attrValues workspaceMembers;
        in builtins.map (m: m.build) members;
  };

  #
  # "internal" ("private") attributes that may change in every new version of crate2nix.
  #

  internal = rec {
    # Build and dependency information for crates.
    # Many of the fields are passed one-to-one to buildRustCrate.
    #
    # Noteworthy:
    # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
    #   but with additional information which is used during dependency/feature resolution.
    # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.
    # * `devDependencies` as of now not used by `buildRustCrate` but used to
    #   inject test dependencies into the build

    crates = {
      "Inflector" = rec {
        crateName = "Inflector";
        version = "0.11.4";
        edition = "2015";
        sha256 = "1lqmcni21ifzyq41fhz6k1j2b23cmsx469s4g4sf01l78miqqhzy";
        libName = "inflector";
        authors = [
          "Josh Teeter<joshteeter@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
          }
        ];
        features = {
          "default" = [ "heavyweight" ];
          "heavyweight" = [ "regex" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "heavyweight" "lazy_static" "regex" ];
      };
      "addr2line" = rec {
        crateName = "addr2line";
        version = "0.15.1";
        edition = "2015";
        sha256 = "0npvsn4hg8mvy10lig4j9sanscdclv7nqrczdmmphgcgmyc5wd03";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "Philip Craig <philipjcraig@gmail.com>"
          "Jon Gjengset <jon@thesquareplanet.com>"
          "Noah Bergbauer <noah.bergbauer@tum.de>"
        ];
        dependencies = [
          {
            name = "gimli";
            packageId = "gimli";
            usesDefaultFeatures = false;
            features = [ "read" ];
          }
        ];
        features = {
          "default" = [ "rustc-demangle" "cpp_demangle" "std-object" "fallible-iterator" "smallvec" ];
          "rustc-dep-of-std" = [ "core" "alloc" "compiler_builtins" "gimli/rustc-dep-of-std" ];
          "std" = [ "gimli/std" ];
          "std-object" = [ "std" "object" "object/std" "object/compression" "gimli/endian-reader" ];
        };
      };
      "adler" = rec {
        crateName = "adler";
        version = "1.0.2";
        edition = "2015";
        sha256 = "1zim79cvzd5yrkzl3nyfx0avijwgk9fqv3yrscdy1cc79ih02qpj";
        authors = [
          "Jonas Schievink <jonasschievink@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "aead" = rec {
        crateName = "aead";
        version = "0.3.2";
        edition = "2018";
        sha256 = "0c8388alvivcj4qkxgh4s4l6fbczn3p8wc0pnar6crlfvcdmvjbz";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.4";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "alloc" ];
          "dev" = [ "blobby" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" ];
      };
      "aes 0.4.0" = rec {
        crateName = "aes";
        version = "0.4.0";
        edition = "2018";
        sha256 = "1xgsp2bn5llsppald60iw4497gaspslg0a8hknhniiz4zmki607p";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "aes-soft";
            packageId = "aes-soft 0.4.0";
            target = { target, features }: (!((builtins.elem "aes" targetFeatures) && (builtins.elem "sse2" targetFeatures) && ((target."arch" == "x86_64") || (target."arch" == "x86"))));
          }
          {
            name = "aesni";
            packageId = "aesni 0.7.0";
            usesDefaultFeatures = false;
            target = { target, features }: ((builtins.elem "aes" targetFeatures) && (builtins.elem "sse2" targetFeatures) && ((target."arch" == "x86_64") || (target."arch" == "x86")));
          }
          {
            name = "block-cipher";
            packageId = "block-cipher";
          }
        ];
        devDependencies = [
          {
            name = "block-cipher";
            packageId = "block-cipher";
            features = [ "dev" ];
          }
        ];

      };
      "aes 0.6.0" = rec {
        crateName = "aes";
        version = "0.6.0";
        edition = "2018";
        sha256 = "0q85mw70mgr4glza9y9lrs9nxfa1cdcqzfk6wx0smb3623pr2hw8";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "aes-soft";
            packageId = "aes-soft 0.6.4";
            target = { target, features }: (!((builtins.elem "aes" targetFeatures) && (builtins.elem "sse2" targetFeatures) && ((target."arch" == "x86_64") || (target."arch" == "x86"))));
          }
          {
            name = "aesni";
            packageId = "aesni 0.10.0";
            usesDefaultFeatures = false;
            target = { target, features }: ((builtins.elem "aes" targetFeatures) && (builtins.elem "sse2" targetFeatures) && ((target."arch" == "x86_64") || (target."arch" == "x86")));
          }
          {
            name = "cipher";
            packageId = "cipher";
          }
        ];
        devDependencies = [
          {
            name = "cipher";
            packageId = "cipher";
            features = [ "dev" ];
          }
        ];

      };
      "aes-gcm 0.6.0" = rec {
        crateName = "aes-gcm";
        version = "0.6.0";
        edition = "2018";
        sha256 = "1lga8my3zlc0b1nhcpc1hrbykfm014fqs6d64bwrjqii05w01xc6";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "aead";
            packageId = "aead";
            usesDefaultFeatures = false;
          }
          {
            name = "aes";
            packageId = "aes 0.4.0";
            optional = true;
          }
          {
            name = "block-cipher";
            packageId = "block-cipher";
          }
          {
            name = "ghash";
            packageId = "ghash";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.0";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "aead/alloc" ];
          "default" = [ "aes" "alloc" ];
          "heapless" = [ "aead/heapless" ];
        };
        resolvedDefaultFeatures = [ "aes" "alloc" "default" ];
      };
      "aes-gcm 0.8.0" = rec {
        crateName = "aes-gcm";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1nl8iwlh209y1vj9n2lm1a70i69clvg2z6x69bi4dgdrpgxbay2j";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "aead";
            packageId = "aead";
            usesDefaultFeatures = false;
          }
          {
            name = "aes";
            packageId = "aes 0.6.0";
            optional = true;
          }
          {
            name = "cipher";
            packageId = "cipher";
          }
          {
            name = "ctr";
            packageId = "ctr";
          }
          {
            name = "ghash";
            packageId = "ghash";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.0";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "aead/alloc" ];
          "default" = [ "aes" "alloc" ];
          "heapless" = [ "aead/heapless" ];
          "std" = [ "aead/std" "alloc" ];
        };
        resolvedDefaultFeatures = [ "aes" "alloc" "default" ];
      };
      "aes-soft 0.4.0" = rec {
        crateName = "aes-soft";
        version = "0.4.0";
        edition = "2018";
        sha256 = "19szsg0qqxq42k7bj5p3svb147n8wxy9a20n4g7mcl2fwrz689a9";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-cipher";
            packageId = "block-cipher";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.2.3";
          }
        ];
        devDependencies = [
          {
            name = "block-cipher";
            packageId = "block-cipher";
            features = [ "dev" ];
          }
        ];

      };
      "aes-soft 0.6.4" = rec {
        crateName = "aes-soft";
        version = "0.6.4";
        edition = "2018";
        sha256 = "0wj0fi2pvmlw09yvb1aqf0mfkzrfxmjsf90finijh255ir4wf55y";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cipher";
            packageId = "cipher";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
        ];
        devDependencies = [
          {
            name = "cipher";
            packageId = "cipher";
            features = [ "dev" ];
          }
        ];
        features = {
        };
      };
      "aesni 0.10.0" = rec {
        crateName = "aesni";
        version = "0.10.0";
        edition = "2018";
        sha256 = "1kmh07fp9hbi1aa8dr2rybbgw8vqz6hjmk34c4w7sbscx7si2bpa";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cipher";
            packageId = "cipher";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
        ];
        devDependencies = [
          {
            name = "cipher";
            packageId = "cipher";
            features = [ "dev" ];
          }
        ];
        features = {
          "default" = [ "ctr" ];
        };
      };
      "aesni 0.7.0" = rec {
        crateName = "aesni";
        version = "0.7.0";
        edition = "2018";
        sha256 = "0r6j0mjkyqnwvgib01cvrwfw8rlx1biw75234niv723n1fdx6l6h";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-cipher";
            packageId = "block-cipher";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.2.3";
          }
        ];
        devDependencies = [
          {
            name = "block-cipher";
            packageId = "block-cipher";
            features = [ "dev" ];
          }
        ];
        features = {
          "ctr" = [ "stream-cipher" ];
          "default" = [ "ctr" ];
        };
      };
      "ahash 0.2.19" = rec {
        crateName = "ahash";
        version = "0.2.19";
        edition = "2018";
        sha256 = "1yzdrxaq99zfy0niq5i3cz5jv569s3s6z5q2cxcg08y6prh1nri9";
        authors = [
          "Tom Kaitchuck <Tom.Kaitchuck@gmail.com>"
        ];
        dependencies = [
          {
            name = "const-random";
            packageId = "const-random";
            optional = true;
          }
        ];
        features = {
          "compile-time-rng" = [ "const-random" ];
          "default" = [ "compile-time-rng" ];
        };
        resolvedDefaultFeatures = [ "compile-time-rng" "const-random" ];
      };
      "ahash 0.3.8" = rec {
        crateName = "ahash";
        version = "0.3.8";
        edition = "2018";
        sha256 = "05qjnr0wccch0gg2kghg0xyh8qd5gfqd15q9dd6r1lamcs375zg8";
        authors = [
          "Tom Kaitchuck <Tom.Kaitchuck@gmail.com>"
        ];
        features = {
          "compile-time-rng" = [ "const-random" ];
          "default" = [ "compile-time-rng" "std" ];
        };
      };
      "ahash 0.4.7" = rec {
        crateName = "ahash";
        version = "0.4.7";
        edition = "2018";
        sha256 = "0vm13qaz4nzj0gd397d36wpyav05bflg6m2nbhs82nb0ns6lm7vk";
        authors = [
          "Tom Kaitchuck <Tom.Kaitchuck@gmail.com>"
        ];
        features = {
          "compile-time-rng" = [ "const-random" ];
          "default" = [ "compile-time-rng" "std" ];
        };
      };
      "aho-corasick" = rec {
        crateName = "aho-corasick";
        version = "0.7.18";
        edition = "2018";
        sha256 = "0vv50b3nvkhyy7x7ip19qnsq11bqlnffkmj2yx2xlyk5wzawydqy";
        libName = "aho_corasick";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "memchr/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "alga" = rec {
        crateName = "alga";
        version = "0.9.3";
        edition = "2018";
        sha256 = "1wl4z8ini9269x04g8wwdz1nn3hmmvaaysq4jwhymikyg81kv0jg";
        authors = [
          "Brendan Zabarauskas"
          "Darin Morrison"
          "Sébastien Crozet"
          "Wadelma <delma@del.ma>"
        ];
        dependencies = [
          {
            name = "approx";
            packageId = "approx";
            usesDefaultFeatures = false;
          }
          {
            name = "num-complex";
            packageId = "num-complex 0.2.4";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "libm" ];
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "ansi_term 0.11.0" = rec {
        crateName = "ansi_term";
        version = "0.11.0";
        edition = "2015";
        sha256 = "16wpvrghvd0353584i1idnsgm0r3vchg8fyrm0x8ayv1rgvbljgf";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
            features = [ "errhandlingapi" "consoleapi" "processenv" ];
          }
        ];

      };
      "ansi_term 0.12.1" = rec {
        crateName = "ansi_term";
        version = "0.12.1";
        edition = "2015";
        sha256 = "1ljmkbilxgmhavxvxqa7qvm6f3fjggi7q2l3a72q9x0cxjvrnanm";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
            features = [ "consoleapi" "errhandlingapi" "fileapi" "handleapi" "processenv" ];
          }
        ];
        features = {
          "derive_serde_style" = [ "serde" ];
        };
      };
      "anyhow" = rec {
        crateName = "anyhow";
        version = "1.0.40";
        edition = "2018";
        sha256 = "0fq6qxlzp3bwrjbs3wp4i470k8vsvlkpx3q2wpl79gawvf9cvci8";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "approx" = rec {
        crateName = "approx";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1hx580xjdxl3766js9b49rnbnmr8gw8c060809l43k9f0xshprph";
        authors = [
          "Brendan Zabarauskas <bjzaba@yahoo.com.au>"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
        };
      };
      "arrayref" = rec {
        crateName = "arrayref";
        version = "0.3.6";
        edition = "2015";
        sha256 = "0i6m1l3f73i0lf0cjdf5rh3xpvxydyhfbakq7xx7bkrp5qajgid4";
        authors = [
          "David Roundy <roundyd@physics.oregonstate.edu>"
        ];

      };
      "arrayvec 0.4.12" = rec {
        crateName = "arrayvec";
        version = "0.4.12";
        edition = "2015";
        sha256 = "1fdiv5m627gh6flp4mpmi1mh647imm9x423licsr11psz97d97yd";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "nodrop";
            packageId = "nodrop";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "serde-1" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "arrayvec 0.5.2" = rec {
        crateName = "arrayvec";
        version = "0.5.2";
        edition = "2018";
        sha256 = "12q6hn01x5435bprwlb7w9m7817dyfq55yrl4psygr78bp32zdi3";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "array-sizes-129-255" "array-sizes-33-128" ];
      };
      "asn1_der" = rec {
        crateName = "asn1_der";
        version = "0.6.3";
        edition = "2015";
        sha256 = "0f6nk2zhj1dryrpmd9gywliwblp880zrxrw75kcfpbzx1xm6pkkg";
        authors = [
          "KizzyCode Software Labs./Keziah Biermann <development@kizzycode.de>"
        ];
        dependencies = [
          {
            name = "asn1_der_derive";
            packageId = "asn1_der_derive";
            optional = true;
          }
        ];
        features = {
          "default" = [ "derive" ];
          "derive" = [ "asn1_der_derive" ];
        };
        resolvedDefaultFeatures = [ "asn1_der_derive" "default" "derive" ];
      };
      "asn1_der_derive" = rec {
        crateName = "asn1_der_derive";
        version = "0.1.2";
        edition = "2015";
        sha256 = "00imfjs46ik92hr92fz0bkggjsxqgm9siscv8i2v21wf9gc6820d";
        procMacro = true;
        authors = [
          "KizzyCode <development@kizzycode.de>"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "async-channel" = rec {
        crateName = "async-channel";
        version = "1.6.1";
        edition = "2018";
        sha256 = "06b3sq2hd8qwl2xxlc4qalg6xw3l9b41w4sym9g0q70mf93dc511";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "concurrent-queue";
            packageId = "concurrent-queue";
          }
          {
            name = "event-listener";
            packageId = "event-listener";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
        ];

      };
      "async-executor" = rec {
        crateName = "async-executor";
        version = "1.4.1";
        edition = "2018";
        sha256 = "0rd9sd0rksvjwx4zzy6c69qcd7bwp3z42rpiiizfnbm2w2srn7w7";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "async-task";
            packageId = "async-task";
          }
          {
            name = "concurrent-queue";
            packageId = "concurrent-queue";
          }
          {
            name = "fastrand";
            packageId = "fastrand";
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "slab";
            packageId = "slab";
          }
        ];

      };
      "async-global-executor" = rec {
        crateName = "async-global-executor";
        version = "2.0.2";
        edition = "2018";
        sha256 = "1xjacr43sbz2zk0zygpd9k14n95wa61x8n9i8mcdwdkz659fr1lm";
        authors = [
          "Marc-Antoine Perennou <Marc-Antoine@Perennou.com>"
        ];
        dependencies = [
          {
            name = "async-channel";
            packageId = "async-channel";
          }
          {
            name = "async-executor";
            packageId = "async-executor";
          }
          {
            name = "async-io";
            packageId = "async-io";
            optional = true;
          }
          {
            name = "async-mutex";
            packageId = "async-mutex";
          }
          {
            name = "blocking";
            packageId = "blocking";
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
        ];
        features = {
          "default" = [ "async-io" ];
          "tokio" = [ "tokio-crate" ];
          "tokio02" = [ "tokio02-crate" ];
          "tokio03" = [ "tokio03-crate" ];
        };
        resolvedDefaultFeatures = [ "async-io" "default" ];
      };
      "async-io" = rec {
        crateName = "async-io";
        version = "1.4.1";
        edition = "2018";
        sha256 = "0frwa13kyqk28szifippqmp1z3wgbz2fcmw4x84fkccl4z7xbgsb";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "concurrent-queue";
            packageId = "concurrent-queue";
          }
          {
            name = "fastrand";
            packageId = "fastrand";
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "parking";
            packageId = "parking";
          }
          {
            name = "polling";
            packageId = "polling";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "socket2";
            packageId = "socket2 0.4.0";
            features = [ "all" ];
          }
          {
            name = "waker-fn";
            packageId = "waker-fn";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "winsock2" ];
          }
        ];

      };
      "async-lock" = rec {
        crateName = "async-lock";
        version = "2.4.0";
        edition = "2018";
        sha256 = "12vrxabscfq0a20qayf60fqpgg3xchga7bawgh0a2iwrpxhyma76";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "event-listener";
            packageId = "event-listener";
          }
        ];

      };
      "async-mutex" = rec {
        crateName = "async-mutex";
        version = "1.4.0";
        edition = "2018";
        sha256 = "0vhmsscqx48dmxw0yir6az0pbwcq6qjvcv2f43vdpn95vd9bi7a7";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "event-listener";
            packageId = "event-listener";
          }
        ];

      };
      "async-process" = rec {
        crateName = "async-process";
        version = "1.1.0";
        edition = "2018";
        sha256 = "1b2lngjrh00h2w7p3c65kvzzx5blkxybzbr8qiqldj4svmb8gwx8";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "async-io";
            packageId = "async-io";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "blocking";
            packageId = "blocking";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "event-listener";
            packageId = "event-listener";
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "signal-hook";
            packageId = "signal-hook";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
            features = [ "iterator" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            usesDefaultFeatures = false;
            target = { target, features }: (target."windows" or false);
            features = [ "winbase" "winnt" ];
          }
        ];

      };
      "async-std" = rec {
        crateName = "async-std";
        version = "1.9.0";
        edition = "2018";
        sha256 = "0h834fni3npsggjqin8386d2fn11m2z42dr1ymq0aknppa2ndw6r";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "Yoshua Wuyts <yoshuawuyts@gmail.com>"
          "Friedel Ziegelmayer <me@dignifiedquire.com>"
          "Contributors to async-std"
        ];
        dependencies = [
          {
            name = "async-channel";
            packageId = "async-channel";
            optional = true;
          }
          {
            name = "async-global-executor";
            packageId = "async-global-executor";
            optional = true;
            target = { target, features }: (!(target."os" == "unknown"));
            features = [ "async-io" ];
          }
          {
            name = "async-io";
            packageId = "async-io";
            optional = true;
            target = { target, features }: (!(target."os" == "unknown"));
          }
          {
            name = "async-lock";
            packageId = "async-lock";
            optional = true;
          }
          {
            name = "async-process";
            packageId = "async-process";
            optional = true;
            target = { target, features }: (!(target."os" == "unknown"));
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
            optional = true;
          }
          {
            name = "futures-channel";
            packageId = "futures-channel";
            optional = true;
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
            optional = true;
            target = { target, features }: (!(target."os" == "unknown"));
          }
          {
            name = "gloo-timers";
            packageId = "gloo-timers";
            optional = true;
            target = { target, features }: (target."arch" == "wasm32");
            features = [ "futures" ];
          }
          {
            name = "kv-log-macro";
            packageId = "kv-log-macro";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
            features = [ "kv_unstable" ];
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.6";
            optional = true;
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
            optional = true;
          }
          {
            name = "slab";
            packageId = "slab";
            optional = true;
          }
          {
            name = "wasm-bindgen-futures";
            packageId = "wasm-bindgen-futures";
            optional = true;
            target = { target, features }: (target."arch" == "wasm32");
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" "pin-project-lite" ];
          "attributes" = [ "async-attributes" ];
          "default" = [ "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite" "gloo-timers" ];
          "docs" = [ "attributes" "unstable" "default" ];
          "std" = [ "alloc" "crossbeam-utils" "futures-core/std" "futures-io" "memchr" "once_cell" "pin-utils" "slab" "wasm-bindgen-futures" "futures-channel" "async-channel" "async-lock" ];
          "tokio02" = [ "async-global-executor/tokio02" ];
          "tokio03" = [ "async-global-executor/tokio03" ];
          "tokio1" = [ "async-global-executor/tokio" ];
          "unstable" = [ "std" "async-io" "async-process" ];
        };
        resolvedDefaultFeatures = [ "alloc" "async-channel" "async-global-executor" "async-io" "async-lock" "async-process" "crossbeam-utils" "default" "futures-channel" "futures-core" "futures-io" "futures-lite" "gloo-timers" "kv-log-macro" "log" "memchr" "num_cpus" "once_cell" "pin-project-lite" "pin-utils" "slab" "std" "unstable" "wasm-bindgen-futures" ];
      };
      "async-task" = rec {
        crateName = "async-task";
        version = "4.0.3";
        edition = "2018";
        sha256 = "1w0a1c8jim6s5bvcyiiwg9m4bdv3xnd4hbjm97ndgmphmgg32679";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "atomic" = rec {
        crateName = "atomic";
        version = "0.4.6";
        edition = "2015";
        sha256 = "0vm0d59h4xy1r66r4gamh5mkadk6qg4d2m07abqkfj6a3njnrx34";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        features = {
        };
      };
      "atomic-waker" = rec {
        crateName = "atomic-waker";
        version = "1.0.0";
        edition = "2018";
        sha256 = "0ansiq5vlw684fhks2x4a4is2rqlbv50q5mi8x0fxxvx5q2p8lq6";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];

      };
      "atty" = rec {
        crateName = "atty";
        version = "0.2.14";
        edition = "2015";
        sha256 = "1s7yslcs6a28c5vz7jwj63lkfgyx8mx99fdirlhi9lbhhzhrpcyr";
        authors = [
          "softprops <d.tangren@gmail.com>"
        ];
        dependencies = [
          {
            name = "hermit-abi";
            packageId = "hermit-abi";
            target = { target, features }: (target."os" == "hermit");
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "consoleapi" "processenv" "minwinbase" "minwindef" "winbase" ];
          }
        ];

      };
      "autocfg 0.1.7" = rec {
        crateName = "autocfg";
        version = "0.1.7";
        edition = "2015";
        sha256 = "1chwgimpx5z7xbag7krr9d8asxfqbh683qhgl9kn3hxk2l0djj8x";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];

      };
      "autocfg 1.0.1" = rec {
        crateName = "autocfg";
        version = "1.0.1";
        edition = "2015";
        sha256 = "0jj6i9zn4gjl03kjvziqdji6rwx8ykz8zk2ngpc331z2g3fk3c6d";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];

      };
      "backtrace" = rec {
        crateName = "backtrace";
        version = "0.3.59";
        edition = "2018";
        sha256 = "0i570lldf0ijdq9vn7s83vwfirvshd8kjigq93ys0qd6zb5wy5s7";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "addr2line";
            packageId = "addr2line";
            usesDefaultFeatures = false;
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide";
            usesDefaultFeatures = false;
          }
          {
            name = "object";
            packageId = "object";
            usesDefaultFeatures = false;
            features = [ "read_core" "elf" "macho" "pe" "unaligned" "archive" ];
          }
          {
            name = "rustc-demangle";
            packageId = "rustc-demangle";
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
          "default" = [ "std" ];
          "serialize-rustc" = [ "rustc-serialize" ];
          "serialize-serde" = [ "serde" ];
          "verify-winapi" = [ "winapi/dbghelp" "winapi/handleapi" "winapi/libloaderapi" "winapi/memoryapi" "winapi/minwindef" "winapi/processthreadsapi" "winapi/synchapi" "winapi/tlhelp32" "winapi/winbase" "winapi/winnt" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "std" ];
      };
      "base58" = rec {
        crateName = "base58";
        version = "0.1.0";
        edition = "2015";
        sha256 = "10xfw6v7jzn9i682mkw9nqybzafrvl3i2wawwgp5a8gh2n0fw92h";
        authors = [
          "debris <marek.kotewicz@gmail.com>"
        ];

      };
      "base64" = rec {
        crateName = "base64";
        version = "0.13.0";
        edition = "2018";
        sha256 = "1z82g23mbzjgijkpcrilc7nljpxpvpf7zxf6iyiapkgka2ngwkch";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "bcs" = rec {
        crateName = "bcs";
        version = "0.1.3";
        edition = "2018";
        sha256 = "0cr8rdzymxczjqj81arnrd1azwha9h5mbww2c6q66wmg7qzdh3si";
        authors = [
          "Diem <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];

      };
      "bech32" = rec {
        crateName = "bech32";
        version = "0.7.3";
        edition = "2015";
        sha256 = "1lai6xi1li8y30kx9icscmi2j6s6j323sy9hfdzm1fbgz4svxard";
        authors = [
          "Clark Moody"
        ];
        features = {
        };
      };
      "bitflags" = rec {
        crateName = "bitflags";
        version = "1.2.1";
        edition = "2015";
        sha256 = "14qnd5nq8p2almk79m4m8ydqhd413yaxsyjp5xd19g3mikzf47fg";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "bitmask" = rec {
        crateName = "bitmask";
        version = "0.5.0";
        edition = "2015";
        sha256 = "1bbyd12wclwz446c05bxhb7ncrdbvzwg8wx4hy91k1gmyvcv7aax";
        authors = [
          "Delyan Dobrev <delqn.dobrev@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "bitvec" = rec {
        crateName = "bitvec";
        version = "0.17.4";
        edition = "2018";
        sha256 = "0p3slijkjv8q64mdmagwhb1bdd33lgy1kq1wm9hlmzbisw8jy9j1";
        authors = [
          "myrrlyn <self@myrrlyn.dev>"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
          {
            name = "radium";
            packageId = "radium";
          }
        ];
        features = {
          "default" = [ "atomic" "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "blake2-rfc" = rec {
        crateName = "blake2-rfc";
        version = "0.2.18";
        edition = "2015";
        sha256 = "0034g47hyq2bzmk40895ill1mbnpmmjakdq3dmm9clidvl5m6vax";
        authors = [
          "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
        ];
        dependencies = [
          {
            name = "arrayvec";
            packageId = "arrayvec 0.4.12";
            usesDefaultFeatures = false;
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
        ];
        features = {
          "default" = [ "std" ];
          "simd_asm" = [ "simd_opt" ];
          "simd_opt" = [ "simd" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "blake2b_simd" = rec {
        crateName = "blake2b_simd";
        version = "0.5.11";
        edition = "2018";
        sha256 = "11y5nm06lpypz65dbxgncs12ckx24i5i4a777ckfhfxd93ili9xg";
        authors = [
          "Jack O'Connor"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "arrayvec";
            packageId = "arrayvec 0.5.2";
            usesDefaultFeatures = false;
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
      };
      "blake2s_simd" = rec {
        crateName = "blake2s_simd";
        version = "0.5.11";
        edition = "2018";
        sha256 = "18p63b19zhs348jcq23cn092kcrhcwpfwmyb98d22nz86iq1lily";
        authors = [
          "Jack O'Connor"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "arrayvec";
            packageId = "arrayvec 0.5.2";
            usesDefaultFeatures = false;
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
      };
      "block-buffer 0.7.3" = rec {
        crateName = "block-buffer";
        version = "0.7.3";
        edition = "2015";
        sha256 = "12v8wizynqin0hqf140kmp9s38q223mp1b0hkqk8j5pk8720v560";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-padding";
            packageId = "block-padding 0.1.5";
          }
          {
            name = "byte-tools";
            packageId = "byte-tools";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "generic-array";
            packageId = "generic-array 0.12.4";
          }
        ];

      };
      "block-buffer 0.9.0" = rec {
        crateName = "block-buffer";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1r4pf90s7d7lj1wdjhlnqa26vvbm6pnc33z138lxpnp9srpi2lj1";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-padding";
            packageId = "block-padding 0.2.1";
            optional = true;
          }
          {
            name = "generic-array";
            packageId = "generic-array 0.14.4";
          }
        ];

        resolvedDefaultFeatures = [ "block-padding" ];
      };
      "block-cipher" = rec {
        crateName = "block-cipher";
        version = "0.7.1";
        edition = "2018";
        sha256 = "043zgfz1x4sxkdcsyabrcr440fcwhfpcqqa54jm7zp35wx4n84zs";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.4";
          }
        ];
        features = {
          "dev" = [ "blobby" ];
        };
      };
      "block-padding 0.1.5" = rec {
        crateName = "block-padding";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1xbkmysiz23vimd17rnsjpw9bgjxipwfslwyygqlkx4in3dxwygs";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "byte-tools";
            packageId = "byte-tools";
          }
        ];

      };
      "block-padding 0.2.1" = rec {
        crateName = "block-padding";
        version = "0.2.1";
        edition = "2018";
        sha256 = "1bickjlmfw9iv63dp781n589rfybw879mik1va59833m1hvnqscd";
        authors = [
          "RustCrypto Developers"
        ];

      };
      "blocking" = rec {
        crateName = "blocking";
        version = "1.0.2";
        edition = "2018";
        sha256 = "1s9myg9gqmwzrbc38p23bh4vkc8w4pbpddqrcrrl1xz1xpdp1qf5";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "async-channel";
            packageId = "async-channel";
          }
          {
            name = "async-task";
            packageId = "async-task";
          }
          {
            name = "atomic-waker";
            packageId = "atomic-waker";
          }
          {
            name = "fastrand";
            packageId = "fastrand";
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
        ];

      };
      "borrow-graph" = rec {
        crateName = "borrow-graph";
        version = "0.0.1";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "mirai-annotations";
            packageId = "mirai-annotations";
          }
        ];

      };
      "bs58 0.3.1" = rec {
        crateName = "bs58";
        version = "0.3.1";
        edition = "2018";
        sha256 = "1yw3q9fr44ya9k1kzljyq0awn3i2xyl18q7s5zh23qgri7a9qvj7";
        authors = [
          "Wim Looman <wim@nemo157.com>"
        ];
        features = {
          "check" = [ "sha2" ];
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "bs58 0.4.0" = rec {
        crateName = "bs58";
        version = "0.4.0";
        edition = "2018";
        sha256 = "1lr3vwzhhyica4y7rbkf26vr1h7vpjb1m6rml8zcqgw81c2y07vp";
        authors = [
          "Wim Looman <wim@nemo157.com>"
        ];
        features = {
          "check" = [ "sha2" ];
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "bumpalo" = rec {
        crateName = "bumpalo";
        version = "3.6.1";
        edition = "2018";
        sha256 = "1gndni6ng6z1v14lq5zgm1k2y9320w4bc2ijzgyz9qwx9f56nfb3";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "byte-slice-cast" = rec {
        crateName = "byte-slice-cast";
        version = "0.3.5";
        edition = "2018";
        sha256 = "1lwkgp1ahziy0kc6hrczvgxkgbb4qsprak8x7kik7wfbdf8f79dh";
        authors = [
          "Sebastian Dröge <sebastian@centricular.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "byte-tools" = rec {
        crateName = "byte-tools";
        version = "0.3.1";
        edition = "2015";
        sha256 = "1mqi29wsm8njpl51pfwr31wmpzs5ahlcb40wsjyd92l90ixcmdg3";
        authors = [
          "RustCrypto Developers"
        ];

      };
      "bytecode-source-map" = rec {
        crateName = "bytecode-source-map";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "codespan";
            packageId = "codespan 0.8.0";
          }
          {
            name = "codespan-reporting";
            packageId = "codespan-reporting 0.8.0";
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "move-ir-types";
            packageId = "move-ir-types";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
          }
          {
            name = "vm";
            packageId = "vm";
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" "diem-types/dfinance_address" "move-ir-types/dfinance_address" "vm/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" "diem-types/diem_address" "move-ir-types/diem_address" "vm/diem_address" ];
          "fuzzing" = [ "diem-types/fuzzing" ];
          "ps_address" = [ "move-core-types/ps_address" "diem-types/ps_address" "move-ir-types/ps_address" "vm/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "bytecode-verifier" = rec {
        crateName = "bytecode-verifier";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "borrow-graph";
            packageId = "borrow-graph";
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "mirai-annotations";
            packageId = "mirai-annotations";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "petgraph";
            packageId = "petgraph";
          }
          {
            name = "vm";
            packageId = "vm";
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" "diem-types/dfinance_address" "vm/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" "diem-types/diem_address" "vm/diem_address" ];
          "fuzzing" = [ "diem-types/fuzzing" ];
          "ps_address" = [ "move-core-types/ps_address" "diem-types/ps_address" "vm/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "byteorder" = rec {
        crateName = "byteorder";
        version = "1.4.3";
        edition = "2018";
        sha256 = "0456lv9xi1a5bcm32arknf33ikv76p3fr9yzki4lb2897p2qkh8l";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "i128" "std" ];
      };
      "bytes 0.4.12" = rec {
        crateName = "bytes";
        version = "0.4.12";
        edition = "2015";
        sha256 = "0768a55q2fsqdjsvcv98ndg9dq7w2g44dvq1avhwpxrdzbydyvr0";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
        ];
        features = {
          "i128" = [ "byteorder/i128" ];
        };
      };
      "bytes 0.5.6" = rec {
        crateName = "bytes";
        version = "0.5.6";
        edition = "2018";
        sha256 = "0f5s7xq6qzmdh22ygsy8v0sp02m51y0radvq4i4y8cizy1lfqk0f";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "std" ];
      };
      "bytes 1.0.1" = rec {
        crateName = "bytes";
        version = "1.0.1";
        edition = "2018";
        sha256 = "0h6h1c8g3yj2b4k8g25gr3246mq985y0kl3z685cs784fr1ww05p";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "c_linked_list" = rec {
        crateName = "c_linked_list";
        version = "1.1.1";
        edition = "2015";
        sha256 = "0jvjr3233wqgx6li65kciqpg354pvb0cv1i8hc71ka5lsf5m2r29";
        authors = [
          "Andrew Cann <shum@canndrew.org>"
        ];

      };
      "cache-padded" = rec {
        crateName = "cache-padded";
        version = "1.1.1";
        edition = "2018";
        sha256 = "1fkdwv9vjazm6fs3s5v56mm4carwswdmw8fcwm9ygrcvihcya6k3";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];

      };
      "cc" = rec {
        crateName = "cc";
        version = "1.0.67";
        edition = "2018";
        crateBin = [];
        sha256 = "1z9p27ys80shv09zhknmlal8jjra78agdwg97i6jjd6lg83rpip3";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "jobserver";
            packageId = "jobserver";
            optional = true;
          }
        ];
        features = {
          "parallel" = [ "jobserver" ];
        };
        resolvedDefaultFeatures = [ "jobserver" "parallel" ];
      };
      "cfg-if 0.1.10" = rec {
        crateName = "cfg-if";
        version = "0.1.10";
        edition = "2018";
        sha256 = "08h80ihs74jcyp24cd75wwabygbbdgl05k6p5dmq8akbr78vv1a7";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "cfg-if 1.0.0" = rec {
        crateName = "cfg-if";
        version = "1.0.0";
        edition = "2018";
        sha256 = "1za0vb97n4brpzpv8lsbnzmq5r8f2b0cpqqr0sy8h5bn751xxwds";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "chrono" = rec {
        crateName = "chrono";
        version = "0.4.19";
        edition = "2015";
        sha256 = "0wyfl6c00vhfl562spnfcna3zkw8jqvcp652m9iskhl8j26dc2k7";
        authors = [
          "Kang Seonghoon <public+rust@mearie.org>"
          "Brandon W Maister <quodlibetor@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            optional = true;
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
          {
            name = "time";
            packageId = "time";
            optional = true;
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            optional = true;
            target = { target, features }: (target."windows" or false);
            features = [ "std" "minwinbase" "minwindef" "timezoneapi" ];
          }
        ];
        features = {
          "clock" = [ "libc" "std" "winapi" ];
          "default" = [ "clock" "std" "oldtime" ];
          "oldtime" = [ "time" ];
          "unstable-locales" = [ "pure-rust-locales" "alloc" ];
          "wasmbind" = [ "wasm-bindgen" "js-sys" ];
        };
        resolvedDefaultFeatures = [ "clock" "default" "libc" "oldtime" "std" "time" "winapi" ];
      };
      "chunked_transfer" = rec {
        crateName = "chunked_transfer";
        version = "1.4.0";
        edition = "2018";
        sha256 = "0bkdlsrszfcscw3j6yhs7kj6jbp8id47jjk6h9k58px47na5gy7z";
        authors = [
          "Corey Farwell <coreyf@rwell.org>"
        ];

      };
      "cipher" = rec {
        crateName = "cipher";
        version = "0.2.5";
        edition = "2018";
        sha256 = "00b8imbmdg7zdrbaczlivmdfdy09xldg95wl4iijl15xgjcfgy0j";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.4";
          }
        ];
        features = {
          "dev" = [ "blobby" ];
        };
      };
      "clap 2.33.3" = rec {
        crateName = "clap";
        version = "2.33.3";
        edition = "2015";
        sha256 = "00i065a58987k1sbzqmlz721rw521zcg08jmsh40gi3khp3qmr9p";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.11.0";
            optional = true;
            target = { target, features }: (!(target."windows" or false));
          }
          {
            name = "atty";
            packageId = "atty";
            optional = true;
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "strsim";
            packageId = "strsim 0.8.0";
            optional = true;
          }
          {
            name = "textwrap";
            packageId = "textwrap 0.11.0";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
          {
            name = "vec_map";
            packageId = "vec_map";
            optional = true;
          }
        ];
        features = {
          "color" = [ "ansi_term" "atty" ];
          "default" = [ "suggestions" "color" "vec_map" ];
          "doc" = [ "yaml" ];
          "lints" = [ "clippy" ];
          "suggestions" = [ "strsim" ];
          "wrap_help" = [ "term_size" "textwrap/term_size" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "ansi_term" "atty" "color" "default" "strsim" "suggestions" "vec_map" ];
      };
      "clap 3.0.0-beta.2" = rec {
        crateName = "clap";
        version = "3.0.0-beta.2";
        edition = "2018";
        sha256 = "0hm1kivw6190rxbfqhdr4hqwlrijvwh90i3d9dyyw0d5k0chdlab";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
          "Clap Maintainers"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
            optional = true;
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "clap_derive";
            packageId = "clap_derive";
            optional = true;
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
          {
            name = "os_str_bytes";
            packageId = "os_str_bytes";
            features = [ "raw" ];
          }
          {
            name = "strsim";
            packageId = "strsim 0.10.0";
            optional = true;
          }
          {
            name = "termcolor";
            packageId = "termcolor";
            optional = true;
          }
          {
            name = "textwrap";
            packageId = "textwrap 0.12.1";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
          {
            name = "vec_map";
            packageId = "vec_map";
          }
        ];
        devDependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
        ];
        features = {
          "cargo" = [ "lazy_static" ];
          "color" = [ "atty" "termcolor" ];
          "debug" = [ "clap_derive/debug" ];
          "default" = [ "suggestions" "color" "derive" "std" "cargo" ];
          "derive" = [ "clap_derive" "lazy_static" ];
          "doc" = [ "yaml" "regex" ];
          "suggestions" = [ "strsim" ];
          "unstable" = [ "clap_derive/unstable" ];
          "wrap_help" = [ "terminal_size" "textwrap/terminal_size" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "atty" "cargo" "clap_derive" "color" "default" "derive" "lazy_static" "std" "strsim" "suggestions" "termcolor" ];
      };
      "clap_derive" = rec {
        crateName = "clap_derive";
        version = "3.0.0-beta.2";
        edition = "2018";
        sha256 = "18cn82jhcha7m0nkpi1a03jx8k7aaq5kxfcxnsqpaa8ih5dp23rp";
        procMacro = true;
        authors = [
          "Guillaume Pinot <texitoi@texitoi.eu>"
          "Clap Maintainers"
        ];
        dependencies = [
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "proc-macro-error";
            packageId = "proc-macro-error";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "cloudabi" = rec {
        crateName = "cloudabi";
        version = "0.0.3";
        edition = "2015";
        sha256 = "0kxcg83jlihy0phnd2g8c2c303px3l2p3pkjz357ll6llnd5pz6x";
        libPath = "cloudabi.rs";
        authors = [
          "Nuxi (https://nuxi.nl/) and contributors"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
            optional = true;
          }
        ];
        features = {
          "default" = [ "bitflags" ];
        };
        resolvedDefaultFeatures = [ "bitflags" "default" ];
      };
      "codespan 0.8.0" = rec {
        crateName = "codespan";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1cjvbfps0y4m0qzidfq6h2ys00gxd1cfkqmf3ad221lpnqk992aj";
        authors = [
          "Brendan Zabarauskas <bjzaba@yahoo.com.au>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "unicode-segmentation";
            packageId = "unicode-segmentation";
          }
        ];
        features = {
          "serialization" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "serde" "serialization" ];
      };
      "codespan 0.9.5" = rec {
        crateName = "codespan";
        version = "0.9.5";
        edition = "2018";
        sha256 = "12fp1jh5fwqzrkci8rrh0ggpagf522brwwhq7amdcfl6daxzdflf";
        authors = [
          "Brendan Zabarauskas <bjzaba@yahoo.com.au>"
        ];
        dependencies = [
          {
            name = "codespan-reporting";
            packageId = "codespan-reporting 0.9.5";
            optional = true;
          }
        ];
        features = {
          "default" = [ "reporting" ];
          "reporting" = [ "codespan-reporting" ];
          "serialization" = [ "serde" "codespan-reporting/serialization" ];
        };
        resolvedDefaultFeatures = [ "codespan-reporting" "default" "reporting" ];
      };
      "codespan-reporting 0.8.0" = rec {
        crateName = "codespan-reporting";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1jfl96ww7935lm6qj7y4zwj8081sdakslf81hbzj4lkhshbk6330";
        authors = [
          "Brendan Zabarauskas <bjzaba@yahoo.com.au>"
        ];
        dependencies = [
          {
            name = "codespan";
            packageId = "codespan 0.8.0";
          }
          {
            name = "termcolor";
            packageId = "termcolor";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
        ];
        features = {
          "serialization" = [ "serde" "serde/rc" "codespan/serialization" ];
        };
      };
      "codespan-reporting 0.9.5" = rec {
        crateName = "codespan-reporting";
        version = "0.9.5";
        edition = "2018";
        sha256 = "07g86hv1lp5bbr6w6hsa3mgdmavs36igc7k5pi1fvc86ad2n41vf";
        authors = [
          "Brendan Zabarauskas <bjzaba@yahoo.com.au>"
        ];
        dependencies = [
          {
            name = "termcolor";
            packageId = "termcolor";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
        ];
        features = {
          "serialization" = [ "serde" "serde/rc" ];
        };
      };
      "colored" = rec {
        crateName = "colored";
        version = "2.0.0";
        edition = "2015";
        sha256 = "1gbcijscmznzy42rn213yp9ima7210zakgaqibgg1n441dsnyqdk";
        authors = [
          "Thomas Wickham <mackwic@gmail.com>"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            usesDefaultFeatures = false;
            target = { target, features }: (target."windows" or false);
            features = [ "consoleapi" "processenv" "winbase" ];
          }
        ];
        features = {
        };
      };
      "compiled-stdlib" = rec {
        crateName = "compiled-stdlib";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "bytecode-verifier";
            packageId = "bytecode-verifier";
          }
          {
            name = "diem-crypto";
            packageId = "diem-crypto";
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "include_dir";
            packageId = "include_dir";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.5";
          }
          {
            name = "vm";
            packageId = "vm";
          }
        ];
        features = {
          "dfinance_address" = [ "bytecode-verifier/dfinance_address" "diem-types/dfinance_address" "vm/dfinance_address" ];
          "diem_address" = [ "bytecode-verifier/diem_address" "diem-types/diem_address" "vm/diem_address" ];
          "fuzzing" = [ "diem-types/fuzzing" ];
          "ps_address" = [ "bytecode-verifier/ps_address" "diem-types/ps_address" "vm/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "compiler" = rec {
        crateName = "compiler";
        version = "0.1.0";
        edition = "2018";
        crateBin = [];
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "bytecode-source-map";
            packageId = "bytecode-source-map";
          }
          {
            name = "bytecode-verifier";
            packageId = "bytecode-verifier";
          }
          {
            name = "compiled-stdlib";
            packageId = "compiled-stdlib";
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "ir-to-bytecode";
            packageId = "ir-to-bytecode";
          }
          {
            name = "move-ir-types";
            packageId = "move-ir-types";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "structopt";
            packageId = "structopt";
          }
          {
            name = "vm";
            packageId = "vm";
          }
        ];
        features = {
          "dfinance_address" = [ "bytecode-verifier/dfinance_address" "diem-types/dfinance_address" "move-ir-types/dfinance_address" "vm/dfinance_address" "ir-to-bytecode/dfinance_address" "bytecode-source-map/dfinance_address" "compiled-stdlib/dfinance_address" ];
          "diem_address" = [ "bytecode-verifier/diem_address" "diem-types/diem_address" "move-ir-types/diem_address" "vm/diem_address" "ir-to-bytecode/diem_address" "bytecode-source-map/diem_address" "compiled-stdlib/diem_address" ];
          "fuzzing" = [ "diem-types/fuzzing" ];
          "ps_address" = [ "bytecode-verifier/ps_address" "diem-types/ps_address" "move-ir-types/ps_address" "vm/ps_address" "ir-to-bytecode/ps_address" "bytecode-source-map/ps_address" "compiled-stdlib/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "concurrent-queue" = rec {
        crateName = "concurrent-queue";
        version = "1.2.2";
        edition = "2018";
        sha256 = "18w6hblcjjk9d0my3657ra1zdj79gwfjmzvc0b3985g01dahgv9h";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "cache-padded";
            packageId = "cache-padded";
          }
        ];

      };
      "const-random" = rec {
        crateName = "const-random";
        version = "0.1.13";
        edition = "2018";
        sha256 = "1i3pmhmmcdw3rr1pv1p9yhm4danm5r156cpy7w30pa0s05fxk47m";
        authors = [
          "Tom Kaitchuck <Tom.Kaitchuck@gmail.com>"
        ];
        dependencies = [
          {
            name = "const-random-macro";
            packageId = "const-random-macro";
          }
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
          }
        ];

      };
      "const-random-macro" = rec {
        crateName = "const-random-macro";
        version = "0.1.13";
        edition = "2018";
        sha256 = "0h7vvskw1pw5x44sbl74gsi8ydvrj5kaixpjqzxvz8h0s0knwpv1";
        procMacro = true;
        authors = [
          "Tom Kaitchuck <Tom.Kaitchuck@gmail.com>"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom 0.2.3";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
          }
          {
            name = "tiny-keccak";
            packageId = "tiny-keccak";
            features = [ "sha3" ];
          }
        ];

      };
      "constant_time_eq" = rec {
        crateName = "constant_time_eq";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1g3vp04qzmk6cpzrd19yci6a95m7ap6wy7wkwgiy2pjklklrfl14";
        authors = [
          "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
        ];

      };
      "convert_case" = rec {
        crateName = "convert_case";
        version = "0.4.0";
        edition = "2018";
        sha256 = "03jaf1wrsyqzcaah9jf8l1iznvdw5mlsca2qghhzr9w27sddaib2";
        authors = [
          "David Purdum <purdum41@gmail.com>"
        ];
        features = {
          "random" = [ "rand" ];
        };
      };
      "core-foundation" = rec {
        crateName = "core-foundation";
        version = "0.9.1";
        edition = "2015";
        sha256 = "0qhackx0i914nbhcwi6bbxnyyqqldgxc046gviak3a3f8apf528a";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = [
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "mac_os_10_7_support" = [ "core-foundation-sys/mac_os_10_7_support" ];
          "mac_os_10_8_features" = [ "core-foundation-sys/mac_os_10_8_features" ];
          "with-chrono" = [ "chrono" ];
          "with-uuid" = [ "uuid" ];
        };
      };
      "core-foundation-sys" = rec {
        crateName = "core-foundation-sys";
        version = "0.8.2";
        edition = "2015";
        sha256 = "06wq7yb7mlkc4h2kbc0yjfi0xv44z4snzdpr7c1l0zm4hi91n8pa";
        authors = [
          "The Servo Project Developers"
        ];
        features = {
        };
      };
      "cpufeatures" = rec {
        crateName = "cpufeatures";
        version = "0.1.4";
        edition = "2018";
        sha256 = "1j0i97325c2grndsfgnm3lqk0xbyvdl2dbgn8i5dd9yhnmycc07d";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (stdenv.hostPlatform.config == "aarch64-apple-darwin");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."arch" == "aarch64") && (target."os" == "linux"));
          }
        ];

      };
      "cpuid-bool" = rec {
        crateName = "cpuid-bool";
        version = "0.2.0";
        edition = "2018";
        sha256 = "1fpzag3g655p1lr08jgf5n89snjc2ycqx30mm0w3irc9fc3mvcnw";
        authors = [
          "RustCrypto Developers"
        ];

      };
      "crossbeam-channel" = rec {
        crateName = "crossbeam-channel";
        version = "0.5.1";
        edition = "2018";
        sha256 = "1d1dnp61g51gnmc45cb4vpjsr5n62wz22an2y3q6avgifzhjgv86";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "crossbeam-utils/std" ];
        };
        resolvedDefaultFeatures = [ "crossbeam-utils" "default" "std" ];
      };
      "crossbeam-deque" = rec {
        crateName = "crossbeam-deque";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1ad995vzq74k7jd1pgn9zxbacyzj9ii6l0svhlb2dxzy8vxnxbwl";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "crossbeam-epoch";
            packageId = "crossbeam-epoch";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "crossbeam-epoch/std" "crossbeam-utils/std" ];
        };
        resolvedDefaultFeatures = [ "crossbeam-epoch" "crossbeam-utils" "default" "std" ];
      };
      "crossbeam-epoch" = rec {
        crateName = "crossbeam-epoch";
        version = "0.9.4";
        edition = "2018";
        sha256 = "154wkirag9znwyg660ixfjw2wskxw24p0rpxyswzn5svp3m2gysj";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
            usesDefaultFeatures = false;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
          {
            name = "memoffset";
            packageId = "memoffset";
          }
          {
            name = "scopeguard";
            packageId = "scopeguard";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "loom" = [ "loom-crate" "crossbeam-utils/loom" ];
          "nightly" = [ "crossbeam-utils/nightly" "const_fn" ];
          "std" = [ "alloc" "crossbeam-utils/std" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "alloc" "lazy_static" "std" ];
      };
      "crossbeam-utils" = rec {
        crateName = "crossbeam-utils";
        version = "0.8.4";
        edition = "2018";
        sha256 = "0y52m693x5s65z4f54r35ak6m0gmxic8x4hmxldghsjd1lgj7ssg";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "crunchy" = rec {
        crateName = "crunchy";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1dx9mypwd5mpfbbajm78xcrg5lirqk7934ik980mmaffg3hdm0bs";
        authors = [
          "Vurich <jackefransham@hotmail.co.uk>"
        ];
        features = {
          "default" = [ "limit_128" ];
        };
        resolvedDefaultFeatures = [ "default" "limit_128" "std" ];
      };
      "crypto-mac 0.10.0" = rec {
        crateName = "crypto-mac";
        version = "0.10.0";
        edition = "2018";
        sha256 = "19iyh7h9qaqrv29dhbd31rm6pq023ry78nw7jwr3qjy3l22zsms8";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.4";
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.0";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "dev" = [ "blobby" ];
        };
      };
      "crypto-mac 0.7.0" = rec {
        crateName = "crypto-mac";
        version = "0.7.0";
        edition = "2015";
        sha256 = "1rbrq6qy9dl0pj4ym2zy33miaaa8vpzdss60p9bdb58xy46l0d24";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.12.4";
          }
          {
            name = "subtle";
            packageId = "subtle 1.0.0";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "dev" = [ "blobby" ];
        };
      };
      "crypto-mac 0.8.0" = rec {
        crateName = "crypto-mac";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1axfs4zmy74rn9666p92j7nmcv11zdp2d51yrppc2dv26cqa715m";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.4";
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.0";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "dev" = [ "blobby" ];
        };
      };
      "ctor" = rec {
        crateName = "ctor";
        version = "0.1.20";
        edition = "2018";
        sha256 = "0v80naiw5fp81xkyfkds6jpyamf3wx43kz4nif936bkq3any562y";
        procMacro = true;
        authors = [
          "Matt Mastracci <matthew@mastracci.com>"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "full" "parsing" "printing" "proc-macro" ];
          }
        ];

      };
      "ctr" = rec {
        crateName = "ctr";
        version = "0.6.0";
        edition = "2018";
        sha256 = "0zvyf13675hrlc37myj97k5ng7m1mj3d9p4ic4yvyhvl9zak0jpv";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cipher";
            packageId = "cipher";
          }
        ];
        devDependencies = [
          {
            name = "cipher";
            packageId = "cipher";
            features = [ "dev" ];
          }
        ];

      };
      "curve25519-dalek 2.1.0" = rec {
        crateName = "curve25519-dalek";
        version = "2.1.0";
        edition = "2015";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/novifinancial/curve25519-dalek.git";
          rev = "45307baa4584b12df4ca7dc80e7126016c620a51";
          sha256 = "1a81r7w1cr10q2vyj7bh7fr4v4rl3scclbk9wnnlm4rk3v1bs209";
        };
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "digest";
            packageId = "digest 0.8.1";
            usesDefaultFeatures = false;
          }
          {
            name = "fiat-crypto";
            packageId = "fiat-crypto";
            optional = true;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.0";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "zeroize/alloc" ];
          "avx2_backend" = [ "simd_backend" ];
          "default" = [ "std" "u64_backend" ];
          "fiat_u64_backend" = [ "fiat-crypto" ];
          "nightly" = [ "subtle/nightly" ];
          "simd_backend" = [ "nightly" "u64_backend" "packed_simd" ];
          "std" = [ "alloc" "subtle/std" "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "fiat-crypto" "fiat_u64_backend" "std" ];
      };
      "curve25519-dalek 2.1.2" = rec {
        crateName = "curve25519-dalek";
        version = "2.1.2";
        edition = "2015";
        sha256 = "1f4vgprqmiwp8hsi8nr56m40p47bwvqlsks6zr27sqws30h1fkj3";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "digest";
            packageId = "digest 0.8.1";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.0";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "zeroize/alloc" ];
          "avx2_backend" = [ "simd_backend" ];
          "default" = [ "std" "u64_backend" ];
          "nightly" = [ "subtle/nightly" ];
          "simd_backend" = [ "nightly" "u64_backend" "packed_simd" ];
          "std" = [ "alloc" "subtle/std" "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" "u64_backend" ];
      };
      "curve25519-dalek 3.0.0" = rec {
        crateName = "curve25519-dalek";
        version = "3.0.0";
        edition = "2015";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/novifinancial/curve25519-dalek.git";
          rev = "2940429efd0e6482af1531cff079e6605cbc9cf2";
          sha256 = "18h3sky6kp0fyxm3gxirs60vflbj54blq5ciymcxpy2cgzlhwman";
        };
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "fiat-crypto";
            packageId = "fiat-crypto";
            optional = true;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.0";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "zeroize/alloc" ];
          "avx2_backend" = [ "simd_backend" ];
          "default" = [ "std" "u64_backend" ];
          "fiat_u64_backend" = [ "fiat-crypto" ];
          "nightly" = [ "subtle/nightly" ];
          "simd_backend" = [ "nightly" "u64_backend" "packed_simd" ];
          "std" = [ "alloc" "subtle/std" "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "fiat-crypto" "fiat_u64_backend" "std" ];
      };
      "curve25519-dalek 3.1.0" = rec {
        crateName = "curve25519-dalek";
        version = "3.1.0";
        edition = "2015";
        sha256 = "1cqpa41cmc486jmphjnn88549yfjz7ys166pqczq5snvw3yr3633";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.0";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "zeroize/alloc" ];
          "avx2_backend" = [ "simd_backend" ];
          "default" = [ "std" "u64_backend" ];
          "fiat_u32_backend" = [ "fiat-crypto" ];
          "fiat_u64_backend" = [ "fiat-crypto" ];
          "nightly" = [ "subtle/nightly" ];
          "simd_backend" = [ "nightly" "u64_backend" "packed_simd" ];
          "std" = [ "alloc" "subtle/std" "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" "u64_backend" ];
      };
      "data-encoding" = rec {
        crateName = "data-encoding";
        version = "2.3.2";
        edition = "2018";
        sha256 = "0mvd8bjq5mq50fcf931cff57vwmbsvs1kpxynkzrshli98y3kqiy";
        authors = [
          "Julien Cretin <git@ia0.eu>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "derive_more" = rec {
        crateName = "derive_more";
        version = "0.99.14";
        edition = "2018";
        sha256 = "085ksssdwxrnvx9g19g9sfzgn9db8d7lx4j3ah76clg3y77bkisw";
        procMacro = true;
        authors = [
          "Jelte Fennema <github-tech@jeltef.nl>"
        ];
        dependencies = [
          {
            name = "convert_case";
            packageId = "convert_case";
            optional = true;
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        features = {
          "default" = [ "add_assign" "add" "as_mut" "as_ref" "constructor" "deref" "deref_mut" "display" "error" "from" "from_str" "index" "index_mut" "into" "into_iterator" "iterator" "mul_assign" "mul" "not" "sum" "try_into" "is_variant" ];
          "display" = [ "syn/extra-traits" ];
          "error" = [ "syn/extra-traits" ];
          "from" = [ "syn/extra-traits" ];
          "generate-parsing-rs" = [ "peg" ];
          "into" = [ "syn/extra-traits" ];
          "is_variant" = [ "convert_case" ];
          "mul" = [ "syn/extra-traits" ];
          "mul_assign" = [ "syn/extra-traits" ];
          "not" = [ "syn/extra-traits" ];
          "testing-helpers" = [ "rustc_version" ];
          "try_into" = [ "syn/extra-traits" ];
        };
        resolvedDefaultFeatures = [ "add" "add_assign" "as_mut" "as_ref" "constructor" "convert_case" "default" "deref" "deref_mut" "display" "error" "from" "from_str" "index" "index_mut" "into" "into_iterator" "is_variant" "iterator" "mul" "mul_assign" "not" "sum" "try_into" ];
      };
      "dfibra" = rec {
        crateName = "dfibra";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Libra Association <opensource@libra.org>"
        ];
        dependencies = [
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "bytecode-source-map";
            packageId = "bytecode-source-map";
          }
          {
            name = "bytecode-verifier";
            packageId = "bytecode-verifier";
          }
          {
            name = "compiler";
            packageId = "compiler";
          }
          {
            name = "diem-logger";
            packageId = "diem-logger";
          }
          {
            name = "diem-state-view";
            packageId = "diem-state-view";
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-vm";
            packageId = "diem-vm";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "errmapgen";
            packageId = "errmapgen";
          }
          {
            name = "ir-to-bytecode-syntax";
            packageId = "ir-to-bytecode-syntax";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "move-coverage";
            packageId = "move-coverage";
          }
          {
            name = "move-ir-types";
            packageId = "move-ir-types";
          }
          {
            name = "move-lang";
            packageId = "move-lang";
          }
          {
            name = "move-vm-natives";
            packageId = "move-vm-natives";
          }
          {
            name = "move-vm-runtime";
            packageId = "move-vm-runtime";
            features = [ "debug_module" ];
          }
          {
            name = "move-vm-types";
            packageId = "move-vm-types";
          }
          {
            name = "resource-viewer";
            packageId = "resource-viewer";
          }
          {
            name = "vm";
            packageId = "vm";
            rename = "vm";
          }
          {
            name = "vm-genesis";
            packageId = "vm-genesis";
            optional = true;
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" "bytecode-verifier/dfinance_address" "ir-to-bytecode-syntax/dfinance_address" "diem-types/dfinance_address" "move-ir-types/dfinance_address" "move-coverage/dfinance_address" "vm/dfinance_address" "compiler/dfinance_address" "move-lang/dfinance_address" "move-vm-types/dfinance_address" "move-vm-runtime/dfinance_address" "move-vm-natives/dfinance_address" "diem-vm/dfinance_address" "diem-state-view/dfinance_address" "vm-genesis/dfinance_address" "errmapgen/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" "bytecode-verifier/diem_address" "ir-to-bytecode-syntax/diem_address" "diem-types/diem_address" "move-ir-types/diem_address" "move-coverage/diem_address" "vm/diem_address" "compiler/diem_address" "move-lang/diem_address" "move-vm-types/diem_address" "move-vm-runtime/diem_address" "move-vm-natives/diem_address" "diem-vm/diem_address" "diem-state-view/diem_address" "vm-genesis/diem_address" "errmapgen/diem_address" ];
          "ps_address" = [ "move-core-types/ps_address" "bytecode-verifier/ps_address" "ir-to-bytecode-syntax/ps_address" "diem-types/ps_address" "move-ir-types/ps_address" "move-coverage/ps_address" "vm/ps_address" "compiler/ps_address" "move-lang/ps_address" "move-vm-types/ps_address" "move-vm-runtime/ps_address" "move-vm-natives/ps_address" "diem-vm/ps_address" "diem-state-view/ps_address" "vm-genesis/ps_address" "errmapgen/ps_address" ];
        };
        resolvedDefaultFeatures = [ "dfinance_address" "diem_address" "ps_address" "vm-genesis" ];
      };
      "diem-config" = rec {
        crateName = "diem-config";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "diem-crypto";
            packageId = "diem-crypto";
          }
          {
            name = "diem-crypto-derive";
            packageId = "diem-crypto-derive";
          }
          {
            name = "diem-global-constants";
            packageId = "diem-global-constants";
          }
          {
            name = "diem-logger";
            packageId = "diem-logger";
          }
          {
            name = "diem-network-address";
            packageId = "diem-network-address";
          }
          {
            name = "diem-network-address-encryption";
            packageId = "diem-network-address-encryption";
          }
          {
            name = "diem-secure-storage";
            packageId = "diem-secure-storage";
          }
          {
            name = "diem-temppath";
            packageId = "diem-temppath";
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "get_if_addrs";
            packageId = "get_if_addrs";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
            features = [ "serde" ];
          }
          {
            name = "mirai-annotations";
            packageId = "mirai-annotations";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
            features = [ "rc" ];
          }
          {
            name = "serde_yaml";
            packageId = "serde_yaml";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        devDependencies = [
          {
            name = "diem-crypto";
            packageId = "diem-crypto";
            features = [ "fuzzing" ];
          }
        ];
        features = {
          "dfinance_address" = [ "diem-types/dfinance_address" "diem-network-address/dfinance_address" "diem-network-address-encryption/dfinance_address" "diem-secure-storage/dfinance_address" ];
          "diem_address" = [ "diem-types/diem_address" "diem-network-address/diem_address" "diem-network-address-encryption/diem_address" "diem-secure-storage/diem_address" ];
          "fuzzing" = [ "diem-crypto/fuzzing" "diem-types/fuzzing" ];
          "ps_address" = [ "diem-types/ps_address" "diem-network-address/ps_address" "diem-network-address-encryption/ps_address" "diem-secure-storage/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "diem-crypto" = rec {
        crateName = "diem-crypto";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "aes-gcm";
            packageId = "aes-gcm 0.8.0";
          }
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
          }
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek 3.0.0";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" "fiat_u64_backend" ];
          }
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek 3.0.0";
            rename = "vanilla-curve25519-dalek";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "diem-crypto-derive";
            packageId = "diem-crypto-derive";
          }
          {
            name = "diem-nibble";
            packageId = "diem-nibble";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "ed25519-dalek";
            packageId = "ed25519-dalek 1.0.1 (git+https://github.com/novifinancial/ed25519-dalek.git?branch=fiat5#88603ebf0196015e9b4106844f9f47ed6c01e951)";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" "fiat_u64_backend" "serde" ];
          }
          {
            name = "ed25519-dalek";
            packageId = "ed25519-dalek 1.0.1 (git+https://github.com/novifinancial/ed25519-dalek.git?branch=fiat5#88603ebf0196015e9b4106844f9f47ed6c01e951)";
            rename = "vanilla-ed25519-dalek";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "hkdf";
            packageId = "hkdf 0.10.0";
          }
          {
            name = "mirai-annotations";
            packageId = "mirai-annotations";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde-name";
            packageId = "serde-name";
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.5";
          }
          {
            name = "short-hex-str";
            packageId = "short-hex-str";
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "tiny-keccak";
            packageId = "tiny-keccak";
            features = [ "sha3" ];
          }
          {
            name = "x25519-dalek";
            packageId = "x25519-dalek 1.1.0";
            rename = "vanilla-x25519-dalek";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "x25519-dalek";
            packageId = "x25519-dalek 1.1.0";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" "fiat_u64_backend" ];
          }
        ];
        features = {
          "default" = [ "fiat" ];
          "fiat" = [ "curve25519-dalek" "ed25519-dalek" "x25519-dalek" ];
          "fuzzing" = [ "proptest" "proptest-derive" "cloneable-private-keys" ];
          "vanilla-u32" = [ "vanilla-curve25519-dalek/u32_backend" "vanilla-ed25519-dalek/u32_backend" "vanilla-x25519-dalek/u32_backend" ];
          "vanilla-u64" = [ "vanilla-curve25519-dalek/u64_backend" "vanilla-ed25519-dalek/u64_backend" "vanilla-x25519-dalek/u64_backend" ];
        };
        resolvedDefaultFeatures = [ "curve25519-dalek" "default" "ed25519-dalek" "fiat" "x25519-dalek" ];
      };
      "diem-crypto-derive" = rec {
        crateName = "diem-crypto-derive";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        procMacro = true;
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "derive" ];
          }
        ];

      };
      "diem-github-client" = rec {
        crateName = "diem-github-client";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "ureq";
            packageId = "ureq";
            usesDefaultFeatures = false;
            features = [ "json" "native-tls" ];
          }
        ];

      };
      "diem-global-constants" = rec {
        crateName = "diem-global-constants";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];

      };
      "diem-infallible" = rec {
        crateName = "diem-infallible";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
        ];

      };
      "diem-log-derive" = rec {
        crateName = "diem-log-derive";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        procMacro = true;
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "extra-traits" ];
          }
        ];

      };
      "diem-logger" = rec {
        crateName = "diem-logger";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "backtrace";
            packageId = "backtrace";
            features = [ "serde" ];
          }
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "diem-infallible";
            packageId = "diem-infallible";
          }
          {
            name = "diem-log-derive";
            packageId = "diem-log-derive";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "erased-serde";
            packageId = "erased-serde";
          }
          {
            name = "hostname";
            packageId = "hostname";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "prometheus";
            packageId = "prometheus 0.11.0";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
        ];

      };
      "diem-metrics" = rec {
        crateName = "diem-metrics";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "diem-logger";
            packageId = "diem-logger";
          }
          {
            name = "diem-metrics-core";
            packageId = "diem-metrics-core";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "futures";
            packageId = "futures 0.3.15";
          }
          {
            name = "hyper";
            packageId = "hyper";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "prometheus";
            packageId = "prometheus 0.11.0";
            usesDefaultFeatures = false;
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "tokio";
            packageId = "tokio";
          }
        ];

      };
      "diem-metrics-core" = rec {
        crateName = "diem-metrics-core";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "prometheus";
            packageId = "prometheus 0.11.0";
            usesDefaultFeatures = false;
          }
        ];

      };
      "diem-network-address" = rec {
        crateName = "diem-network-address";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "aes-gcm";
            packageId = "aes-gcm 0.8.0";
          }
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "diem-crypto";
            packageId = "diem-crypto";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        devDependencies = [
          {
            name = "diem-crypto";
            packageId = "diem-crypto";
            features = [ "fuzzing" ];
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" ];
          "fuzzing" = [ "proptest" "proptest-derive" "diem-crypto/fuzzing" ];
          "ps_address" = [ "move-core-types/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "diem-network-address-encryption" = rec {
        crateName = "diem-network-address-encryption";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64";
          }
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "diem-global-constants";
            packageId = "diem-global-constants";
          }
          {
            name = "diem-infallible";
            packageId = "diem-infallible";
          }
          {
            name = "diem-logger";
            packageId = "diem-logger";
          }
          {
            name = "diem-network-address";
            packageId = "diem-network-address";
          }
          {
            name = "diem-secure-storage";
            packageId = "diem-secure-storage";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
            features = [ "rc" ];
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" "diem-network-address/dfinance_address" "diem-secure-storage/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" "diem-network-address/diem_address" "diem-secure-storage/diem_address" ];
          "ps_address" = [ "move-core-types/ps_address" "diem-network-address/ps_address" "diem-secure-storage/ps_address" ];
        };
        resolvedDefaultFeatures = [ "dfinance_address" "diem_address" "ps_address" ];
      };
      "diem-nibble" = rec {
        crateName = "diem-nibble";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
        ];
        features = {
          "fuzzing" = [ "proptest" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "diem-secure-storage" = rec {
        crateName = "diem-secure-storage";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64";
          }
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "diem-crypto";
            packageId = "diem-crypto";
          }
          {
            name = "diem-github-client";
            packageId = "diem-github-client";
          }
          {
            name = "diem-infallible";
            packageId = "diem-infallible";
          }
          {
            name = "diem-logger";
            packageId = "diem-logger";
          }
          {
            name = "diem-secure-time";
            packageId = "diem-secure-time";
          }
          {
            name = "diem-temppath";
            packageId = "diem-temppath";
          }
          {
            name = "diem-vault-client";
            packageId = "diem-vault-client";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "enum_dispatch";
            packageId = "enum_dispatch";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
            features = [ "rc" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        devDependencies = [
          {
            name = "diem-crypto";
            packageId = "diem-crypto";
            features = [ "fuzzing" ];
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];
        features = {
          "dfinance_address" = [ "diem-vault-client/dfinance_address" ];
          "diem_address" = [ "diem-vault-client/diem_address" ];
          "fuzzing" = [ "diem-crypto/fuzzing" ];
          "ps_address" = [ "diem-vault-client/ps_address" ];
        };
        resolvedDefaultFeatures = [ "dfinance_address" "diem_address" "ps_address" ];
      };
      "diem-secure-time" = rec {
        crateName = "diem-secure-time";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "diem-infallible";
            packageId = "diem-infallible";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
        ];

      };
      "diem-state-view" = rec {
        crateName = "diem-state-view";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "diem-crypto";
            packageId = "diem-crypto";
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
        ];
        features = {
          "dfinance_address" = [ "diem-types/dfinance_address" ];
          "diem_address" = [ "diem-types/diem_address" ];
          "fuzzing" = [ "diem-types/fuzzing" ];
          "ps_address" = [ "diem-types/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "diem-temppath" = rec {
        crateName = "diem-temppath";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];

      };
      "diem-trace" = rec {
        crateName = "diem-trace";
        version = "0.1.0";
        edition = "2018";
        crateBin = [];
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "diem-logger";
            packageId = "diem-logger";
          }
          {
            name = "diem-metrics";
            packageId = "diem-metrics";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "reqwest";
            packageId = "reqwest";
            usesDefaultFeatures = false;
            features = [ "blocking" "json" ];
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "structopt";
            packageId = "structopt";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" ];
          }
        ];

      };
      "diem-types" = rec {
        crateName = "diem-types";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
          }
          {
            name = "chrono";
            packageId = "chrono";
            usesDefaultFeatures = false;
            features = [ "clock" ];
          }
          {
            name = "diem-crypto";
            packageId = "diem-crypto";
          }
          {
            name = "diem-crypto-derive";
            packageId = "diem-crypto-derive";
          }
          {
            name = "diem-infallible";
            packageId = "diem-infallible";
          }
          {
            name = "diem-network-address";
            packageId = "diem-network-address";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "enum-iterator";
            packageId = "enum-iterator";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "itertools";
            packageId = "itertools 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "mirai-annotations";
            packageId = "mirai-annotations";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "tiny-keccak";
            packageId = "tiny-keccak";
            usesDefaultFeatures = false;
            features = [ "sha3" ];
          }
        ];
        devDependencies = [
          {
            name = "diem-crypto";
            packageId = "diem-crypto";
            features = [ "fuzzing" ];
          }
          {
            name = "diem-network-address";
            packageId = "diem-network-address";
            features = [ "fuzzing" ];
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
            features = [ "fuzzing" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" ];
          "fuzzing" = [ "proptest" "proptest-derive" "diem-proptest-helpers" "diem-crypto/fuzzing" "diem-network-address/fuzzing" "move-core-types/fuzzing" ];
          "ps_address" = [ "move-core-types/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "diem-vault-client" = rec {
        crateName = "diem-vault-client";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64";
          }
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "diem-crypto";
            packageId = "diem-crypto";
          }
          {
            name = "diem-types";
            packageId = "diem-types";
            optional = true;
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "native-tls";
            packageId = "native-tls";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "ureq";
            packageId = "ureq";
            usesDefaultFeatures = false;
            features = [ "json" "native-tls" ];
          }
        ];
        devDependencies = [
          {
            name = "diem-types";
            packageId = "diem-types";
            features = [ "fuzzing" ];
          }
        ];
        features = {
          "dfinance_address" = [ "diem-types/dfinance_address" ];
          "diem_address" = [ "diem-types/diem_address" ];
          "fuzzing" = [ "proptest" "diem-proptest-helpers" "diem-types" ];
          "ps_address" = [ "diem-types/ps_address" ];
        };
        resolvedDefaultFeatures = [ "dfinance_address" "diem-types" "diem_address" "ps_address" ];
      };
      "diem-vm" = rec {
        crateName = "diem-vm";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "diem-crypto";
            packageId = "diem-crypto";
          }
          {
            name = "diem-logger";
            packageId = "diem-logger";
          }
          {
            name = "diem-metrics";
            packageId = "diem-metrics";
          }
          {
            name = "diem-state-view";
            packageId = "diem-state-view";
          }
          {
            name = "diem-trace";
            packageId = "diem-trace";
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "fail";
            packageId = "fail";
          }
          {
            name = "mirai-annotations";
            packageId = "mirai-annotations";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "move-vm-runtime";
            packageId = "move-vm-runtime";
          }
          {
            name = "move-vm-types";
            packageId = "move-vm-types";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "vm";
            packageId = "vm";
          }
        ];
        devDependencies = [
          {
            name = "diem-types";
            packageId = "diem-types";
            features = [ "fuzzing" ];
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" "diem-state-view/dfinance_address" "diem-types/dfinance_address" "move-vm-runtime/dfinance_address" "move-vm-types/dfinance_address" "vm/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" "diem-state-view/diem_address" "diem-types/diem_address" "move-vm-runtime/diem_address" "move-vm-types/diem_address" "vm/diem_address" ];
          "failpoints" = [ "fail/failpoints" "move-vm-runtime/failpoints" ];
          "fuzzing" = [ "vm/fuzzing" "move-vm-types/fuzzing" ];
          "ps_address" = [ "move-core-types/ps_address" "diem-state-view/ps_address" "diem-types/ps_address" "move-vm-runtime/ps_address" "move-vm-types/ps_address" "vm/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "diem-workspace-hack" = rec {
        crateName = "diem-workspace-hack";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            features = [ "i128" "std" ];
          }
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
            features = [ "serde" "std" ];
          }
          {
            name = "cc";
            packageId = "cc";
            features = [ "jobserver" "parallel" ];
          }
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "itertools";
            packageId = "itertools 0.9.0";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "log";
            packageId = "log";
            features = [ "serde" "std" ];
          }
          {
            name = "memchr";
            packageId = "memchr";
            features = [ "std" "use_std" ];
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            features = [ "i128" "std" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            features = [ "i128" "std" ];
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "petgraph";
            packageId = "petgraph";
            features = [ "graphmap" "matrix_graph" "stable_graph" ];
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" "rc" ];
          }
          {
            name = "sha-1";
            packageId = "sha-1";
            features = [ "std" ];
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.0";
            features = [ "i128" "std" ];
          }
        ];
        buildDependencies = [
          {
            name = "syn";
            packageId = "syn";
            features = [ "clone-impls" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" "visit" "visit-mut" ];
          }
        ];

      };
      "difference" = rec {
        crateName = "difference";
        version = "2.0.0";
        edition = "2015";
        crateBin = [];
        sha256 = "1621wx4k8h452p6xzmzzvm7mz87kxh4yqz0kzxfjj9xmjxlbyk2j";
        authors = [
          "Johann Hofmann <mail@johann-hofmann.com>"
        ];
        features = {
          "bin" = [ "getopts" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "digest 0.8.1" = rec {
        crateName = "digest";
        version = "0.8.1";
        edition = "2015";
        sha256 = "1madjl27f3kj5ql7kwgvb9c8b7yb7bv7yfgx7rqzj4i3fp4cil7k";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.12.4";
          }
        ];
        features = {
          "dev" = [ "blobby" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "digest 0.9.0" = rec {
        crateName = "digest";
        version = "0.9.0";
        edition = "2018";
        sha256 = "0rmhvk33rgvd6ll71z8sng91a52rw14p0drjn1da0mqa138n1pfk";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.4";
          }
        ];
        features = {
          "dev" = [ "blobby" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "disassembler" = rec {
        crateName = "disassembler";
        version = "0.1.0";
        edition = "2018";
        crateBin = [
          { name = "disassembler"; path = "src/bin/disassembler.rs"; }
        ];
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ./lang/disassembler; };type = [ "cdylib" "rlib" ];
        authors = [
          "Alex Koz. <alexanderkozlovskii@wings.ai>"
          "Dm. Yakushev <dmitryyakushev@wings.ai>"
          "Maxim Kurnikov <maximkurnikov@wings.ai>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
            usesDefaultFeatures = false;
          }
          {
            name = "anyhow";
            packageId = "anyhow";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "clap";
            packageId = "clap 3.0.0-beta.2";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "git-hash";
            packageId = "git-hash";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "itertools";
            packageId = "itertools 0.9.0";
          }
          {
            name = "move-compat";
            packageId = "move-compat";
            rename = "compat";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "vm";
            packageId = "vm";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            target = { target, features }: (stdenv.hostPlatform.config == "wasm32-unknown-unknown");
          }
        ];
        devDependencies = [
          {
            name = "lang";
            packageId = "lang";
            target = {target, features}: (!(target."arch" == "wasm32"));
          }
        ];
        features = {
          "default" = [ "ps_address" ];
          "dfinance_address" = [ "diem-types/dfinance_address" "move-core-types/dfinance_address" "vm/dfinance_address" "compat/dfinance_address" ];
          "diem_address" = [ "diem-types/diem_address" "move-core-types/diem_address" "vm/diem_address" "compat/diem_address" ];
          "ps_address" = [ "diem-types/ps_address" "move-core-types/ps_address" "vm/ps_address" "compat/ps_address" ];
        };
        resolvedDefaultFeatures = [ "cffi" "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "dnode-rest-client" = rec {
        crateName = "dnode-rest-client";
        version = "0.1.0";
        edition = "2018";
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ./common/dnode-rest-client; };
        authors = [
          "Alex Koz. <a@koz.email>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
            usesDefaultFeatures = false;
          }
          {
            name = "anyhow";
            packageId = "anyhow";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "dfibra";
            packageId = "dfibra";
            rename = "diem";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "reqwest";
            packageId = "reqwest";
            features = [ "blocking" "json" ];
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" "rc" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
        ];
        features = {
          "default" = [ "ps_address" ];
          "dfinance_address" = [ "diem/dfinance_address" ];
          "diem_address" = [ "diem/diem_address" ];
          "ps_address" = [ "diem/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "dove" = rec {
        crateName = "dove";
        version = "1.1.5";
        edition = "2018";
        crateBin = [
          { name = "dove"; path = "src/bin/dove.rs"; }
        ];
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ./dove; };
        authors = [
          "Alex Koz. <alexanderkozlovskii@wings.ai>"
          "Dm. Yakushev <dmitryyakushev@wings.ai>"
          "Maxim Kurnikov <maximkurnikov@wings.ai>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "bech32";
            packageId = "bech32";
          }
          {
            name = "dfibra";
            packageId = "dfibra";
            rename = "diem";
          }
          {
            name = "git-hash";
            packageId = "git-hash";
          }
          {
            name = "git2";
            packageId = "git2";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "itertools";
            packageId = "itertools 0.9.0";
          }
          {
            name = "lang";
            packageId = "lang";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "maplit";
            packageId = "maplit";
          }
          {
            name = "move-executor";
            packageId = "move-executor";
          }
          {
            name = "move-resource-viewer";
            packageId = "move-resource-viewer";
            usesDefaultFeatures = false;
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "reqwest";
            packageId = "reqwest";
            features = [ "blocking" "json" ];
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "structopt";
            packageId = "structopt";
          }
          {
            name = "termcolor";
            packageId = "termcolor";
          }
          {
            name = "tiny-keccak";
            packageId = "tiny-keccak";
            usesDefaultFeatures = false;
            features = [ "sha3" ];
          }
          {
            name = "toml";
            packageId = "toml";
          }
          {
            name = "twox-hash";
            packageId = "twox-hash";
          }
          {
            name = "walkdir";
            packageId = "walkdir";
          }
        ];
        features = {
          "default" = [ "ps_address" ];
          "dfinance_address" = [ "diem/dfinance_address" "lang/dfinance_address" "move-executor/dfinance_address" "move-resource-viewer/dfinance_address" ];
          "diem_address" = [ "diem/diem_address" "lang/diem_address" "move-executor/diem_address" "move-resource-viewer/diem_address" ];
          "ps_address" = [ "diem/ps_address" "lang/ps_address" "move-executor/ps_address" "move-resource-viewer/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "dtoa" = rec {
        crateName = "dtoa";
        version = "0.4.8";
        edition = "2015";
        sha256 = "1c5j0wz118dhrczx6spc5za7dnbfxablr4adyahg9aknrsc9i2an";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];

      };
      "dyn-clonable" = rec {
        crateName = "dyn-clonable";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1m4zlp5phn44znxqj6dkjilxpr5kvyil2ldxp77658h7wvq354jf";
        authors = [
          "Jacob Brown <kardeiz@gmail.com>"
        ];
        dependencies = [
          {
            name = "dyn-clonable-impl";
            packageId = "dyn-clonable-impl";
          }
          {
            name = "dyn-clone";
            packageId = "dyn-clone";
          }
        ];

      };
      "dyn-clonable-impl" = rec {
        crateName = "dyn-clonable-impl";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1icrjdqiriiy6abxpsygyxylgxg2gq5j9z876pslqdrwazm413jm";
        procMacro = true;
        authors = [
          "Jacob Brown <kardeiz@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];

      };
      "dyn-clone" = rec {
        crateName = "dyn-clone";
        version = "1.0.4";
        edition = "2018";
        sha256 = "1kxb16nxiixn558gn82yaq2fl6271jay4rqkrw31lmnprjpjc9pf";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];

      };
      "ed25519" = rec {
        crateName = "ed25519";
        version = "1.1.1";
        edition = "2018";
        sha256 = "1xn80syb553dladvjiw2cvk4w11y86zajrsc50b3j90jbd0n024d";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "signature";
            packageId = "signature";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "signature/std" ];
        };
        resolvedDefaultFeatures = [ "serde" "std" ];
      };
      "ed25519-dalek 1.0.0-pre.4 (git+https://github.com/novifinancial/ed25519-dalek.git?branch=fiat3#b46e8332ec3e6f9a1f5e10faee18af4e2e3ec9c0)" = rec {
        crateName = "ed25519-dalek";
        version = "1.0.0-pre.4";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/novifinancial/ed25519-dalek.git";
          rev = "b46e8332ec3e6f9a1f5e10faee18af4e2e3ec9c0";
          sha256 = "12nhayly5wrbi3k2vzsmzd5mgn8ip48pyyb22b6nkn2w0bnwiwld";
        };
        authors = [
          "isis lovecruft <isis@patternsinthevoid.net>"
        ];
        dependencies = [
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek 2.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "ed25519";
            packageId = "ed25519";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            rename = "serde_crate";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "sha2";
            packageId = "sha2 0.8.2";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" ];
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
        ];
        features = {
          "alloc" = [ "curve25519-dalek/alloc" "rand/alloc" "zeroize/alloc" ];
          "asm" = [ "sha2/asm" ];
          "batch" = [ "merlin" "rand" ];
          "batch_deterministic" = [ "merlin" "rand" "rand_core" ];
          "default" = [ "std" "u64_backend" ];
          "fiat_u64_backend" = [ "curve25519-dalek/fiat_u64_backend" ];
          "nightly" = [ "curve25519-dalek/nightly" "rand/nightly" ];
          "serde" = [ "serde_crate" "ed25519/serde" ];
          "simd_backend" = [ "curve25519-dalek/simd_backend" ];
          "std" = [ "curve25519-dalek/std" "ed25519/std" "serde_crate/std" "sha2/std" "rand/std" ];
          "u32_backend" = [ "curve25519-dalek/u32_backend" ];
          "u64_backend" = [ "curve25519-dalek/u64_backend" ];
        };
        resolvedDefaultFeatures = [ "fiat_u64_backend" "rand" "serde" "serde_crate" "std" ];
      };
      "ed25519-dalek 1.0.1 (git+https://github.com/novifinancial/ed25519-dalek.git?branch=fiat5#88603ebf0196015e9b4106844f9f47ed6c01e951)" = rec {
        crateName = "ed25519-dalek";
        version = "1.0.1";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/novifinancial/ed25519-dalek.git";
          rev = "88603ebf0196015e9b4106844f9f47ed6c01e951";
          sha256 = "1qiivj675vpi0593kw5vclc6l364sq47mb1r0fhqshax1yypkr12";
        };
        authors = [
          "isis lovecruft <isis@patternsinthevoid.net>"
        ];
        dependencies = [
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek 3.0.0";
            usesDefaultFeatures = false;
          }
          {
            name = "ed25519";
            packageId = "ed25519";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            rename = "serde_crate";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
            optional = true;
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.5";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" ];
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
        ];
        features = {
          "alloc" = [ "curve25519-dalek/alloc" "rand/alloc" "zeroize/alloc" ];
          "asm" = [ "sha2/asm" ];
          "batch" = [ "merlin" "rand" ];
          "batch_deterministic" = [ "merlin" "rand" "rand_core" ];
          "default" = [ "std" "rand" "u64_backend" ];
          "fiat_u64_backend" = [ "curve25519-dalek/fiat_u64_backend" ];
          "nightly" = [ "curve25519-dalek/nightly" ];
          "serde" = [ "serde_crate" "serde_bytes" "ed25519/serde" ];
          "simd_backend" = [ "curve25519-dalek/simd_backend" ];
          "std" = [ "curve25519-dalek/std" "ed25519/std" "serde_crate/std" "sha2/std" "rand/std" ];
          "u32_backend" = [ "curve25519-dalek/u32_backend" ];
          "u64_backend" = [ "curve25519-dalek/u64_backend" ];
        };
        resolvedDefaultFeatures = [ "fiat_u64_backend" "rand" "serde" "serde_bytes" "serde_crate" "std" ];
      };
      "ed25519-dalek 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "ed25519-dalek";
        version = "1.0.1";
        edition = "2018";
        sha256 = "17bsriciv93nkm39z22w7mr0h2a3hnbmgf378v4c895gvkkblqn7";
        authors = [
          "isis lovecruft <isis@patternsinthevoid.net>"
        ];
        dependencies = [
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek 3.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "ed25519";
            packageId = "ed25519";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            rename = "serde_crate";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.5";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" ];
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
        ];
        features = {
          "alloc" = [ "curve25519-dalek/alloc" "rand/alloc" "zeroize/alloc" ];
          "asm" = [ "sha2/asm" ];
          "batch" = [ "merlin" "rand" ];
          "batch_deterministic" = [ "merlin" "rand" "rand_core" ];
          "default" = [ "std" "rand" "u64_backend" ];
          "nightly" = [ "curve25519-dalek/nightly" ];
          "serde" = [ "serde_crate" "serde_bytes" "ed25519/serde" ];
          "simd_backend" = [ "curve25519-dalek/simd_backend" ];
          "std" = [ "curve25519-dalek/std" "ed25519/std" "serde_crate/std" "sha2/std" "rand/std" ];
          "u32_backend" = [ "curve25519-dalek/u32_backend" ];
          "u64_backend" = [ "curve25519-dalek/u64_backend" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "rand" "serde_crate" "std" "u64_backend" ];
      };
      "either" = rec {
        crateName = "either";
        version = "1.6.1";
        edition = "2015";
        sha256 = "0mwl9vngqf5jvrhmhn9x60kr5hivxyjxbmby2pybncxfqhf4z3g7";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "encoding_rs" = rec {
        crateName = "encoding_rs";
        version = "0.8.28";
        edition = "2018";
        sha256 = "0rf0r99q4kgjrx22kx7pjyjg4lm21599y3ggvy3hzj2spi7h5pw0";
        authors = [
          "Henri Sivonen <hsivonen@hsivonen.fi>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
        ];
        features = {
          "fast-legacy-encode" = [ "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode" ];
          "simd-accel" = [ "packed_simd" "packed_simd/into_bits" ];
        };
      };
      "enum-iterator" = rec {
        crateName = "enum-iterator";
        version = "0.6.0";
        edition = "2018";
        sha256 = "1mxq9fds22paikg2c95kxkpxych4p1n3yzhca4q7fz8rl4hn76n7";
        authors = [
          "Stephane Raux <stephaneyfx@gmail.com>"
        ];
        dependencies = [
          {
            name = "enum-iterator-derive";
            packageId = "enum-iterator-derive";
          }
        ];

      };
      "enum-iterator-derive" = rec {
        crateName = "enum-iterator-derive";
        version = "0.6.0";
        edition = "2018";
        sha256 = "01pc15d8l0ayrjv7xjjx1lxw2vypvlawcvc9ax7pdp60ywqsm50y";
        procMacro = true;
        authors = [
          "Stephane Raux <stephaneyfx@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "enum_dispatch" = rec {
        crateName = "enum_dispatch";
        version = "0.3.7";
        edition = "2018";
        sha256 = "1y1xmsz44my156clkk04pm9iw6c67qpjip365rms0fcawgyv6lxx";
        procMacro = true;
        authors = [
          "Anton Lazarev <https://antonok.com>"
        ];
        dependencies = [
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];

      };
      "env_logger 0.7.1" = rec {
        crateName = "env_logger";
        version = "0.7.1";
        edition = "2018";
        sha256 = "0djx8h8xfib43g5w94r1m1mkky5spcw4wblzgnhiyg5vnfxknls4";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
            optional = true;
          }
          {
            name = "humantime";
            packageId = "humantime 1.3.0";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            features = [ "std" ];
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
          }
          {
            name = "termcolor";
            packageId = "termcolor";
            optional = true;
          }
        ];
        features = {
          "default" = [ "termcolor" "atty" "humantime" "regex" ];
        };
        resolvedDefaultFeatures = [ "atty" "default" "humantime" "regex" "termcolor" ];
      };
      "env_logger 0.8.3" = rec {
        crateName = "env_logger";
        version = "0.8.3";
        edition = "2018";
        sha256 = "0gwx1pvbv99fj9wpicknyv4p2vj997xpva8ac5dg03m35q0jlf8p";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
            optional = true;
          }
          {
            name = "humantime";
            packageId = "humantime 2.1.0";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            features = [ "std" ];
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" "perf" ];
          }
          {
            name = "termcolor";
            packageId = "termcolor";
            optional = true;
          }
        ];
        features = {
          "default" = [ "termcolor" "atty" "humantime" "regex" ];
        };
        resolvedDefaultFeatures = [ "atty" "default" "humantime" "regex" "termcolor" ];
      };
      "environmental" = rec {
        crateName = "environmental";
        version = "1.1.3";
        edition = "2018";
        sha256 = "15s72bfcvb19nzc5aqn9m3hwg5cj5wx9kffrsyai2i11ms4ikfb8";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "erased-serde" = rec {
        crateName = "erased-serde";
        version = "0.3.13";
        edition = "2018";
        sha256 = "033pma9qgrhk993hya43977z3q9if4vslnj6r1aj9yn1ihd9fr84";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "serde/alloc" ];
          "default" = [ "std" ];
          "std" = [ "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "errmapgen" = rec {
        crateName = "errmapgen";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "spec-lang";
            packageId = "spec-lang";
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" "spec-lang/dfinance_address" "diem-types/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" "spec-lang/diem_address" "diem-types/diem_address" ];
          "ps_address" = [ "move-core-types/ps_address" "spec-lang/ps_address" "diem-types/ps_address" ];
        };
        resolvedDefaultFeatures = [ "dfinance_address" "diem_address" "ps_address" ];
      };
      "event-listener" = rec {
        crateName = "event-listener";
        version = "2.5.1";
        edition = "2018";
        sha256 = "0ndyp41pb2cx7gxijqh4ymnc47nyrvhvir7rvjlw6x09ayb10lzp";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];

      };
      "fail" = rec {
        crateName = "fail";
        version = "0.4.0";
        edition = "2018";
        sha256 = "19l1s48d9ial0rbbwn3h0n0cw8iicbl1x8rypifizjgxb4fcdqrv";
        authors = [
          "The TiKV Project Developers"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log";
            features = [ "std" ];
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];
        features = {
        };
      };
      "failure" = rec {
        crateName = "failure";
        version = "0.1.8";
        edition = "2015";
        sha256 = "11jg1wmbkijrs6bk9fqnbrm9zf0850whnqpgnxyswbn0dk8rnbnk";
        authors = [
          "Without Boats <boats@mozilla.com>"
        ];
        dependencies = [
          {
            name = "backtrace";
            packageId = "backtrace";
            optional = true;
          }
          {
            name = "failure_derive";
            packageId = "failure_derive";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" "derive" ];
          "derive" = [ "failure_derive" ];
          "std" = [ "backtrace" ];
        };
        resolvedDefaultFeatures = [ "backtrace" "default" "derive" "failure_derive" "std" ];
      };
      "failure_derive" = rec {
        crateName = "failure_derive";
        version = "0.1.8";
        edition = "2015";
        sha256 = "1936adqqk080439kx2bjf1bds7h89sg6wcif4jw0syndcv3s6kda";
        procMacro = true;
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
          {
            name = "synstructure";
            packageId = "synstructure";
          }
        ];
        features = {
        };
      };
      "fake-simd" = rec {
        crateName = "fake-simd";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1vfylvk4va2ivqx85603lyqqp0zk52cgbs4n5nfbbbqx577qm2p8";
        authors = [
          "The Rust-Crypto Project Developers"
        ];

      };
      "fastrand" = rec {
        crateName = "fastrand";
        version = "1.4.1";
        edition = "2018";
        sha256 = "1nqv9s76ifsnbym89aik22g87xban90a2vfzq9igg1qykn10bdvp";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "instant";
            packageId = "instant";
            target = { target, features }: (target."arch" == "wasm32");
          }
        ];
        devDependencies = [
          {
            name = "instant";
            packageId = "instant";
            target = {target, features}: (target."arch" == "wasm32");
            features = [ "wasm-bindgen" ];
          }
        ];

      };
      "fiat-crypto" = rec {
        crateName = "fiat-crypto";
        version = "0.1.8";
        edition = "2018";
        sha256 = "0l3q9pc9y67m66npgix0drvb7n772s438bfza77zjf63j536srxh";
        authors = [
          "Fiat Crypto library authors <jgross@mit.edu>"
        ];

      };
      "fixed-hash 0.5.2" = rec {
        crateName = "fixed-hash";
        version = "0.5.2";
        edition = "2018";
        sha256 = "1z7y8b2zky92rg8cz7rg40v9wlxccg0mss6mbnwll7qrxcn9arrk";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "rustc-hex";
            packageId = "rustc-hex";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
        ];
        features = {
          "default" = [ "std" "libc" "rand" "rustc-hex" "byteorder" ];
          "std" = [ "rustc-hex/std" "rand/std" "byteorder/std" ];
        };
        resolvedDefaultFeatures = [ "byteorder" "rand" "rustc-hex" "std" ];
      };
      "fixed-hash 0.6.1" = rec {
        crateName = "fixed-hash";
        version = "0.6.1";
        edition = "2018";
        sha256 = "173m6vw4233wk61s5lys3jlbn6c6qyz805r1zpraidwh4ww8sj8i";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "rustc-hex";
            packageId = "rustc-hex";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
        ];
        features = {
          "default" = [ "std" "rand" "rustc-hex" "byteorder" ];
          "std" = [ "rustc-hex/std" "rand/std" "byteorder/std" ];
        };
        resolvedDefaultFeatures = [ "byteorder" "rand" "rustc-hex" "std" ];
      };
      "fixedbitset" = rec {
        crateName = "fixedbitset";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0kg03p777wc0dajd9pvlcnsyrwa8dhqwf0sd9r4dw0p82rs39arp";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
        };
      };
      "fnv" = rec {
        crateName = "fnv";
        version = "1.0.7";
        edition = "2015";
        sha256 = "1hc2mcqha06aibcaza94vbi81j6pr9a1bbxrxjfhc91zin8yr7iz";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "foreign-types" = rec {
        crateName = "foreign-types";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1cgk0vyd7r45cj769jym4a6s7vwshvd0z4bqrb92q1fwibmkkwzn";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "foreign-types-shared";
            packageId = "foreign-types-shared";
          }
        ];

      };
      "foreign-types-shared" = rec {
        crateName = "foreign-types-shared";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0jxgzd04ra4imjv8jgkmdq59kj8fsz6w4zxsbmlai34h26225c00";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];

      };
      "form_urlencoded" = rec {
        crateName = "form_urlencoded";
        version = "1.0.1";
        edition = "2018";
        sha256 = "1491fmakavcmsjbm3q6iy0bhmn9l422jasdhzx5hkljgza3mmhjz";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 2.1.0";
          }
        ];

      };
      "frame-benchmarking" = rec {
        crateName = "frame-benchmarking";
        version = "2.0.1";
        edition = "2018";
        sha256 = "1nhc2xagrh8y0rk8f58ccbmxx1r7w8g77xlbxflhxlcgv0ylzfaj";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "linregress";
            packageId = "linregress";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "paste";
            packageId = "paste";
          }
          {
            name = "sp-api";
            packageId = "sp-api";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime-interface";
            packageId = "sp-runtime-interface";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-storage";
            packageId = "sp-storage";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "sp-runtime-interface/std" "sp-runtime/std" "sp-api/std" "sp-std/std" "frame-support/std" "frame-system/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "frame-metadata" = rec {
        crateName = "frame-metadata";
        version = "12.0.1";
        edition = "2018";
        sha256 = "0sszpabgr0r186ran3wp4a80y9ggc5lzmnhalq3sqszbv6806831";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "sp-std/std" "sp-core/std" "serde" ];
        };
        resolvedDefaultFeatures = [ "serde" "std" ];
      };
      "frame-support" = rec {
        crateName = "frame-support";
        version = "2.0.1";
        edition = "2018";
        sha256 = "0j071ccngz276rc1c7yv8mk3h6pqcm5a10dbk9dawvcr9fbb6sd5";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "bitmask";
            packageId = "bitmask";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-metadata";
            packageId = "frame-metadata";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-support-procedural";
            packageId = "frame-support-procedural";
          }
          {
            name = "impl-trait-for-tuples";
            packageId = "impl-trait-for-tuples";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "paste";
            packageId = "paste";
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "sp-arithmetic";
            packageId = "sp-arithmetic";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
            optional = true;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-tracing";
            packageId = "sp-tracing";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "once_cell" "bitmask/std" "serde" "sp-io/std" "codec/std" "sp-std/std" "sp-runtime/std" "sp-tracing/std" "sp-arithmetic/std" "frame-metadata/std" "sp-inherents/std" "sp-state-machine" ];
        };
        resolvedDefaultFeatures = [ "once_cell" "serde" "sp-state-machine" "std" ];
      };
      "frame-support-procedural" = rec {
        crateName = "frame-support-procedural";
        version = "2.0.1";
        edition = "2018";
        sha256 = "0yy00282s530jr174skqfc7wcnbf4l93h6cnpgwj5ky5j2jps41w";
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support-procedural-tools";
            packageId = "frame-support-procedural-tools";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];

      };
      "frame-support-procedural-tools" = rec {
        crateName = "frame-support-procedural-tools";
        version = "2.0.1";
        edition = "2018";
        sha256 = "0nqmdcymxxgfznnlwgz1c7n734x01xqwimljvb0hds6zp4asq8yb";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support-procedural-tools-derive";
            packageId = "frame-support-procedural-tools-derive";
          }
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit" ];
          }
        ];

      };
      "frame-support-procedural-tools-derive" = rec {
        crateName = "frame-support-procedural-tools-derive";
        version = "2.0.1";
        edition = "2018";
        sha256 = "0hs8nhj6jhbp5jx4pk4y0vlnfj8k337rh43y8p5vymylfnp75yv6";
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
            features = [ "proc-macro" ];
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "proc-macro" "full" "extra-traits" "parsing" ];
          }
        ];

      };
      "frame-system" = rec {
        crateName = "frame-system";
        version = "2.0.1";
        edition = "2018";
        sha256 = "0frgwk3a88zr394m1bd9k2m1lvbifp812wvc69ckf6a448a43m3b";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "impl-trait-for-tuples";
            packageId = "impl-trait-for-tuples";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-version";
            packageId = "sp-version";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "runtime-benchmarks" = [ "sp-runtime/runtime-benchmarks" "frame-support/runtime-benchmarks" ];
          "std" = [ "serde" "codec/std" "sp-core/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-version/std" ];
        };
        resolvedDefaultFeatures = [ "serde" "std" ];
      };
      "fuchsia-cprng" = rec {
        crateName = "fuchsia-cprng";
        version = "0.1.1";
        edition = "2018";
        sha256 = "1fnkqrbz7ixxzsb04bsz9p0zzazanma8znfdqjvh39n14vapfvx0";
        authors = [
          "Erick Tryzelaar <etryzelaar@google.com>"
        ];

      };
      "fuchsia-zircon" = rec {
        crateName = "fuchsia-zircon";
        version = "0.3.3";
        edition = "2015";
        sha256 = "10jxc5ks1x06gpd0xg51kcjrxr35nj6qhx2zlc5n7bmskv3675rf";
        authors = [
          "Raph Levien <raph@google.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "fuchsia-zircon-sys";
            packageId = "fuchsia-zircon-sys";
          }
        ];

      };
      "fuchsia-zircon-sys" = rec {
        crateName = "fuchsia-zircon-sys";
        version = "0.3.3";
        edition = "2015";
        sha256 = "19zp2085qsyq2bh1gvcxq1lb8w6v6jj9kbdkhpdjrl95fypakjix";
        authors = [
          "Raph Levien <raph@google.com>"
        ];

      };
      "futures 0.1.31" = rec {
        crateName = "futures";
        version = "0.1.31";
        edition = "2015";
        sha256 = "0y46qbmhi37dqkch8dlfq5aninqpzqgrr98awkb3rn4fxww1lirs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "use_std" "with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" "with-deprecated" ];
      };
      "futures 0.3.15" = rec {
        crateName = "futures";
        version = "0.3.15";
        edition = "2018";
        sha256 = "09zwmmfi8d1glhi0bz2didagjyqz3q9gxa7nq4vzmqns0fl46zhf";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-channel";
            packageId = "futures-channel";
            usesDefaultFeatures = false;
            features = [ "sink" ];
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-executor";
            packageId = "futures-executor";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "sink" ];
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" "futures-task/alloc" "futures-sink/alloc" "futures-channel/alloc" "futures-util/alloc" ];
          "async-await" = [ "futures-util/async-await" "futures-util/async-await-macro" ];
          "bilock" = [ "futures-util/bilock" ];
          "compat" = [ "std" "futures-util/compat" ];
          "default" = [ "std" "async-await" "executor" ];
          "executor" = [ "std" "futures-executor/std" ];
          "io-compat" = [ "compat" "futures-util/io-compat" ];
          "read-initializer" = [ "futures-io/read-initializer" "futures-util/read-initializer" ];
          "std" = [ "alloc" "futures-core/std" "futures-task/std" "futures-io/std" "futures-sink/std" "futures-util/std" "futures-util/io" "futures-util/channel" ];
          "thread-pool" = [ "executor" "futures-executor/thread-pool" ];
          "unstable" = [ "futures-core/unstable" "futures-task/unstable" "futures-channel/unstable" "futures-io/unstable" "futures-util/unstable" ];
          "write-all-vectored" = [ "futures-util/write-all-vectored" ];
        };
        resolvedDefaultFeatures = [ "alloc" "async-await" "compat" "default" "executor" "futures-executor" "std" "thread-pool" ];
      };
      "futures-channel" = rec {
        crateName = "futures-channel";
        version = "0.3.15";
        edition = "2018";
        sha256 = "1qki53g079ymjkgdxg3rlh5yivys8qvdqhy18l2xz0m8565sd0p6";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" ];
          "default" = [ "std" ];
          "sink" = [ "futures-sink" ];
          "std" = [ "alloc" "futures-core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "futures-sink" "sink" "std" ];
      };
      "futures-core" = rec {
        crateName = "futures-core";
        version = "0.3.15";
        edition = "2018";
        sha256 = "1lbrw5087ndaqvbjrckbz9ld4ya67k72d6w87c22d6m8v1jzf0h4";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "futures-executor" = rec {
        crateName = "futures-executor";
        version = "0.3.15";
        edition = "2018";
        sha256 = "0ydbmzg6ig9gankp2nspaq668r3ngzss4806dliygjgs16lsdnms";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "futures-core/std" "futures-task/std" "futures-util/std" ];
          "thread-pool" = [ "std" "num_cpus" ];
        };
        resolvedDefaultFeatures = [ "num_cpus" "std" "thread-pool" ];
      };
      "futures-io" = rec {
        crateName = "futures-io";
        version = "0.3.15";
        edition = "2018";
        sha256 = "1899vd5yri6zv88by53pzxb1h4x96mc42riziy6qyd1vzgg9ki5c";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "futures-lite" = rec {
        crateName = "futures-lite";
        version = "1.11.3";
        edition = "2018";
        sha256 = "1ywmyvpy4f348jri8rxhpj59a7bvy12pspm59x5207fys061sj5l";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "Contributors to futures-rs"
        ];
        dependencies = [
          {
            name = "fastrand";
            packageId = "fastrand";
            optional = true;
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
          {
            name = "parking";
            packageId = "parking";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.6";
          }
          {
            name = "waker-fn";
            packageId = "waker-fn";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" "fastrand" "futures-io" "parking" "memchr/std" "waker-fn" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "fastrand" "futures-io" "parking" "std" "waker-fn" ];
      };
      "futures-macro" = rec {
        crateName = "futures-macro";
        version = "0.3.15";
        edition = "2018";
        sha256 = "08fixp6b34lr58cs85kacp3h599bi63njvfd03655pvc92c05i54";
        procMacro = true;
        authors = [
          "Taylor Cramer <cramertj@google.com>"
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];

      };
      "futures-sink" = rec {
        crateName = "futures-sink";
        version = "0.3.15";
        edition = "2018";
        sha256 = "10j21j3k358512qyglqpfyxj309kr6bcspj6izg6s3gzrv8flyx5";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "futures-task" = rec {
        crateName = "futures-task";
        version = "0.3.15";
        edition = "2018";
        sha256 = "1bixscylw61w61dizqxhrdlnb8mv7yg9h775pssxsk8szkwvw5la";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "futures-timer" = rec {
        crateName = "futures-timer";
        version = "3.0.2";
        edition = "2018";
        sha256 = "0b5v7lk9838ix6jdcrainsyrh7xrf24pwm61dp13907qkn806jz6";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "wasm-bindgen" = [ "gloo-timers" "send_wrapper" ];
        };
      };
      "futures-util" = rec {
        crateName = "futures-util";
        version = "0.3.15";
        edition = "2018";
        sha256 = "0rqr36zy4na270kn9fwk866adx1xkv1b49zxzm7zjavys8wc5dgy";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.1.31";
            rename = "futures_01";
            optional = true;
          }
          {
            name = "futures-channel";
            packageId = "futures-channel";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-macro";
            packageId = "futures-macro";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.6";
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
            optional = true;
          }
          {
            name = "proc-macro-nested";
            packageId = "proc-macro-nested";
            optional = true;
          }
          {
            name = "slab";
            packageId = "slab";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" "futures-task/alloc" ];
          "async-await-macro" = [ "async-await" "futures-macro" "proc-macro-hack" "proc-macro-nested" ];
          "channel" = [ "std" "futures-channel" ];
          "compat" = [ "std" "futures_01" ];
          "default" = [ "std" "async-await" "async-await-macro" ];
          "io" = [ "std" "futures-io" "memchr" ];
          "io-compat" = [ "io" "compat" "tokio-io" ];
          "read-initializer" = [ "io" "futures-io/read-initializer" "futures-io/unstable" ];
          "sink" = [ "futures-sink" ];
          "std" = [ "alloc" "futures-core/std" "futures-task/std" "slab" ];
          "unstable" = [ "futures-core/unstable" "futures-task/unstable" ];
          "write-all-vectored" = [ "io" ];
        };
        resolvedDefaultFeatures = [ "alloc" "async-await" "async-await-macro" "channel" "compat" "futures-channel" "futures-io" "futures-macro" "futures-sink" "futures_01" "io" "memchr" "proc-macro-hack" "proc-macro-nested" "sink" "slab" "std" ];
      };
      "gcc" = rec {
        crateName = "gcc";
        version = "0.3.55";
        edition = "2015";
        crateBin = [];
        sha256 = "1hng1sajn4r67hndvhjysswz8niayjwvcj42zphpxzhbz89kjpwg";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "parallel" = [ "rayon" ];
        };
      };
      "generic-array 0.12.4" = rec {
        crateName = "generic-array";
        version = "0.12.4";
        edition = "2015";
        sha256 = "1gfpay78vijl9vrwl1k9v7fbvbhkhcmnrk4kfg9l6x24y4s9zpzz";
        libName = "generic_array";
        authors = [
          "Bartłomiej Kamiński <fizyk20@gmail.com>"
          "Aaron Trent <novacrazy@gmail.com>"
        ];
        dependencies = [
          {
            name = "typenum";
            packageId = "typenum";
          }
        ];

      };
      "generic-array 0.14.4" = rec {
        crateName = "generic-array";
        version = "0.14.4";
        edition = "2015";
        sha256 = "05qqwm9v5asbil9z28wjkmpfvs1c5c99n8n9gwxis3d3r3n6c52h";
        libName = "generic_array";
        authors = [
          "Bartłomiej Kamiński <fizyk20@gmail.com>"
          "Aaron Trent <novacrazy@gmail.com>"
        ];
        dependencies = [
          {
            name = "typenum";
            packageId = "typenum";
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
        };
      };
      "get_if_addrs" = rec {
        crateName = "get_if_addrs";
        version = "0.5.3";
        edition = "2015";
        sha256 = "1xsfxq3ga63vllw5k6pxpdlfp3m6fh8jiga865gr4cldi5dbbpdb";
        authors = [
          "MaidSafe Developers <dev@maidsafe.net>"
        ];
        dependencies = [
          {
            name = "c_linked_list";
            packageId = "c_linked_list";
          }
          {
            name = "get_if_addrs-sys";
            packageId = "get_if_addrs-sys";
            target = { target, features }: (target."os" == "android");
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
            target = { target, features }: (target."os" == "windows");
          }
        ];

      };
      "get_if_addrs-sys" = rec {
        crateName = "get_if_addrs-sys";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0j5bypizbk59jhkaw1abkx7ydj79pplfvwq03hcnpwvcfkxzj10d";
        libPath = "lib.rs";
        authors = [
          "MaidSafe Developers <dev@maidsafe.net>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "gcc";
            packageId = "gcc";
          }
        ];

      };
      "getrandom 0.1.16" = rec {
        crateName = "getrandom";
        version = "0.1.16";
        edition = "2018";
        sha256 = "1kjzmz60qx9mn615ks1akjbf36n3lkv27zfwbcam0fzmj56wphwg";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "wasi";
            packageId = "wasi 0.9.0+wasi-snapshot-preview1";
            target = { target, features }: (target."os" == "wasi");
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "compiler_builtins" "core" ];
          "test-in-browser" = [ "wasm-bindgen" ];
          "wasm-bindgen" = [ "bindgen" "js-sys" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "getrandom 0.2.3" = rec {
        crateName = "getrandom";
        version = "0.2.3";
        edition = "2018";
        sha256 = "0lr7mnkvnzdh1xxmwmhhbm4gwg29k3m2rzhpjmjm4k2jcfa9kkbz";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "wasi";
            packageId = "wasi 0.10.0+wasi-snapshot-preview1";
            target = { target, features }: (target."os" == "wasi");
          }
        ];
        features = {
          "js" = [ "wasm-bindgen" "js-sys" ];
          "rustc-dep-of-std" = [ "compiler_builtins" "core" "libc/rustc-dep-of-std" "wasi/rustc-dep-of-std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "ghash" = rec {
        crateName = "ghash";
        version = "0.3.1";
        edition = "2018";
        sha256 = "0xd362xh17hadc2194dd6kjjq0ak1j4x7kkmfmpq9hw2s564wc4p";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
          {
            name = "polyval";
            packageId = "polyval";
            features = [ "mulx" ];
          }
        ];
        features = {
          "std" = [ "polyval/std" ];
        };
      };
      "gimli" = rec {
        crateName = "gimli";
        version = "0.24.0";
        edition = "2018";
        sha256 = "12c1arfrzvw0lxy487wm66xb3vn7wy0r1v5hvn32fri6cqw7ah0f";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "Philip Craig <philipjcraig@gmail.com>"
        ];
        features = {
          "default" = [ "read" "write" "std" "fallible-iterator" "endian-reader" ];
          "endian-reader" = [ "stable_deref_trait" ];
          "rustc-dep-of-std" = [ "core" "alloc" "compiler_builtins" ];
          "std" = [ "fallible-iterator/std" "stable_deref_trait/std" ];
          "write" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "read" ];
      };
      "git-hash" = rec {
        crateName = "git-hash";
        version = "0.1.0";
        edition = "2018";
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ./common/git-hash; };
        procMacro = true;
        authors = [
          "Alex Koz. <a@koz.email>"
        ];

      };
      "git2" = rec {
        crateName = "git2";
        version = "0.13.19";
        edition = "2018";
        sha256 = "067sfa0pb9qjrkzpahiiq4j7nklpnhm4py8lm9l9zslx4gkrv4hp";
        authors = [
          "Josh Triplett <josh@joshtriplett.org>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libgit2-sys";
            packageId = "libgit2-sys";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "openssl-probe";
            packageId = "openssl-probe";
            optional = true;
            target = { target, features }: ((target."unix" or false) && (!(target."os" == "macos")));
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            optional = true;
            target = { target, features }: ((target."unix" or false) && (!(target."os" == "macos")));
          }
          {
            name = "url";
            packageId = "url 2.2.2";
          }
        ];
        features = {
          "default" = [ "ssh" "https" "ssh_key_from_memory" ];
          "https" = [ "libgit2-sys/https" "openssl-sys" "openssl-probe" ];
          "ssh" = [ "libgit2-sys/ssh" ];
          "ssh_key_from_memory" = [ "libgit2-sys/ssh_key_from_memory" ];
          "vendored-openssl" = [ "openssl-sys/vendored" ];
          "zlib-ng-compat" = [ "libgit2-sys/zlib-ng-compat" ];
        };
        resolvedDefaultFeatures = [ "default" "https" "openssl-probe" "openssl-sys" "ssh" "ssh_key_from_memory" ];
      };
      "glob" = rec {
        crateName = "glob";
        version = "0.3.0";
        edition = "2015";
        sha256 = "0x25wfr7vg3mzxc9x05dcphvd3nwlcmbnxrvwcvrrdwplcrrk4cv";
        authors = [
          "The Rust Project Developers"
        ];

      };
      "gloo-timers" = rec {
        crateName = "gloo-timers";
        version = "0.2.1";
        edition = "2018";
        sha256 = "07w999jm1r1i8r574qbmsa3l4w3gxhyx04cbllg0m4pzm934l827";
        authors = [
          "Rust and WebAssembly Working Group"
        ];
        dependencies = [
          {
            name = "futures-channel";
            packageId = "futures-channel";
            optional = true;
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            optional = true;
          }
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            features = [ "Window" "WorkerGlobalScope" ];
          }
        ];
        features = {
          "futures" = [ "futures-core" "futures-channel" ];
        };
        resolvedDefaultFeatures = [ "default" "futures" "futures-channel" "futures-core" ];
      };
      "h2" = rec {
        crateName = "h2";
        version = "0.2.7";
        edition = "2018";
        sha256 = "0dd5jyxmmy88pdmvag7n41k9z1qs6sliagcyx4jss5292byjhisy";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "io-util" ];
          }
          {
            name = "tokio-util";
            packageId = "tokio-util";
            features = [ "codec" ];
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
            features = [ "std" "log" ];
          }
          {
            name = "tracing-futures";
            packageId = "tracing-futures";
            usesDefaultFeatures = false;
            features = [ "std-future" ];
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "dns" "macros" "rt-core" "sync" "tcp" ];
          }
        ];
        features = {
        };
      };
      "hash-db" = rec {
        crateName = "hash-db";
        version = "0.15.2";
        edition = "2015";
        sha256 = "0jinaqwwr960a0i93gkgy8091fn8zn0v7s07lgrx187dnpkx8fyj";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "hash256-std-hasher" = rec {
        crateName = "hash256-std-hasher";
        version = "0.15.2";
        edition = "2015";
        sha256 = "1wpw3sr931daagy2ri19rk0kd6q90kq0h246sd73yqwqbgap3hcj";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "crunchy";
            packageId = "crunchy";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "hashbrown 0.6.3" = rec {
        crateName = "hashbrown";
        version = "0.6.3";
        edition = "2018";
        sha256 = "1bbf9k46v57zi41m6hjwn83rjldyipv5zwxmdsa7a9c1rb876q4f";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "ahash";
            packageId = "ahash 0.2.19";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7";
          }
        ];
        features = {
          "ahash-compile-time-rng" = [ "ahash/compile-time-rng" ];
          "default" = [ "ahash" "ahash-compile-time-rng" "inline-more" ];
          "rustc-dep-of-std" = [ "nightly" "core" "compiler_builtins" "alloc" "rustc-internal-api" ];
        };
        resolvedDefaultFeatures = [ "ahash" "ahash-compile-time-rng" "default" "inline-more" ];
      };
      "hashbrown 0.8.2" = rec {
        crateName = "hashbrown";
        version = "0.8.2";
        edition = "2018";
        sha256 = "09cckr5l71ypvfdbvv1qsag4222blixwn9300hpbr831j3vn46z9";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "ahash";
            packageId = "ahash 0.3.8";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "ahash-compile-time-rng" = [ "ahash/compile-time-rng" ];
          "default" = [ "ahash" "inline-more" ];
          "rustc-dep-of-std" = [ "nightly" "core" "compiler_builtins" "alloc" "rustc-internal-api" ];
        };
        resolvedDefaultFeatures = [ "ahash" "default" "inline-more" ];
      };
      "hashbrown 0.9.1" = rec {
        crateName = "hashbrown";
        version = "0.9.1";
        edition = "2018";
        sha256 = "016dsm9s4xmxlkw2jfikm54qlz6vyk0qr280gab7kzp342jf9byp";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "ahash";
            packageId = "ahash 0.4.7";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "ahash-compile-time-rng" = [ "ahash/compile-time-rng" ];
          "default" = [ "ahash" "inline-more" ];
          "rustc-dep-of-std" = [ "nightly" "core" "compiler_builtins" "alloc" "rustc-internal-api" ];
        };
        resolvedDefaultFeatures = [ "ahash" "raw" ];
      };
      "heck" = rec {
        crateName = "heck";
        version = "0.3.2";
        edition = "2018";
        sha256 = "1b56s2c1ymdd0qmy31bw0ndhm31hcdamnhg3npp7ssrmc1ag9jw7";
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = [
          {
            name = "unicode-segmentation";
            packageId = "unicode-segmentation";
          }
        ];

      };
      "hermit-abi" = rec {
        crateName = "hermit-abi";
        version = "0.1.18";
        edition = "2018";
        sha256 = "0p6czgbk1izviwxzm6ypy3vz2wqj1yd3ab03wp82xqjng7klsbrj";
        authors = [
          "Stefan Lankes"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins/rustc-dep-of-std" "libc/rustc-dep-of-std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "hex" = rec {
        crateName = "hex";
        version = "0.4.3";
        edition = "2018";
        sha256 = "0w1a4davm1lgzpamwnba907aysmlrnygbqmfis2mqjx5m552a93z";
        authors = [
          "KokaKiwi <kokakiwi@kokakiwi.net>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "hkdf 0.10.0" = rec {
        crateName = "hkdf";
        version = "0.10.0";
        edition = "2018";
        sha256 = "0kwn3scjvv2x8zc6nz3wrnzxp9shpsdxnjqiyv2r65r3kiijzasi";
        libPath = "src/hkdf.rs";
        authors = [
          "vladikoff"
          "warner"
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "hmac";
            packageId = "hmac 0.10.1";
          }
        ];
        features = {
        };
      };
      "hkdf 0.9.0" = rec {
        crateName = "hkdf";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1jdvmf8aadk3s0kn9kk3dj00nprjk9glks5f8dm55r43af34j4gy";
        libPath = "src/hkdf.rs";
        authors = [
          "vladikoff"
          "warner"
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "hmac";
            packageId = "hmac 0.8.1";
          }
        ];
        features = {
        };
      };
      "hmac 0.10.1" = rec {
        crateName = "hmac";
        version = "0.10.1";
        edition = "2018";
        sha256 = "058yxq54x7xn0gk2vy9bl51r32c9z7qlcl2b80bjh3lk3rmiqi61";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.10.0";
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
        ];
        devDependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.10.0";
            features = [ "dev" ];
          }
        ];
        features = {
          "std" = [ "crypto-mac/std" ];
        };
      };
      "hmac 0.7.1" = rec {
        crateName = "hmac";
        version = "0.7.1";
        edition = "2015";
        sha256 = "15cnwpssp2n1kdm9x7abir67f2hp3q6rdfj1mcck3hm4rmj5xjsx";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.7.0";
          }
          {
            name = "digest";
            packageId = "digest 0.8.1";
          }
        ];
        devDependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.7.0";
            features = [ "dev" ];
          }
        ];

      };
      "hmac 0.8.1" = rec {
        crateName = "hmac";
        version = "0.8.1";
        edition = "2018";
        sha256 = "0h48wc7iysh4xd6ci4prh8bb7nszijrh9w3blaaq8a6cilk8hs0j";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.8.0";
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
        ];
        devDependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.8.0";
            features = [ "dev" ];
          }
        ];

      };
      "hmac-drbg" = rec {
        crateName = "hmac-drbg";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0yqskpca1jmxsfzl9xc0wylkxdhk0i9xv35lh5jhzwck2i2p1rf6";
        authors = [
          "Wei Tang <hi@that.world>"
        ];
        dependencies = [
          {
            name = "digest";
            packageId = "digest 0.8.1";
          }
          {
            name = "generic-array";
            packageId = "generic-array 0.12.4";
          }
          {
            name = "hmac";
            packageId = "hmac 0.7.1";
          }
        ];

      };
      "hostname" = rec {
        crateName = "hostname";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0rz8yf70cvzl3nry71m4bz9w6x4j9kdz3qng6pnwhk2h20z1qwrw";
        authors = [
          "fengcen <fengcen.love@gmail.com>"
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."unix" or false) || (target."os" == "redox"));
          }
          {
            name = "match_cfg";
            packageId = "match_cfg";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
            features = [ "sysinfoapi" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "http" = rec {
        crateName = "http";
        version = "0.2.4";
        edition = "2018";
        sha256 = "04fcnqbnqmrsnphz5lbca2plascsm8bib5csd518bqj7qyd8qzjj";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.0.1";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
        ];

      };
      "http-body" = rec {
        crateName = "http-body";
        version = "0.3.1";
        edition = "2018";
        sha256 = "06qi0ni45lb92w3ml260c0bxbq5zd4snjmz0a9k69xq6021zzm8k";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Lucio Franco <luciofranco14@gmail.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
          }
          {
            name = "http";
            packageId = "http";
          }
        ];

      };
      "httparse" = rec {
        crateName = "httparse";
        version = "1.4.1";
        edition = "2015";
        sha256 = "0s2y7ki3sxyf1ynp0mm2k3mgafigy23d7g0rzci3rs9pdrhppa7k";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "httpdate" = rec {
        crateName = "httpdate";
        version = "0.3.2";
        edition = "2015";
        sha256 = "0izbd3sf0625wm4rrfv85xa4xa8j4n1ldxhwlkgff4cm6rh4sjs9";
        authors = [
          "Pyfisch <pyfisch@gmail.com>"
        ];
        features = {
        };
      };
      "humantime 1.3.0" = rec {
        crateName = "humantime";
        version = "1.3.0";
        edition = "2015";
        sha256 = "0krwgbf35pd46xvkqg14j070vircsndabahahlv3rwhflpy4q06z";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
        ];
        dependencies = [
          {
            name = "quick-error";
            packageId = "quick-error";
          }
        ];

      };
      "humantime 2.1.0" = rec {
        crateName = "humantime";
        version = "2.1.0";
        edition = "2018";
        sha256 = "1r55pfkkf5v0ji1x6izrjwdq9v6sc7bv99xj6srywcar37xmnfls";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
        ];

      };
      "hyper" = rec {
        crateName = "hyper";
        version = "0.13.10";
        edition = "2018";
        sha256 = "1fwndqc3glvzg7vna3aaf5pdkkdm3422ayc6z393w2krcmq1avwa";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
          }
          {
            name = "futures-channel";
            packageId = "futures-channel";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
          {
            name = "h2";
            packageId = "h2";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "http-body";
            packageId = "http-body";
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "httpdate";
            packageId = "httpdate";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.7";
          }
          {
            name = "socket2";
            packageId = "socket2 0.3.19";
            optional = true;
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "sync" ];
          }
          {
            name = "tower-service";
            packageId = "tower-service";
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
            features = [ "log" "std" ];
          }
          {
            name = "want";
            packageId = "want";
          }
        ];
        devDependencies = [
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "fs" "macros" "io-std" "rt-util" "sync" "time" "test-util" ];
          }
        ];
        features = {
          "default" = [ "runtime" "stream" ];
          "runtime" = [ "tcp" "tokio/rt-core" ];
          "tcp" = [ "socket2" "tokio/blocking" "tokio/tcp" "tokio/time" ];
        };
        resolvedDefaultFeatures = [ "default" "runtime" "socket2" "stream" "tcp" ];
      };
      "hyper-tls" = rec {
        crateName = "hyper-tls";
        version = "0.4.3";
        edition = "2018";
        sha256 = "1vcfyz7dxavf4brns15afmj5fxz88lbn05rrpbfqsnybdp2sqyfr";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
          }
          {
            name = "hyper";
            packageId = "hyper";
            usesDefaultFeatures = false;
            features = [ "tcp" ];
          }
          {
            name = "native-tls";
            packageId = "native-tls";
          }
          {
            name = "tokio";
            packageId = "tokio";
          }
          {
            name = "tokio-tls";
            packageId = "tokio-tls";
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "io-std" "macros" ];
          }
        ];
        features = {
          "vendored" = [ "native-tls/vendored" ];
        };
      };
      "idna 0.1.5" = rec {
        crateName = "idna";
        version = "0.1.5";
        edition = "2015";
        sha256 = "0kl4gs5kaydn4v07c6ka33spm9qdh2np0x7iw7g5zd8z1c7rxw1q";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "unicode-bidi";
            packageId = "unicode-bidi";
          }
          {
            name = "unicode-normalization";
            packageId = "unicode-normalization";
          }
        ];

      };
      "idna 0.2.3" = rec {
        crateName = "idna";
        version = "0.2.3";
        edition = "2018";
        sha256 = "1y7ca2w5qp9msgl57n03zqp78gq1bk2crqzg6kv7a542mdphm2j1";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "unicode-bidi";
            packageId = "unicode-bidi";
          }
          {
            name = "unicode-normalization";
            packageId = "unicode-normalization";
          }
        ];

      };
      "impl-codec" = rec {
        crateName = "impl-codec";
        version = "0.4.2";
        edition = "2015";
        sha256 = "0lxzqr0mda4mbz31q8i2m4d5ch8083ck5mgslan0wyq63f91mr8v";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "parity-scale-codec/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "impl-serde" = rec {
        crateName = "impl-serde";
        version = "0.3.1";
        edition = "2018";
        sha256 = "0vyz1n3vqp39npnb9fv3if61gql0zxmgcp6fbyjhf5wknv9a8z5l";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "impl-trait-for-tuples" = rec {
        crateName = "impl-trait-for-tuples";
        version = "0.1.3";
        edition = "2018";
        sha256 = "178dj87q4hk2mbkmm25gc102hsh5c74d82grf470lx738855bxby";
        procMacro = true;
        authors = [
          "Bastian Köcher <git@kchr.de>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit" "fold" "extra-traits" ];
          }
        ];

      };
      "include_dir" = rec {
        crateName = "include_dir";
        version = "0.6.0";
        edition = "2018";
        sha256 = "06n6x9l8jnc3laifs8hgbp1h86bqcc84n23c228lc71bnbg8pm93";
        authors = [
          "Michael Bryan <michaelfbryan@gmail.com>"
        ];
        dependencies = [
          {
            name = "glob";
            packageId = "glob";
            optional = true;
          }
          {
            name = "include_dir_impl";
            packageId = "include_dir_impl";
          }
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
          }
        ];
        features = {
          "default" = [ "search" ];
          "search" = [ "glob" ];
        };
        resolvedDefaultFeatures = [ "default" "glob" "search" ];
      };
      "include_dir_impl" = rec {
        crateName = "include_dir_impl";
        version = "0.6.0";
        edition = "2018";
        sha256 = "05bjyp1wa9f7kpx9gdws2llls52n324mr8nws4j9v0bl0nbnjy1j";
        procMacro = true;
        authors = [
          "Michael Bryan <michaelfbryan@gmail.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "indexmap" = rec {
        crateName = "indexmap";
        version = "1.6.2";
        edition = "2018";
        sha256 = "1wxfh55zlrlpdxfcvvvj6wwc46f23cnb0j9q71190yl9pyh4aj42";
        authors = [
          "bluss"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "hashbrown";
            packageId = "hashbrown 0.9.1";
            usesDefaultFeatures = false;
            features = [ "raw" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "serde-1" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "serde" "serde-1" ];
      };
      "instant" = rec {
        crateName = "instant";
        version = "0.1.9";
        edition = "2018";
        sha256 = "1v659qqm55misvjijfbl1p7azjp4yynjbwldan8836ynpgp4w4k1";
        authors = [
          "sebcrozet <developer@crozet.re>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
        ];
        features = {
          "now" = [ "time" ];
          "wasm-bindgen" = [ "js-sys" "wasm-bindgen_rs" "web-sys" ];
        };
      };
      "integer-sqrt" = rec {
        crateName = "integer-sqrt";
        version = "0.1.5";
        edition = "2015";
        sha256 = "0w6pzmgvs1mldkhafbwg9x7wzr0af3ngkimyb1gy97jarcdw6vi7";
        authors = [
          "Richard Dodd <richard.o.dodd@gmail.com>"
          "Joseph Richey"
          "Sergei Shulepov"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
        ];

      };
      "iovec" = rec {
        crateName = "iovec";
        version = "0.1.4";
        edition = "2015";
        sha256 = "0ph73qygwx8i0mblrf110cj59l00gkmsgrpzz1rm85syz5pymcxj";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
        ];

      };
      "ipnet" = rec {
        crateName = "ipnet";
        version = "2.3.0";
        edition = "2015";
        sha256 = "0db147nh8jnxr23yxa7hwqn7dcjivdqi3aq4mgf2zgkqqqa2zgj7";
        authors = [
          "Kris Price <kris@krisprice.nz>"
        ];

      };
      "ir-to-bytecode" = rec {
        crateName = "ir-to-bytecode";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "bytecode-source-map";
            packageId = "bytecode-source-map";
          }
          {
            name = "codespan";
            packageId = "codespan 0.8.0";
          }
          {
            name = "codespan-reporting";
            packageId = "codespan-reporting 0.8.0";
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "ir-to-bytecode-syntax";
            packageId = "ir-to-bytecode-syntax";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "move-ir-types";
            packageId = "move-ir-types";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "vm";
            packageId = "vm";
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" ];
          "fuzzing" = [ "diem-types/fuzzing" ];
          "ps_address" = [ "move-core-types/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "ir-to-bytecode-syntax" = rec {
        crateName = "ir-to-bytecode-syntax";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "codespan";
            packageId = "codespan 0.8.0";
            features = [ "serialization" ];
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "move-ir-types";
            packageId = "move-ir-types";
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" "move-ir-types/dfinance_address" "diem-types/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" "move-ir-types/diem_address" "diem-types/diem_address" ];
          "fuzzing" = [ "diem-types/fuzzing" ];
          "ps_address" = [ "move-core-types/ps_address" "move-ir-types/ps_address" "diem-types/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "itertools 0.8.2" = rec {
        crateName = "itertools";
        version = "0.8.2";
        edition = "2015";
        sha256 = "1154j48aw913v5jnyhpxialxhdn2sfpl4d7bwididyb1r05jsspm";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "itertools 0.9.0" = rec {
        crateName = "itertools";
        version = "0.9.0";
        edition = "2018";
        sha256 = "0jyml7ygr7kijkcjdl3fk5f34y5h5jsavclim7l13zjiavw1hkr8";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "itoa" = rec {
        crateName = "itoa";
        version = "0.4.7";
        edition = "2015";
        sha256 = "0di7fggbknwfjcw8cgzm1dnm3ik32l2m1f7nmyh8ipmh45h069fx";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "i128" "std" ];
      };
      "jobserver" = rec {
        crateName = "jobserver";
        version = "0.1.22";
        edition = "2018";
        sha256 = "1zg7p4khibisbvd8b1lqvvni6lr00g49d4bq2zj6m76bs7jmlbwp";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
        ];

      };
      "js-sys" = rec {
        crateName = "js-sys";
        version = "0.3.51";
        edition = "2018";
        sha256 = "0qkhnsidcx4vkgacn4hhl6bf6lxhc3lljfzpad11ms50wfngpgc3";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
        ];

      };
      "jsonrpc-client-transports" = rec {
        crateName = "jsonrpc-client-transports";
        version = "15.1.0";
        edition = "2018";
        sha256 = "1mybk2jhqlgd0x1rnjml1ghs2mdv7jsgqh5ba7vndiv05rhrr6s8";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "failure";
            packageId = "failure";
          }
          {
            name = "futures";
            packageId = "futures 0.1.31";
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "jsonrpc-pubsub";
            packageId = "jsonrpc-pubsub";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "url";
            packageId = "url 1.7.2";
          }
        ];
        features = {
          "arbitrary_precision" = [ "serde_json/arbitrary_precision" "jsonrpc-core/arbitrary_precision" ];
          "default" = [ "http" "tls" "ws" ];
          "http" = [ "hyper" ];
          "ipc" = [ "parity-tokio-ipc" "jsonrpc-server-utils" "tokio" ];
          "tls" = [ "hyper-tls" "http" ];
          "ws" = [ "websocket" "tokio" ];
        };
      };
      "jsonrpc-core" = rec {
        crateName = "jsonrpc-core";
        version = "15.1.0";
        edition = "2018";
        sha256 = "1ylig5lb8fkdlxqkw0r0fhjf8x07g64ka87chhy8kp1ykqvsci87";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.1.31";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
        ];
        features = {
          "arbitrary_precision" = [ "serde_json/arbitrary_precision" ];
        };
      };
      "jsonrpc-core-client" = rec {
        crateName = "jsonrpc-core-client";
        version = "15.1.0";
        edition = "2018";
        sha256 = "1nwlgnz9y82hsqxi8lk903dwdxzn69gn4rfb195394dqsw14jxkg";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "jsonrpc-client-transports";
            packageId = "jsonrpc-client-transports";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "arbitrary_precision" = [ "jsonrpc-client-transports/arbitrary_precision" ];
          "http" = [ "jsonrpc-client-transports/http" ];
          "ipc" = [ "jsonrpc-client-transports/ipc" ];
          "tls" = [ "jsonrpc-client-transports/tls" ];
          "ws" = [ "jsonrpc-client-transports/ws" ];
        };
      };
      "jsonrpc-derive" = rec {
        crateName = "jsonrpc-derive";
        version = "15.1.0";
        edition = "2018";
        sha256 = "18v3fmx4hfildg0vivmqqvznw396rg4ifskqn94j3dbvxkwlga4r";
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "extra-traits" "visit" "fold" ];
          }
        ];

      };
      "jsonrpc-pubsub" = rec {
        crateName = "jsonrpc-pubsub";
        version = "15.1.0";
        edition = "2018";
        sha256 = "0xwwig672n32qnyqgr8g4bs2pr3aa2cgflmfhybvw4s0c3h5i5b3";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.10.2";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "serde";
            packageId = "serde";
          }
        ];

      };
      "keccak" = rec {
        crateName = "keccak";
        version = "0.1.0";
        edition = "2015";
        sha256 = "19ybbvxrdk9yy65rk7f5ad0hcxszkjwph68yzkj3954lnir1bhk7";
        authors = [
          "RustCrypto Developers"
        ];
        features = {
        };
      };
      "kernel32-sys" = rec {
        crateName = "kernel32-sys";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1389av0601a9yz8dvx5zha9vmkd6ik7ax0idpb032d28555n41vm";
        libName = "kernel32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];

      };
      "kv-log-macro" = rec {
        crateName = "kv-log-macro";
        version = "1.0.7";
        edition = "2018";
        sha256 = "0zwp4bxkkp87rl7xy2dain77z977rvcry1gmr5bssdbn541v7s0d";
        authors = [
          "Yoshua Wuyts <yoshuawuyts@gmail.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log";
            features = [ "kv_unstable" ];
          }
        ];

      };
      "kvdb" = rec {
        crateName = "kvdb";
        version = "0.7.0";
        edition = "2018";
        sha256 = "16izwkx8bwf5j5l5qddrv0hxrczjcg1127xk01288cwfd0pyy583";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-util-mem";
            packageId = "parity-util-mem";
            usesDefaultFeatures = false;
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
        ];

      };
      "lang" = rec {
        crateName = "lang";
        version = "0.1.0";
        edition = "2018";
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ./lang; };
        authors = [
          "Alex Koz. <alexanderkozlovskii@wings.ai>"
          "Dm. Yakushev <dmitryyakushev@wings.ai>"
          "Maxim Kurnikov <maximkurnikov@wings.ai>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "bech32";
            packageId = "bech32";
          }
          {
            name = "blake2-rfc";
            packageId = "blake2-rfc";
          }
          {
            name = "codespan";
            packageId = "codespan 0.8.0";
          }
          {
            name = "codespan";
            packageId = "codespan 0.9.5";
            rename = "codespan9";
          }
          {
            name = "codespan-reporting";
            packageId = "codespan-reporting 0.8.0";
          }
          {
            name = "codespan-reporting";
            packageId = "codespan-reporting 0.9.5";
            rename = "codespan-reporting9";
          }
          {
            name = "dfibra";
            packageId = "dfibra";
            rename = "diem";
          }
          {
            name = "disassembler";
            packageId = "disassembler";
            usesDefaultFeatures = false;
          }
          {
            name = "env_logger";
            packageId = "env_logger 0.7.1";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "itertools";
            packageId = "itertools 0.9.0";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "lsp-types";
            packageId = "lsp-types";
          }
          {
            name = "move-compat";
            packageId = "move-compat";
            rename = "compat";
            usesDefaultFeatures = false;
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=master#c46b32d73087ed2afc6c1ac3e78535cac37e3fa9)";
            rename = "diem-move-core-types";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "rust-base58";
            packageId = "rust-base58";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "walkdir";
            packageId = "walkdir";
          }
        ];
        devDependencies = [
          {
            name = "include_dir";
            packageId = "include_dir";
          }
        ];
        features = {
          "dfinance_address" = [ "diem/dfinance_address" "disassembler/dfinance_address" "compat/dfinance_address" ];
          "diem_address" = [ "diem/diem_address" "disassembler/diem_address" "compat/diem_address" ];
          "ps_address" = [ "diem/ps_address" "disassembler/ps_address" "compat/ps_address" ];
        };
        resolvedDefaultFeatures = [ "dfinance_address" "diem_address" "ps_address" ];
      };
      "lazy_static" = rec {
        crateName = "lazy_static";
        version = "1.4.0";
        edition = "2015";
        sha256 = "0in6ikhw8mgl33wjv6q6xfrb5b9jr16q8ygjy803fay4zcisvaz2";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        features = {
          "spin_no_std" = [ "spin" ];
        };
      };
      "lazycell" = rec {
        crateName = "lazycell";
        version = "1.3.0";
        edition = "2015";
        sha256 = "0m8gw7dn30i0zjjpjdyf6pc16c34nl71lpv461mix50x3p70h3c3";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Nikita Pekin <contact@nikitapek.in>"
        ];
        features = {
          "nightly-testing" = [ "clippy" "nightly" ];
        };
      };
      "libc" = rec {
        crateName = "libc";
        version = "0.2.94";
        edition = "2015";
        sha256 = "0phs3ivwq2hmwgwd9nwy3b5jbqcipbgr6pdmj3vj34xjsn54ly8q";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "align" "default" "std" ];
      };
      "libgit2-sys" = rec {
        crateName = "libgit2-sys";
        version = "0.12.20+1.1.0";
        edition = "2018";
        sha256 = "0jv60axsz8nv3pll66hpv0bclb6sbaxp487798csvf80gs8hjbqy";
        libName = "libgit2_sys";
        libPath = "lib.rs";
        authors = [
          "Josh Triplett <josh@joshtriplett.org>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libssh2-sys";
            packageId = "libssh2-sys";
            optional = true;
          }
          {
            name = "libz-sys";
            packageId = "libz-sys";
            usesDefaultFeatures = false;
            features = [ "libc" ];
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            optional = true;
            target = { target, features }: (target."unix" or false);
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            features = [ "parallel" ];
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
        ];
        features = {
          "https" = [ "openssl-sys" ];
          "ssh" = [ "libssh2-sys" ];
          "zlib-ng-compat" = [ "libz-sys/zlib-ng" "libssh2-sys/zlib-ng-compat" ];
        };
        resolvedDefaultFeatures = [ "https" "libssh2-sys" "openssl-sys" "ssh" "ssh_key_from_memory" ];
      };
      "libm" = rec {
        crateName = "libm";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0akh56sh51adhagmk9l84dyrlz60gv8ri05xhr13i1b18czkpmy7";
        authors = [
          "Jorge Aparicio <jorge@japaric.io>"
        ];
        features = {
          "musl-reference-tests" = [ "rand" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "libp2p" = rec {
        crateName = "libp2p";
        version = "0.28.1";
        edition = "2018";
        sha256 = "0x024b99fcl052apfyjkkwr1bb99vvgl388xcmshv9610i35l7sp";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "atomic";
            packageId = "atomic";
          }
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
          }
          {
            name = "futures";
            packageId = "futures 0.3.15";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "libp2p-core-derive";
            packageId = "libp2p-core-derive";
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm";
          }
          {
            name = "multihash";
            packageId = "multihash";
          }
          {
            name = "parity-multiaddr";
            packageId = "parity-multiaddr";
            rename = "multiaddr";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.10.2";
          }
          {
            name = "pin-project";
            packageId = "pin-project 0.4.28";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        features = {
          "default" = [ "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns-async-std" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux" ];
          "deflate" = [ "libp2p-deflate" ];
          "dns" = [ "libp2p-dns" ];
          "floodsub" = [ "libp2p-floodsub" ];
          "gossipsub" = [ "libp2p-gossipsub" ];
          "identify" = [ "libp2p-identify" ];
          "kad" = [ "libp2p-kad" ];
          "mdns-async-std" = [ "libp2p-mdns" "libp2p-mdns/async-std" ];
          "mdns-tokio" = [ "libp2p-mdns" "libp2p-mdns/tokio" ];
          "mplex" = [ "libp2p-mplex" ];
          "noise" = [ "libp2p-noise" ];
          "ping" = [ "libp2p-ping" ];
          "plaintext" = [ "libp2p-plaintext" ];
          "pnet" = [ "libp2p-pnet" ];
          "request-response" = [ "libp2p-request-response" ];
          "secp256k1" = [ "libp2p-core/secp256k1" ];
          "tcp-async-std" = [ "libp2p-tcp" "libp2p-tcp/async-std" ];
          "tcp-tokio" = [ "libp2p-tcp" "libp2p-tcp/tokio" ];
          "uds" = [ "libp2p-uds" ];
          "wasm-ext" = [ "libp2p-wasm-ext" ];
          "wasm-ext-websocket" = [ "wasm-ext" "libp2p-wasm-ext/websocket" ];
          "websocket" = [ "libp2p-websocket" ];
          "yamux" = [ "libp2p-yamux" ];
        };
      };
      "libp2p-core" = rec {
        crateName = "libp2p-core";
        version = "0.22.1";
        edition = "2018";
        sha256 = "09adfmvpssma399j4ld3qf6fhz9carnnk4dk5spnh1yzqyl3pwaj";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "asn1_der";
            packageId = "asn1_der";
          }
          {
            name = "bs58";
            packageId = "bs58 0.3.1";
          }
          {
            name = "ed25519-dalek";
            packageId = "ed25519-dalek 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures 0.3.15";
            features = [ "executor" "thread-pool" ];
          }
          {
            name = "futures-timer";
            packageId = "futures-timer";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libsecp256k1";
            packageId = "libsecp256k1";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "multihash";
            packageId = "multihash";
          }
          {
            name = "multistream-select";
            packageId = "multistream-select";
          }
          {
            name = "parity-multiaddr";
            packageId = "parity-multiaddr";
            rename = "multiaddr";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.10.2";
          }
          {
            name = "pin-project";
            packageId = "pin-project 0.4.28";
          }
          {
            name = "prost";
            packageId = "prost";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "ring";
            packageId = "ring";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
            features = [ "alloc" "std" ];
          }
          {
            name = "rw-stream-sink";
            packageId = "rw-stream-sink";
          }
          {
            name = "sha2";
            packageId = "sha2 0.8.2";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.4.0";
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "zeroize";
            packageId = "zeroize";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build";
          }
        ];
        features = {
          "default" = [ "secp256k1" ];
          "secp256k1" = [ "libsecp256k1" ];
        };
        resolvedDefaultFeatures = [ "default" "libsecp256k1" "secp256k1" ];
      };
      "libp2p-core-derive" = rec {
        crateName = "libp2p-core-derive";
        version = "0.20.2";
        edition = "2018";
        sha256 = "04r2s9d3m9lp8jlg4srx2nag51ww4q6wva5q0jzi9v6k9hrdjlzp";
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "clone-impls" "derive" "parsing" "printing" "proc-macro" ];
          }
        ];

      };
      "libp2p-swarm" = rec {
        crateName = "libp2p-swarm";
        version = "0.22.0";
        edition = "2018";
        sha256 = "18ganqpcgh4lkdr1kxrwyp94n71zwmzyqmdph5xj6ch1452f94vi";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "futures";
            packageId = "futures 0.3.15";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];

      };
      "libra-canonical-serialization" = rec {
        crateName = "libra-canonical-serialization";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "c46b32d73087ed2afc6c1ac3e78535cac37e3fa9";
          sha256 = "01n9ib9kg4a0mai0pp982wy2gypfyz4bk3ahmcr1q96mg6dv7ljk";
        };
        authors = [
          "Libra Association <opensource@libra.org>"
        ];
        dependencies = [
          {
            name = "libra-workspace-hack";
            packageId = "libra-workspace-hack";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        features = {
          "fuzzing" = [ "libra-crypto/fuzzing" ];
        };
      };
      "libra-crypto" = rec {
        crateName = "libra-crypto";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "c46b32d73087ed2afc6c1ac3e78535cac37e3fa9";
          sha256 = "01n9ib9kg4a0mai0pp982wy2gypfyz4bk3ahmcr1q96mg6dv7ljk";
        };
        authors = [
          "Libra Association <opensource@libra.org>"
        ];
        dependencies = [
          {
            name = "aes-gcm";
            packageId = "aes-gcm 0.6.0";
          }
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
          }
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek 2.1.0";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" "fiat_u64_backend" ];
          }
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek 2.1.0";
            rename = "vanilla-curve25519-dalek";
            optional = true;
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "ed25519-dalek";
            packageId = "ed25519-dalek 1.0.0-pre.4 (git+https://github.com/novifinancial/ed25519-dalek.git?branch=fiat3#b46e8332ec3e6f9a1f5e10faee18af4e2e3ec9c0)";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" "fiat_u64_backend" "serde" ];
          }
          {
            name = "ed25519-dalek";
            packageId = "ed25519-dalek 1.0.0-pre.4 (git+https://github.com/novifinancial/ed25519-dalek.git?branch=fiat3#b46e8332ec3e6f9a1f5e10faee18af4e2e3ec9c0)";
            rename = "vanilla-ed25519-dalek";
            optional = true;
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "hkdf";
            packageId = "hkdf 0.9.0";
          }
          {
            name = "libra-canonical-serialization";
            packageId = "libra-canonical-serialization";
            rename = "lcs";
          }
          {
            name = "libra-crypto-derive";
            packageId = "libra-crypto-derive";
          }
          {
            name = "libra-nibble";
            packageId = "libra-nibble";
          }
          {
            name = "libra-workspace-hack";
            packageId = "libra-workspace-hack";
          }
          {
            name = "mirai-annotations";
            packageId = "mirai-annotations";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde-name";
            packageId = "serde-name";
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.5";
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "tiny-keccak";
            packageId = "tiny-keccak";
            features = [ "sha3" ];
          }
          {
            name = "x25519-dalek";
            packageId = "x25519-dalek 0.6.0";
            rename = "vanilla-x25519-dalek";
            optional = true;
          }
          {
            name = "x25519-dalek";
            packageId = "x25519-dalek 0.6.0";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" "fiat_u64_backend" ];
          }
        ];
        features = {
          "default" = [ "fiat" ];
          "fiat" = [ "curve25519-dalek" "ed25519-dalek" "x25519-dalek" ];
          "fuzzing" = [ "proptest" "proptest-derive" "cloneable-private-keys" ];
          "vanilla" = [ "vanilla-curve25519-dalek" "vanilla-ed25519-dalek" "vanilla-x25519-dalek" ];
        };
        resolvedDefaultFeatures = [ "curve25519-dalek" "ed25519-dalek" "fiat" "x25519-dalek" ];
      };
      "libra-crypto-derive" = rec {
        crateName = "libra-crypto-derive";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "c46b32d73087ed2afc6c1ac3e78535cac37e3fa9";
          sha256 = "01n9ib9kg4a0mai0pp982wy2gypfyz4bk3ahmcr1q96mg6dv7ljk";
        };
        procMacro = true;
        authors = [
          "Libra Association <opensource@libra.org>"
        ];
        dependencies = [
          {
            name = "libra-workspace-hack";
            packageId = "libra-workspace-hack";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "derive" ];
          }
        ];

      };
      "libra-nibble" = rec {
        crateName = "libra-nibble";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "c46b32d73087ed2afc6c1ac3e78535cac37e3fa9";
          sha256 = "01n9ib9kg4a0mai0pp982wy2gypfyz4bk3ahmcr1q96mg6dv7ljk";
        };
        authors = [
          "Libra Association <opensource@libra.org>"
        ];
        dependencies = [
          {
            name = "libra-workspace-hack";
            packageId = "libra-workspace-hack";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
        ];
        features = {
          "fuzzing" = [ "proptest" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "libra-workspace-hack" = rec {
        crateName = "libra-workspace-hack";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "c46b32d73087ed2afc6c1ac3e78535cac37e3fa9";
          sha256 = "01n9ib9kg4a0mai0pp982wy2gypfyz4bk3ahmcr1q96mg6dv7ljk";
        };
        authors = [
          "Libra Association <opensource@libra.org>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
            features = [ "serde" "std" ];
          }
          {
            name = "cc";
            packageId = "cc";
            features = [ "jobserver" "parallel" ];
          }
          {
            name = "log";
            packageId = "log";
            features = [ "serde" "std" ];
          }
          {
            name = "memchr";
            packageId = "memchr";
            features = [ "std" "use_std" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            features = [ "std" ];
          }
          {
            name = "petgraph";
            packageId = "petgraph";
            features = [ "graphmap" "matrix_graph" "stable_graph" ];
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" "rc" ];
          }
          {
            name = "sha-1";
            packageId = "sha-1";
            features = [ "std" ];
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.0";
            features = [ "i128" "std" ];
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "clone-impls" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" "visit" "visit-mut" ];
          }
        ];

      };
      "libsecp256k1" = rec {
        crateName = "libsecp256k1";
        version = "0.3.5";
        edition = "2018";
        sha256 = "0qkrmqj55zginqyvhs6ciwy6lcylzm94f1x2dpf666j8134f5h8z";
        libName = "secp256k1";
        authors = [
          "Wei Tang <hi@that.world>"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "crunchy";
            packageId = "crunchy";
          }
          {
            name = "digest";
            packageId = "digest 0.8.1";
          }
          {
            name = "hmac-drbg";
            packageId = "hmac-drbg";
            optional = true;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            usesDefaultFeatures = false;
          }
          {
            name = "sha2";
            packageId = "sha2 0.8.2";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.0";
            usesDefaultFeatures = false;
          }
          {
            name = "typenum";
            packageId = "typenum";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" "hmac" ];
          "hmac" = [ "hmac-drbg" "sha2" "typenum" ];
          "std" = [ "subtle/std" "rand/std" "sha2/std" ];
        };
        resolvedDefaultFeatures = [ "default" "hmac" "hmac-drbg" "sha2" "std" "typenum" ];
      };
      "libssh2-sys" = rec {
        crateName = "libssh2-sys";
        version = "0.2.21";
        edition = "2015";
        sha256 = "1vnbb64svnah7a871r6ml845vbcbi58yr42ckimswwgiv3q6l670";
        libName = "libssh2_sys";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Wez Furlong <wez@wezfurlong.org>"
          "Matteo Bigoi <bigo@crisidev.org>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libz-sys";
            packageId = "libz-sys";
            usesDefaultFeatures = false;
            features = [ "libc" ];
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            target = { target, features }: (target."unix" or false);
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
          "vendored-openssl" = [ "openssl-sys/vendored" ];
          "zlib-ng-compat" = [ "libz-sys/zlib-ng" ];
        };
      };
      "libz-sys" = rec {
        crateName = "libz-sys";
        version = "1.1.3";
        edition = "2015";
        sha256 = "0rpcxkccjn8da9114kvl8hrnrkspzsmdn0qcxlix85lwajw3am6y";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
          "default" = [ "libc" "stock-zlib" ];
          "zlib-ng" = [ "libc" "cmake" ];
        };
        resolvedDefaultFeatures = [ "libc" ];
      };
      "linked-hash-map" = rec {
        crateName = "linked-hash-map";
        version = "0.5.4";
        edition = "2015";
        sha256 = "1ww8zsraqnvrsknd315481185igwkx5n14xnhq5i8216z65b7fbz";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
        ];
        features = {
          "heapsize_impl" = [ "heapsize" ];
          "serde_impl" = [ "serde" "serde_test" ];
        };
      };
      "linregress" = rec {
        crateName = "linregress";
        version = "0.1.7";
        edition = "2018";
        sha256 = "1jdaq3nlw1indvxbyaqalyhs0lnlv3czmilnq2wywxl5j9pwz44j";
        authors = [
          "Nils Mehrtens <nils@hasinila.de>"
        ];
        dependencies = [
          {
            name = "failure";
            packageId = "failure";
          }
          {
            name = "nalgebra";
            packageId = "nalgebra";
          }
          {
            name = "statrs";
            packageId = "statrs";
          }
        ];
        features = {
        };
      };
      "lock_api 0.3.4" = rec {
        crateName = "lock_api";
        version = "0.3.4";
        edition = "2018";
        sha256 = "0xgc5dzmajh0akbh5d6d7rj9mh5rzpk74pyrc946v2ixgakj9nn4";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "scopeguard";
            packageId = "scopeguard";
            usesDefaultFeatures = false;
          }
        ];
        features = {
        };
      };
      "lock_api 0.4.4" = rec {
        crateName = "lock_api";
        version = "0.4.4";
        edition = "2018";
        sha256 = "1sq7pw7h7jbfvnv5nq3vm912gdwhhv8idi3njifd3xnz0q38i0h3";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "scopeguard";
            packageId = "scopeguard";
            usesDefaultFeatures = false;
          }
        ];
        features = {
        };
      };
      "log" = rec {
        crateName = "log";
        version = "0.4.14";
        edition = "2015";
        sha256 = "04175hv0v62shd82qydq58a48k3bjijmk54v38zgqlbxqkkbpfai";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "value-bag";
            packageId = "value-bag";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "value-bag";
            packageId = "value-bag";
            features = [ "test" ];
          }
        ];
        features = {
          "kv_unstable" = [ "value-bag" ];
          "kv_unstable_serde" = [ "kv_unstable_std" "value-bag/serde" "serde" ];
          "kv_unstable_std" = [ "std" "kv_unstable" "value-bag/error" ];
          "kv_unstable_sval" = [ "kv_unstable" "value-bag/sval" "sval" ];
        };
        resolvedDefaultFeatures = [ "kv_unstable" "serde" "std" "value-bag" ];
      };
      "lru" = rec {
        crateName = "lru";
        version = "0.4.3";
        edition = "2015";
        sha256 = "0ds2l1rkbxw7v16c51bhnxyrhbjs1rz58kvxhp7xmfp5vrfk8286";
        authors = [
          "Jerome Froelich <jeromefroelic@hotmail.com>"
        ];
        dependencies = [
          {
            name = "hashbrown";
            packageId = "hashbrown 0.6.3";
            optional = true;
          }
        ];
        features = {
          "default" = [ "hashbrown" ];
          "nightly" = [ "hashbrown" "hashbrown/nightly" ];
        };
        resolvedDefaultFeatures = [ "default" "hashbrown" ];
      };
      "lsp-server" = rec {
        crateName = "lsp-server";
        version = "0.5.1";
        edition = "2018";
        sha256 = "14irb3kawr5i2cx295xyw8q7pv18d52cjh3c6rd858aw5l2df9b8";
        authors = [
          "rust-analyzer developers"
        ];
        dependencies = [
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
        ];

      };
      "lsp-types" = rec {
        crateName = "lsp-types";
        version = "0.89.0";
        edition = "2018";
        sha256 = "19ys8l1xcdba94jm5f04dj3mgj2llbi9anws6ll4frg09v6iwwq7";
        authors = [
          "Markus Westerlind <marwes91@gmail.com>"
          "Bruno Medeiros <bruno.do.medeiros@gmail.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "serde_repr";
            packageId = "serde_repr";
          }
          {
            name = "url";
            packageId = "url 2.2.2";
            features = [ "serde" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "maplit" = rec {
        crateName = "maplit";
        version = "1.0.2";
        edition = "2015";
        sha256 = "07b5kjnhrrmfhgqm9wprjw8adx6i225lqp49gasgqg74lahnabiy";
        authors = [
          "bluss"
        ];

      };
      "match_cfg" = rec {
        crateName = "match_cfg";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1r5j3zqc3qr8ybcx95bk8q57mkizmgmffj5lmicd4i8d9riyigpz";
        authors = [
          "gnzlbg <gonzalobg88@gmail.com>"
        ];
        features = {
          "default" = [ "use_core" ];
        };
        resolvedDefaultFeatures = [ "default" "use_core" ];
      };
      "matchers" = rec {
        crateName = "matchers";
        version = "0.0.1";
        edition = "2018";
        sha256 = "1q8ckqmkjqkznvdi9x0z769yz2bmvlqcwx51ad2lpk4mfmgpi6gh";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
        ];
        dependencies = [
          {
            name = "regex-automata";
            packageId = "regex-automata";
          }
        ];

      };
      "matches" = rec {
        crateName = "matches";
        version = "0.1.8";
        edition = "2015";
        sha256 = "020axl4q7rk9vz90phs7f8jas4imxal9y9kxl4z4v7a6719mrz3z";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];

      };
      "matrixmultiply" = rec {
        crateName = "matrixmultiply";
        version = "0.2.4";
        edition = "2015";
        sha256 = "1hc4vp19x823xgkm374wsxnzmqbjhmyaj5nr0lhm9k9i02x0cs4i";
        authors = [
          "bluss"
          "R. Janis Goldschmidt"
        ];
        dependencies = [
          {
            name = "rawpointer";
            packageId = "rawpointer";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "memchr" = rec {
        crateName = "memchr";
        version = "2.4.0";
        edition = "2018";
        sha256 = "1p478fqf4nia2ma0kv4npb8x1hli0zz6k16517ikb51jkryx8sxi";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "use_std" ];
      };
      "memoffset" = rec {
        crateName = "memoffset";
        version = "0.6.3";
        edition = "2015";
        sha256 = "079nahsp9sr5dhahd173i6a8k0sl82w6s4awsigzilcf3rcbcgzq";
        authors = [
          "Gilad Naaman <gilad.naaman@gmail.com>"
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "memory-db" = rec {
        crateName = "memory-db";
        version = "0.24.1";
        edition = "2018";
        sha256 = "0yn5a0z3jplc0dgidr9by1vk93kr10hlgfmbig9jbp1c1gdnvwrn";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "hash-db";
            packageId = "hash-db";
            usesDefaultFeatures = false;
          }
          {
            name = "hashbrown";
            packageId = "hashbrown 0.8.2";
            usesDefaultFeatures = false;
            features = [ "ahash" ];
          }
          {
            name = "parity-util-mem";
            packageId = "parity-util-mem";
            usesDefaultFeatures = false;
            features = [ "hashbrown" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "deprecated" = [ "heapsize" ];
          "std" = [ "hash-db/std" "parity-util-mem/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "memory_units" = rec {
        crateName = "memory_units";
        version = "0.3.0";
        edition = "2015";
        sha256 = "10h89f2ldiaf22x3hyf6nvf3w66biar36g6qrkc2aqqb7hznxnbi";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "Sergey Pepyakin <s.pepyakin@gmail.com>"
        ];

      };
      "merlin" = rec {
        crateName = "merlin";
        version = "2.0.1";
        edition = "2018";
        sha256 = "0hivklid2gzwz6179g0wiay55ah3xafvaavxkznjvi5kz3q1q9jf";
        authors = [
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "keccak";
            packageId = "keccak";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" ];
          }
        ];
        features = {
          "debug-transcript" = [ "hex" ];
          "default" = [ "std" ];
          "std" = [ "rand_core/std" "byteorder/std" ];
        };
      };
      "mime" = rec {
        crateName = "mime";
        version = "0.3.16";
        edition = "2015";
        sha256 = "13dcm9lh01hdwfjcg74ppljyjfj1c6w3a3cwkhxf0w8wa37cfq1a";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];

      };
      "mime_guess" = rec {
        crateName = "mime_guess";
        version = "2.0.3";
        edition = "2015";
        sha256 = "04pjpbl90z4yn0cmifvwgf4mqznciw6b095k626q96bxx71d9116";
        authors = [
          "Austin Bonander <austin.bonander@gmail.com>"
        ];
        dependencies = [
          {
            name = "mime";
            packageId = "mime";
          }
          {
            name = "unicase";
            packageId = "unicase";
          }
        ];
        buildDependencies = [
          {
            name = "unicase";
            packageId = "unicase";
          }
        ];
        features = {
          "default" = [ "rev-mappings" ];
        };
        resolvedDefaultFeatures = [ "default" "rev-mappings" ];
      };
      "miniz_oxide" = rec {
        crateName = "miniz_oxide";
        version = "0.4.4";
        edition = "2018";
        sha256 = "0jsfv00hl5rmx1nijn59sr9jmjd4rjnjhh4kdjy8d187iklih9d9";
        authors = [
          "Frommi <daniil.liferenko@gmail.com>"
          "oyvindln <oyvindln@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "adler";
            packageId = "adler";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "alloc" "compiler_builtins" "adler/rustc-dep-of-std" ];
        };
      };
      "mio" = rec {
        crateName = "mio";
        version = "0.6.23";
        edition = "2015";
        sha256 = "1i2c1vl8lr45apkh8xbh9k56ihfsmqff5l7s2fya7whvp7sndzaa";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10";
          }
          {
            name = "fuchsia-zircon";
            packageId = "fuchsia-zircon";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "fuchsia-zircon-sys";
            packageId = "fuchsia-zircon-sys";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "miow";
            packageId = "miow 0.2.2";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "net2";
            packageId = "net2";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
            target = { target, features }: (target."windows" or false);
          }
        ];
        features = {
          "default" = [ "with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "with-deprecated" ];
      };
      "mio-extras" = rec {
        crateName = "mio-extras";
        version = "2.0.6";
        edition = "2018";
        sha256 = "069gfhlv0wlwfx1k2sriwfws490kjp490rv2qivyfb01j3i3yh2j";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "David Hotham"
        ];
        dependencies = [
          {
            name = "lazycell";
            packageId = "lazycell";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "mio";
            packageId = "mio";
          }
          {
            name = "slab";
            packageId = "slab";
          }
        ];

      };
      "mio-named-pipes" = rec {
        crateName = "mio-named-pipes";
        version = "0.1.7";
        edition = "2018";
        sha256 = "0mjnjcg5dkb2jwxh4zxx4fgp15wr3hj9r53z4hdm4pnm1z2w2h08";
        authors = [
          "Brendan Molloy <brendan@bbqsrc.net>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "mio";
            packageId = "mio";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "miow";
            packageId = "miow 0.3.7";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "winerror" "ioapiset" "minwinbase" "winbase" ];
          }
        ];

      };
      "mio-uds" = rec {
        crateName = "mio-uds";
        version = "0.6.8";
        edition = "2015";
        sha256 = "1w36w09gd8as1mah80wdy0kgpshmphmljj68gij34hvdnag6kjxg";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "iovec";
            packageId = "iovec";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "mio";
            packageId = "mio";
            target = { target, features }: (target."unix" or false);
          }
        ];

      };
      "miow 0.2.2" = rec {
        crateName = "miow";
        version = "0.2.2";
        edition = "2015";
        sha256 = "0kcl8rnv0bhiarcdakik670w8fnxzlxhi1ys7152sck68510in7b";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys";
          }
          {
            name = "net2";
            packageId = "net2";
            usesDefaultFeatures = false;
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
          {
            name = "ws2_32-sys";
            packageId = "ws2_32-sys";
          }
        ];

      };
      "miow 0.3.7" = rec {
        crateName = "miow";
        version = "0.3.7";
        edition = "2018";
        sha256 = "08afp2xfpxmdw003111lxz6g9jgbj4zi2fpldvv7da6d4nqcbwdr";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            features = [ "std" "fileapi" "handleapi" "ioapiset" "minwindef" "namedpipeapi" "ntdef" "synchapi" "winerror" "winsock2" "ws2def" "ws2ipdef" ];
          }
        ];

      };
      "mirai-annotations" = rec {
        crateName = "mirai-annotations";
        version = "1.10.1";
        edition = "2018";
        sha256 = "0a0vv83rx9f366gbrmrlfrfkych6f0adhf7z1ncbs9v9caw7i3ml";
        authors = [
          "Herman Venter <hermanv@fb.com>"
        ];

      };
      "move-compat" = rec {
        crateName = "move-compat";
        version = "0.1.0";
        edition = "2018";
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ./lang/compat; };type = [ "cdylib" "rlib" ];
        authors = [
          "Alex Koz. <alexanderkozlovskii@wings.ai>"
          "Dm. Yakushev <dmitryyakushev@wings.ai>"
          "Maxim Kurnikov <maximkurnikov@wings.ai>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
            usesDefaultFeatures = false;
          }
          {
            name = "anyhow";
            packageId = "anyhow";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "vm";
            packageId = "vm";
          }
        ];
        features = {
          "dfinance_address" = [ "vm/dfinance_address" "diem-types/dfinance_address" "move-core-types/dfinance_address" ];
          "diem_address" = [ "vm/diem_address" "diem-types/diem_address" "move-core-types/diem_address" ];
          "ps_address" = [ "vm/ps_address" "diem-types/ps_address" "move-core-types/ps_address" ];
        };
        resolvedDefaultFeatures = [ "dfinance_address" "diem_address" "ps_address" ];
      };
      "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=master#c46b32d73087ed2afc6c1ac3e78535cac37e3fa9)" = rec {
        crateName = "move-core-types";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "c46b32d73087ed2afc6c1ac3e78535cac37e3fa9";
          sha256 = "01n9ib9kg4a0mai0pp982wy2gypfyz4bk3ahmcr1q96mg6dv7ljk";
        };
        authors = [
          "Libra Association <opensource@libra.org>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "libra-canonical-serialization";
            packageId = "libra-canonical-serialization";
            rename = "lcs";
          }
          {
            name = "libra-crypto";
            packageId = "libra-crypto";
            usesDefaultFeatures = false;
          }
          {
            name = "libra-crypto-derive";
            packageId = "libra-crypto-derive";
          }
          {
            name = "libra-workspace-hack";
            packageId = "libra-workspace-hack";
          }
          {
            name = "mirai-annotations";
            packageId = "mirai-annotations";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "ref-cast";
            packageId = "ref-cast";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        devDependencies = [
          {
            name = "once_cell";
            packageId = "once_cell";
          }
        ];
        features = {
          "default" = [ "fiat" ];
          "fiat" = [ "libra-crypto/fiat" ];
          "fuzzing" = [ "proptest" "proptest-derive" ];
          "vanilla" = [ "libra-crypto/vanilla" ];
        };
        resolvedDefaultFeatures = [ "default" "fiat" ];
      };
      "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)" = rec {
        crateName = "move-core-types";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "diem-crypto";
            packageId = "diem-crypto";
            usesDefaultFeatures = false;
          }
          {
            name = "diem-crypto-derive";
            packageId = "diem-crypto-derive";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "enum-iterator";
            packageId = "enum-iterator";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "mirai-annotations";
            packageId = "mirai-annotations";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "ref-cast";
            packageId = "ref-cast";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
          }
          {
            name = "short-hex-str";
            packageId = "short-hex-str";
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        devDependencies = [
          {
            name = "once_cell";
            packageId = "once_cell";
          }
        ];
        features = {
          "default" = [ "fiat" ];
          "fiat" = [ "diem-crypto/fiat" ];
          "fuzzing" = [ "proptest" "proptest-derive" ];
          "vanilla" = [ "diem-crypto/vanilla-u64" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "fiat" "ps_address" ];
      };
      "move-coverage" = rec {
        crateName = "move-coverage";
        version = "0.1.0";
        edition = "2018";
        crateBin = [];
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "bytecode-source-map";
            packageId = "bytecode-source-map";
          }
          {
            name = "bytecode-verifier";
            packageId = "bytecode-verifier";
          }
          {
            name = "codespan";
            packageId = "codespan 0.8.0";
            features = [ "serialization" ];
          }
          {
            name = "colored";
            packageId = "colored";
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "move-ir-types";
            packageId = "move-ir-types";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "petgraph";
            packageId = "petgraph";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
          }
          {
            name = "structopt";
            packageId = "structopt";
          }
          {
            name = "vm";
            packageId = "vm";
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" "diem-types/dfinance_address" "move-ir-types/dfinance_address" "vm/dfinance_address" "bytecode-source-map/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" "diem-types/diem_address" "move-ir-types/diem_address" "vm/diem_address" "bytecode-source-map/diem_address" ];
          "fuzzing" = [ "diem-types/fuzzing" ];
          "ps_address" = [ "move-core-types/ps_address" "diem-types/ps_address" "move-ir-types/ps_address" "vm/ps_address" "bytecode-source-map/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "move-executor" = rec {
        crateName = "move-executor";
        version = "0.1.1";
        edition = "2018";
        crateBin = [
          { name = "executor"; path = "src/bin/executor.rs"; }
          { name = "testrunner"; path = "src/bin/testrunner.rs"; }
        ];
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ./executor; };
        authors = [
          "Maksim Kurnikov <maxim.kurnikov@gmail.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "clap";
            packageId = "clap 2.33.3";
          }
          {
            name = "dfibra";
            packageId = "dfibra";
            rename = "diem";
          }
          {
            name = "enum-iterator";
            packageId = "enum-iterator";
          }
          {
            name = "git-hash";
            packageId = "git-hash";
          }
          {
            name = "lang";
            packageId = "lang";
          }
          {
            name = "num-format";
            packageId = "num-format";
            features = [ "std" ];
          }
          {
            name = "resources";
            packageId = "resources";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "textwrap";
            packageId = "textwrap 0.12.1";
          }
        ];
        features = {
          "dfinance_address" = [ "diem/dfinance_address" ];
          "diem_address" = [ "diem/diem_address" ];
          "ps_address" = [ "diem/ps_address" ];
        };
        resolvedDefaultFeatures = [ "dfinance_address" "diem_address" "ps_address" ];
      };
      "move-ir-types" = rec {
        crateName = "move-ir-types";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "codespan";
            packageId = "codespan 0.8.0";
            features = [ "serialization" ];
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" ];
          "ps_address" = [ "move-core-types/ps_address" ];
        };
        resolvedDefaultFeatures = [ "dfinance_address" "diem_address" "ps_address" ];
      };
      "move-lang" = rec {
        crateName = "move-lang";
        version = "0.0.1";
        edition = "2018";
        crateBin = [];
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "borrow-graph";
            packageId = "borrow-graph";
          }
          {
            name = "bytecode-source-map";
            packageId = "bytecode-source-map";
          }
          {
            name = "bytecode-verifier";
            packageId = "bytecode-verifier";
            rename = "move-bytecode-verifier";
          }
          {
            name = "codespan";
            packageId = "codespan 0.8.0";
          }
          {
            name = "codespan-reporting";
            packageId = "codespan-reporting 0.8.0";
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "difference";
            packageId = "difference";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "ir-to-bytecode";
            packageId = "ir-to-bytecode";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "move-ir-types";
            packageId = "move-ir-types";
          }
          {
            name = "petgraph";
            packageId = "petgraph";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "structopt";
            packageId = "structopt";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
          {
            name = "vm";
            packageId = "vm";
            rename = "move-vm";
          }
          {
            name = "walkdir";
            packageId = "walkdir";
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" ];
          "ps_address" = [ "move-core-types/ps_address" ];
        };
        resolvedDefaultFeatures = [ "dfinance_address" "diem_address" "ps_address" ];
      };
      "move-language-server" = rec {
        crateName = "move-language-server";
        version = "0.4.0";
        edition = "2018";
        crateBin = [
          { name = "move-language-server"; path = "src/main.rs"; }
        ];
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ./language_server; };
        authors = [
          "Maxim Kurnikov <maxim.kurnikov@gmail.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "codespan";
            packageId = "codespan 0.8.0";
          }
          {
            name = "codespan";
            packageId = "codespan 0.9.5";
            rename = "codespan9";
          }
          {
            name = "codespan-reporting";
            packageId = "codespan-reporting 0.8.0";
          }
          {
            name = "codespan-reporting";
            packageId = "codespan-reporting 0.9.5";
            rename = "codespan-reporting9";
          }
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel";
          }
          {
            name = "dfibra";
            packageId = "dfibra";
            rename = "diem";
          }
          {
            name = "env_logger";
            packageId = "env_logger 0.7.1";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "lang";
            packageId = "lang";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "lsp-server";
            packageId = "lsp-server";
          }
          {
            name = "lsp-types";
            packageId = "lsp-types";
          }
          {
            name = "resources";
            packageId = "resources";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "threadpool";
            packageId = "threadpool";
          }
          {
            name = "walkdir";
            packageId = "walkdir";
          }
        ];
        features = {
          "default" = [ "ps_address" ];
          "dfinance_address" = [ "lang/dfinance_address" "diem/dfinance_address" ];
          "diem_address" = [ "lang/diem_address" "diem/diem_address" ];
          "ps_address" = [ "lang/ps_address" "diem/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "move-resource-viewer" = rec {
        crateName = "move-resource-viewer";
        version = "0.1.6";
        edition = "2018";
        crateBin = [
          { name = "move-resource-viewer"; path = "src/main.rs"; }
        ];
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ./resource-viewer; };
        authors = [
          "Alex Koz. <a@koz.email>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
            usesDefaultFeatures = false;
          }
          {
            name = "anyhow";
            packageId = "anyhow";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "clap";
            packageId = "clap 3.0.0-beta.2";
            target = { target, features }: (!(target."arch" == "wasm32"));
            features = [ "default" "suggestions" "color" ];
          }
          {
            name = "dfibra";
            packageId = "dfibra";
            rename = "diem";
          }
          {
            name = "dnode-rest-client";
            packageId = "dnode-rest-client";
            rename = "dnclient";
            optional = true;
          }
          {
            name = "env_logger";
            packageId = "env_logger 0.8.3";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "git-hash";
            packageId = "git-hash";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "lang";
            packageId = "lang";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "move-compat";
            packageId = "move-compat";
            rename = "compat";
          }
          {
            name = "schemars";
            packageId = "schemars";
            optional = true;
            features = [ "default" "derive" "preserve_order" ];
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" "rc" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            optional = true;
          }
          {
            name = "sp-keyring";
            packageId = "sp-keyring";
            rename = "keyring";
            optional = true;
          }
          {
            name = "substrate-api-client";
            packageId = "substrate-api-client";
            optional = true;
          }
        ];
        features = {
          "default" = [ "json-schema" "ps_address" ];
          "dfinance_address" = [ "lang/dfinance_address" "diem/dfinance_address" "compat/dfinance_address" "dnclient" ];
          "diem_address" = [ "lang/diem_address" "diem/diem_address" "compat/diem_address" "dnclient" ];
          "json-schema" = [ "schemars" ];
          "ps_address" = [ "lang/ps_address" "diem/ps_address" "compat/ps_address" "substrate-api-client" "keyring" "sp-core" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "dnclient" "json-schema" "keyring" "ps_address" "schemars" "sp-core" "substrate-api-client" ];
      };
      "move-vm-natives" = rec {
        crateName = "move-vm-natives";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "diem-crypto";
            packageId = "diem-crypto";
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "mirai-annotations";
            packageId = "mirai-annotations";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "move-vm-types";
            packageId = "move-vm-types";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.5";
          }
          {
            name = "twox-hash";
            packageId = "twox-hash";
          }
          {
            name = "uint";
            packageId = "uint";
          }
          {
            name = "vm";
            packageId = "vm";
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" ];
          "ps_address" = [ "move-core-types/ps_address" ];
        };
        resolvedDefaultFeatures = [ "debug_module" "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "move-vm-runtime" = rec {
        crateName = "move-vm-runtime";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "bytecode-verifier";
            packageId = "bytecode-verifier";
          }
          {
            name = "diem-crypto";
            packageId = "diem-crypto";
          }
          {
            name = "diem-infallible";
            packageId = "diem-infallible";
          }
          {
            name = "diem-logger";
            packageId = "diem-logger";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "fail";
            packageId = "fail";
          }
          {
            name = "mirai-annotations";
            packageId = "mirai-annotations";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "move-vm-natives";
            packageId = "move-vm-natives";
          }
          {
            name = "move-vm-types";
            packageId = "move-vm-types";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "vm";
            packageId = "vm";
          }
        ];
        features = {
          "debug_module" = [ "move-vm-natives/debug_module" ];
          "dfinance_address" = [ "move-core-types/dfinance_address" "bytecode-verifier/dfinance_address" "move-vm-natives/dfinance_address" "move-vm-types/dfinance_address" "vm/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" "bytecode-verifier/diem_address" "move-vm-natives/diem_address" "move-vm-types/diem_address" "vm/diem_address" ];
          "failpoints" = [ "fail/failpoints" ];
          "fuzzing" = [ "move-vm-types/fuzzing" ];
          "ps_address" = [ "move-core-types/ps_address" "bytecode-verifier/ps_address" "move-vm-natives/ps_address" "move-vm-types/ps_address" "vm/ps_address" ];
        };
        resolvedDefaultFeatures = [ "debug_module" "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "move-vm-types" = rec {
        crateName = "move-vm-types";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "diem-crypto";
            packageId = "diem-crypto";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "mirai-annotations";
            packageId = "mirai-annotations";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" "rc" ];
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.5";
          }
          {
            name = "vm";
            packageId = "vm";
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" "vm/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" "vm/diem_address" ];
          "fuzzing" = [ "proptest" "vm/fuzzing" ];
          "ps_address" = [ "move-core-types/ps_address" "vm/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "multihash" = rec {
        crateName = "multihash";
        version = "0.11.4";
        edition = "2018";
        sha256 = "1xixkybkz7qzsh6dv5l132jdqr1yw4vcqkpivrcrpx4jcjmj4wan";
        authors = [
          "dignifiedquire <dignifiedquire@gmail.com>"
        ];
        dependencies = [
          {
            name = "blake2b_simd";
            packageId = "blake2b_simd";
            usesDefaultFeatures = false;
          }
          {
            name = "blake2s_simd";
            packageId = "blake2s_simd";
            usesDefaultFeatures = false;
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "sha-1";
            packageId = "sha-1";
            usesDefaultFeatures = false;
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.5";
            usesDefaultFeatures = false;
          }
          {
            name = "sha3";
            packageId = "sha3";
            usesDefaultFeatures = false;
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.5.1";
          }
        ];
        features = {
          "test" = [ "quickcheck" "rand" ];
          "use_blake3" = [ "blake3" ];
        };
      };
      "multimap" = rec {
        crateName = "multimap";
        version = "0.8.3";
        edition = "2015";
        sha256 = "0sicyz4n500vdhgcxn4g8jz97cp1ijir1rnbgph3pmx9ckz4dkp5";
        authors = [
          "Håvar Nøvik <havar.novik@gmail.com>"
        ];
        features = {
          "default" = [ "serde_impl" ];
          "serde_impl" = [ "serde" ];
        };
      };
      "multistream-select" = rec {
        crateName = "multistream-select";
        version = "0.8.5";
        edition = "2018";
        sha256 = "0xfxnzv5h0q7d6cfb8ks69926r96rkrlivc02sq2zrly3zjg5ylk";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
          }
          {
            name = "futures";
            packageId = "futures 0.3.15";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.7";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.5.1";
          }
        ];

      };
      "nalgebra" = rec {
        crateName = "nalgebra";
        version = "0.18.1";
        edition = "2018";
        sha256 = "18i1npny8s45ff67p5qpdwwsn36fp23mal8847fkb32cqgdzvada";
        authors = [
          "Sébastien Crozet <developer@crozet.re>"
        ];
        dependencies = [
          {
            name = "alga";
            packageId = "alga";
            usesDefaultFeatures = false;
          }
          {
            name = "approx";
            packageId = "approx";
            usesDefaultFeatures = false;
          }
          {
            name = "generic-array";
            packageId = "generic-array 0.12.4";
          }
          {
            name = "matrixmultiply";
            packageId = "matrixmultiply";
            optional = true;
          }
          {
            name = "num-complex";
            packageId = "num-complex 0.2.4";
            usesDefaultFeatures = false;
          }
          {
            name = "num-rational";
            packageId = "num-rational 0.2.4";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
            usesDefaultFeatures = false;
          }
          {
            name = "typenum";
            packageId = "typenum";
          }
        ];
        features = {
          "abomonation-serialize" = [ "abomonation" ];
          "arbitrary" = [ "quickcheck" ];
          "debug" = [ "approx/num-complex" "rand/std" ];
          "default" = [ "std" ];
          "io" = [ "pest" "pest_derive" ];
          "serde-serialize" = [ "serde" "serde_derive" "num-complex/serde" ];
          "std" = [ "matrixmultiply" "rand/std" "alga/std" ];
          "stdweb" = [ "rand/stdweb" ];
        };
        resolvedDefaultFeatures = [ "default" "matrixmultiply" "std" ];
      };
      "native-tls" = rec {
        crateName = "native-tls";
        version = "0.2.7";
        edition = "2015";
        sha256 = "1m6v16xl8h4pm32pw6yhrvgwznf60bqhj2qhb1yrb8wd3hp6pndq";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "log";
            packageId = "log";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "openssl";
            packageId = "openssl";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "openssl-probe";
            packageId = "openssl-probe";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "schannel";
            packageId = "schannel";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "security-framework";
            packageId = "security-framework";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "security-framework-sys";
            packageId = "security-framework-sys";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "tempfile";
            packageId = "tempfile";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
        ];
        devDependencies = [
          {
            name = "tempfile";
            packageId = "tempfile";
          }
        ];
        features = {
          "alpn" = [ "security-framework/alpn" ];
          "vendored" = [ "openssl/vendored" ];
        };
      };
      "net2" = rec {
        crateName = "net2";
        version = "0.2.37";
        edition = "2015";
        sha256 = "1bk8jp0i12gvhrlaqbfq19ancja70r1rg3sywbhjl0385g8k05ir";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."os" == "redox") || (target."unix" or false) || (target."os" == "wasi"));
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "handleapi" "winsock2" "ws2def" "ws2ipdef" "ws2tcpip" ];
          }
        ];
        features = {
          "default" = [ "duration" ];
        };
        resolvedDefaultFeatures = [ "default" "duration" ];
      };
      "nodrop" = rec {
        crateName = "nodrop";
        version = "0.1.14";
        edition = "2015";
        sha256 = "1fz1v9r8ijacf0hlq0pdv5l9mz8vgqg1snmhvpjmi9aci1b4mvvj";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "use_union" = [ "nodrop-union" ];
        };
      };
      "num 0.3.1" = rec {
        crateName = "num";
        version = "0.3.1";
        edition = "2018";
        sha256 = "13vsnqr0kasn7rwfq5r1vqdd0sy0y5ar3x4xhvzy4fg0wndqwylb";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-bigint";
            packageId = "num-bigint 0.3.2";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-complex";
            packageId = "num-complex 0.3.1";
            usesDefaultFeatures = false;
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-iter";
            packageId = "num-iter";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-rational";
            packageId = "num-rational 0.3.2";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        features = {
          "alloc" = [ "num-bigint" "num-rational/num-bigint" ];
          "default" = [ "std" ];
          "libm" = [ "num-complex/libm" "num-traits/libm" ];
          "rand" = [ "num-bigint/rand" "num-complex/rand" ];
          "serde" = [ "num-bigint/serde" "num-complex/serde" "num-rational/serde" ];
          "std" = [ "num-bigint/std" "num-complex/std" "num-integer/std" "num-iter/std" "num-rational/std" "num-rational/num-bigint-std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "num-bigint" "std" ];
      };
      "num 0.4.0" = rec {
        crateName = "num";
        version = "0.4.0";
        edition = "2018";
        sha256 = "01j6k8kjad0a96297j3qjhdhrc6cgmzhf52i0sd7yd0d2z8ndns3";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-bigint";
            packageId = "num-bigint 0.4.0";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-complex";
            packageId = "num-complex 0.4.0";
            usesDefaultFeatures = false;
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-iter";
            packageId = "num-iter";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-rational";
            packageId = "num-rational 0.4.0";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        features = {
          "alloc" = [ "num-bigint" "num-rational/num-bigint" ];
          "default" = [ "std" ];
          "libm" = [ "num-complex/libm" "num-traits/libm" ];
          "rand" = [ "num-bigint/rand" "num-complex/rand" ];
          "serde" = [ "num-bigint/serde" "num-complex/serde" "num-rational/serde" ];
          "std" = [ "num-bigint/std" "num-complex/std" "num-integer/std" "num-iter/std" "num-rational/std" "num-rational/num-bigint-std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "num-bigint" "std" ];
      };
      "num-bigint 0.2.6" = rec {
        crateName = "num-bigint";
        version = "0.2.6";
        edition = "2015";
        sha256 = "015k3wixdi4w698sappvy43pf8bvkw0f88xplmdgc3zfk2cpy309";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "num-bigint 0.3.2" = rec {
        crateName = "num-bigint";
        version = "0.3.2";
        edition = "2018";
        sha256 = "1fpyzdrkli5gsxaaal3w7yhjwfklm9i6cdz5m54gjwvm41g3s2kx";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "num-bigint 0.4.0" = rec {
        crateName = "num-bigint";
        version = "0.4.0";
        edition = "2018";
        sha256 = "04k5xh7d0nxay4yfb02rj841y9g5jh45d320avi53ak221y083af";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "num-complex 0.2.4" = rec {
        crateName = "num-complex";
        version = "0.2.4";
        edition = "2015";
        sha256 = "15dwaksw729r3v14sgzc9723s3fnfixiir8jzwx7b7kim48r9cdn";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
      };
      "num-complex 0.3.1" = rec {
        crateName = "num-complex";
        version = "0.3.1";
        edition = "2018";
        sha256 = "1igjwm5kk2df9mxmpb260q6p40xfnkrq4smymgdqg2sm1hn66zbl";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "libm" = [ "num-traits/libm" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "num-complex 0.4.0" = rec {
        crateName = "num-complex";
        version = "0.4.0";
        edition = "2018";
        sha256 = "11ahq51ibf7x30rsabgp3a29zw6d6bfilz53sj152z5vpdkkd1r6";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "libm" = [ "num-traits/libm" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "num-format" = rec {
        crateName = "num-format";
        version = "0.4.0";
        edition = "2018";
        sha256 = "0r94i9lhr15hk32494v9my31r0829w29yyp7iql98a1cf9wl3zms";
        authors = [
          "Brian Myers <brian.carl.myers@gmail.com>"
        ];
        dependencies = [
          {
            name = "arrayvec";
            packageId = "arrayvec 0.4.12";
            usesDefaultFeatures = false;
          }
          {
            name = "itoa";
            packageId = "itoa";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "arrayvec/default" "itoa/default" "itoa/i128" ];
          "with-num-bigint" = [ "num-bigint" "std" ];
          "with-serde" = [ "arrayvec/serde-1" "serde/derive" ];
          "with-system-locale" = [ "cfg-if" "encoding_rs" "lazy_static" "libc" "num-format-windows" "std" "widestring" "winapi/winnls" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "num-integer" = rec {
        crateName = "num-integer";
        version = "0.1.44";
        edition = "2015";
        sha256 = "1nq152y3304as1iai95hqz8prqnc94lks1s7q05sfjdmcf56kk6j";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "i128" "std" ];
      };
      "num-iter" = rec {
        crateName = "num-iter";
        version = "0.1.42";
        edition = "2015";
        sha256 = "0ndd9wb9qar50fdr16xm3i1zk6h2g9br56nml2n22kd56y1iq0mj";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "i128" "std" ];
      };
      "num-rational 0.2.4" = rec {
        crateName = "num-rational";
        version = "0.2.4";
        edition = "2015";
        sha256 = "1vsaz96chxcgpqd5a0dq8hb3b4sj6dnlhwmpbkf4mx6vnls0202w";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-bigint";
            packageId = "num-bigint 0.2.6";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "bigint" = [ "num-bigint" ];
          "bigint-std" = [ "bigint" "num-bigint/std" ];
          "default" = [ "bigint-std" "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "bigint" "bigint-std" "default" "num-bigint" "std" ];
      };
      "num-rational 0.3.2" = rec {
        crateName = "num-rational";
        version = "0.3.2";
        edition = "2018";
        sha256 = "01sgiwny9iflyxh2xz02sak71v2isc3x608hfdpwwzxi3j5l5b0j";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-bigint";
            packageId = "num-bigint 0.3.2";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "default" = [ "num-bigint-std" "std" ];
          "num-bigint-std" = [ "num-bigint/std" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "num-bigint" "num-bigint-std" "std" ];
      };
      "num-rational 0.4.0" = rec {
        crateName = "num-rational";
        version = "0.4.0";
        edition = "2018";
        sha256 = "0ska19zb05f84b1cki7vyzy5wjqs26y82hiq1d9gabbw2syh45yl";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-bigint";
            packageId = "num-bigint 0.4.0";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "default" = [ "num-bigint-std" "std" ];
          "num-bigint-std" = [ "num-bigint/std" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "num-bigint" "num-bigint-std" "std" ];
      };
      "num-traits" = rec {
        crateName = "num-traits";
        version = "0.2.14";
        edition = "2015";
        sha256 = "144j176s2p76azy2ngk2vkdzgwdc0bc8c93jhki8c9fsbknb2r4s";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libm";
            packageId = "libm";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "i128" "libm" "std" ];
      };
      "num-variants" = rec {
        crateName = "num-variants";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        procMacro = true;
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "num_cpus" = rec {
        crateName = "num_cpus";
        version = "1.13.0";
        edition = "2015";
        sha256 = "1cv6yxhz2zbnwn8pn1yn8grg7zsnd523947fby41a737aqvryj85";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "hermit-abi";
            packageId = "hermit-abi";
            target = { target, features }: (((target."arch" == "x86_64") || (target."arch" == "aarch64")) && (target."os" == "hermit"));
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];

      };
      "object" = rec {
        crateName = "object";
        version = "0.24.0";
        edition = "2018";
        sha256 = "0w21hp41mixzaavsdpjylbylh44z2b5d2wbnf5ipkvkjq38ksnqs";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "Philip Craig <philipjcraig@gmail.com>"
        ];
        features = {
          "all" = [ "read" "write" "std" "compression" "default" ];
          "compression" = [ "flate2" "std" ];
          "default" = [ "read" "compression" ];
          "pe" = [ "coff" ];
          "read" = [ "read_core" "archive" "coff" "elf" "macho" "pe" "unaligned" ];
          "rustc-dep-of-std" = [ "core" "compiler_builtins" "alloc" ];
          "wasm" = [ "wasmparser" ];
          "write" = [ "write_core" "coff" "elf" "macho" ];
          "write_core" = [ "crc32fast" "indexmap" "std" ];
        };
        resolvedDefaultFeatures = [ "archive" "coff" "elf" "macho" "pe" "read_core" "unaligned" ];
      };
      "once_cell" = rec {
        crateName = "once_cell";
        version = "1.7.2";
        edition = "2018";
        sha256 = "18qmpyfigg4ibdhjy5mwcjhzk9adwlgfaqv7nj430ivm86q0i2xg";
        authors = [
          "Aleksey Kladov <aleksey.kladov@gmail.com>"
        ];
        dependencies = [
          {
            name = "parking_lot";
            packageId = "parking_lot 0.11.1";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "race" ];
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "parking_lot" "race" "std" ];
      };
      "opaque-debug 0.2.3" = rec {
        crateName = "opaque-debug";
        version = "0.2.3";
        edition = "2015";
        sha256 = "172j6bs8ndclqxa2m64qc0y1772rr73g4l9fg2svscgicnbfff98";
        authors = [
          "RustCrypto Developers"
        ];

      };
      "opaque-debug 0.3.0" = rec {
        crateName = "opaque-debug";
        version = "0.3.0";
        edition = "2018";
        sha256 = "1m8kzi4nd6shdqimn0mgb24f0hxslhnqd1whakyq06wcqd086jk2";
        authors = [
          "RustCrypto Developers"
        ];

      };
      "openssl" = rec {
        crateName = "openssl";
        version = "0.10.34";
        edition = "2018";
        sha256 = "1j74rfaicl4n9ff25l01jdrnpiv9ixrp76qx1wy9g8ynd8l30y3d";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "foreign-types";
            packageId = "foreign-types";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            rename = "ffi";
          }
        ];
        features = {
          "vendored" = [ "ffi/vendored" ];
        };
      };
      "openssl-probe" = rec {
        crateName = "openssl-probe";
        version = "0.1.4";
        edition = "2015";
        sha256 = "0nmrvlrza9ya23kgzmsgfc17f9pxajdxk25cwsk9aq5p5a3qv618";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];

      };
      "openssl-sys" = rec {
        crateName = "openssl-sys";
        version = "0.9.63";
        edition = "2015";
        sha256 = "166bhkcnpfqraa9jgpxgn0pspdg20pk19c7wgmhpgy40gpxxdc5n";
        build = "build/main.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
          "vendored" = [ "openssl-src" ];
        };
      };
      "os_str_bytes" = rec {
        crateName = "os_str_bytes";
        version = "2.4.0";
        edition = "2018";
        sha256 = "11agh8n3x2l4sr3sxvx6byc1j3ryb1g6flb1ywn0qhq7xv1y3cmg";
        authors = [
          "dylni"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "raw" ];
      };
      "pallet-balances" = rec {
        crateName = "pallet-balances";
        version = "2.0.1";
        edition = "2018";
        sha256 = "05nz2x8gl8c9rnr95mdz3rsvbp48sk52nsi3yirb5sffrbx3nb25";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-benchmarking";
            packageId = "frame-benchmarking";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "runtime-benchmarks" = [ "frame-benchmarking" ];
          "std" = [ "serde" "codec/std" "sp-std/std" "sp-runtime/std" "frame-benchmarking/std" "frame-support/std" "frame-system/std" ];
        };
        resolvedDefaultFeatures = [ "frame-benchmarking" "serde" "std" ];
      };
      "parity-multiaddr" = rec {
        crateName = "parity-multiaddr";
        version = "0.9.7";
        edition = "2018";
        sha256 = "0wsqq7aw59iic3c7wj73222clma1s76kw9dmrr3ymbzsgixsxv7v";
        authors = [
          "dignifiedquire <dignifiedquire@gmail.com>"
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "bs58";
            packageId = "bs58 0.4.0";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "data-encoding";
            packageId = "data-encoding";
          }
          {
            name = "multihash";
            packageId = "multihash";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 2.1.0";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.5.1";
          }
          {
            name = "url";
            packageId = "url 2.2.2";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "url" ];
        };
        resolvedDefaultFeatures = [ "default" "url" ];
      };
      "parity-scale-codec" = rec {
        crateName = "parity-scale-codec";
        version = "1.3.7";
        edition = "2018";
        sha256 = "17bfl5fa4qq7d6kgfi651grmv0c1whcpgx1ak1sk0z38qwb6pcm4";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "arrayvec";
            packageId = "arrayvec 0.5.2";
            usesDefaultFeatures = false;
            features = [ "array-sizes-33-128" "array-sizes-129-255" ];
          }
          {
            name = "bitvec";
            packageId = "bitvec";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "byte-slice-cast";
            packageId = "byte-slice-cast";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "parity-scale-codec-derive";
            packageId = "parity-scale-codec-derive";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "parity-scale-codec-derive";
            packageId = "parity-scale-codec-derive";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "bit-vec" = [ "bitvec" ];
          "default" = [ "std" ];
          "derive" = [ "parity-scale-codec-derive" ];
          "std" = [ "serde" "bitvec/std" "byte-slice-cast/std" ];
        };
        resolvedDefaultFeatures = [ "bitvec" "default" "derive" "full" "parity-scale-codec-derive" "serde" "std" ];
      };
      "parity-scale-codec-derive" = rec {
        crateName = "parity-scale-codec-derive";
        version = "1.2.3";
        edition = "2018";
        sha256 = "1347iqrzpknsff0k5dnc703g8kmz25v49fgillsg7bqz9fa145f4";
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit" ];
          }
        ];

      };
      "parity-util-mem" = rec {
        crateName = "parity-util-mem";
        version = "0.7.0";
        edition = "2018";
        sha256 = "0p0gvnqcjk7wbd983g92d1vlcnxpyq1b311l3374kv3alcgzjzr9";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10";
          }
          {
            name = "hashbrown";
            packageId = "hashbrown 0.8.2";
            optional = true;
          }
          {
            name = "impl-trait-for-tuples";
            packageId = "impl-trait-for-tuples";
          }
          {
            name = "parity-util-mem-derive";
            packageId = "parity-util-mem-derive";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.10.2";
            optional = true;
          }
          {
            name = "primitive-types";
            packageId = "primitive-types 0.7.3";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
            features = [ "heapapi" ];
          }
        ];
        features = {
          "default" = [ "std" "ethereum-impls" "lru" "hashbrown" "smallvec" "primitive-types" ];
          "dlmalloc-global" = [ "dlmalloc" "estimate-heapsize" ];
          "ethereum-impls" = [ "ethereum-types" "primitive-types" ];
          "jemalloc-global" = [ "jemallocator" ];
          "mimalloc-global" = [ "mimalloc" "libmimalloc-sys" ];
          "std" = [ "parking_lot" ];
          "weealloc-global" = [ "wee_alloc" "estimate-heapsize" ];
        };
        resolvedDefaultFeatures = [ "hashbrown" "parking_lot" "primitive-types" "std" ];
      };
      "parity-util-mem-derive" = rec {
        crateName = "parity-util-mem-derive";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1chhs58il2awl2blyvg7l39zlpjz5701j5j7474hg2i6dlnc6mzm";
        procMacro = true;
        libPath = "lib.rs";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
          {
            name = "synstructure";
            packageId = "synstructure";
          }
        ];

      };
      "parity-wasm" = rec {
        crateName = "parity-wasm";
        version = "0.41.0";
        edition = "2018";
        sha256 = "0rfqgjyxrxrfjq5r5n81mdklahl8g4az6yhyyvw25nh0mj6qgz6x";
        authors = [
          "Nikolay Volf <nikvolf@gmail.com>"
          "Svyatoslav Nikolsky <svyatonik@yandex.ru>"
          "Sergey Shulepov <s.pepyakin@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "parking" = rec {
        crateName = "parking";
        version = "2.0.0";
        edition = "2018";
        sha256 = "0wnxxnizfxlax3n709s5r83f4n8awy3m4a18q4fdk0z7z693hz22";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "The Rust Project Developers"
        ];

      };
      "parking_lot 0.10.2" = rec {
        crateName = "parking_lot";
        version = "0.10.2";
        edition = "2018";
        sha256 = "0pjhcbyk6n0g6jsr6s9nf4x8wribm1b2yf8fgc8drbqa77mh99yk";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "lock_api";
            packageId = "lock_api 0.3.4";
          }
          {
            name = "parking_lot_core";
            packageId = "parking_lot_core 0.7.2";
          }
        ];
        features = {
          "deadlock_detection" = [ "parking_lot_core/deadlock_detection" ];
          "nightly" = [ "parking_lot_core/nightly" "lock_api/nightly" ];
          "owning_ref" = [ "lock_api/owning_ref" ];
          "serde" = [ "lock_api/serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "parking_lot 0.11.1" = rec {
        crateName = "parking_lot";
        version = "0.11.1";
        edition = "2018";
        sha256 = "1sqmgaia8zfd5fbnqw2w13ijh7crk3lf9vw4cb52vwlx0an48xvd";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "instant";
            packageId = "instant";
          }
          {
            name = "lock_api";
            packageId = "lock_api 0.4.4";
          }
          {
            name = "parking_lot_core";
            packageId = "parking_lot_core 0.8.3";
          }
        ];
        features = {
          "deadlock_detection" = [ "parking_lot_core/deadlock_detection" ];
          "nightly" = [ "parking_lot_core/nightly" "lock_api/nightly" ];
          "owning_ref" = [ "lock_api/owning_ref" ];
          "serde" = [ "lock_api/serde" ];
          "stdweb" = [ "instant/stdweb" ];
          "wasm-bindgen" = [ "instant/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "parking_lot_core 0.7.2" = rec {
        crateName = "parking_lot_core";
        version = "0.7.2";
        edition = "2018";
        sha256 = "18s0cw5y32447c06fhg2mp3xfng22fn1h9fpx3il98sbimv7r36m";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10";
          }
          {
            name = "cloudabi";
            packageId = "cloudabi";
            target = { target, features }: (target."os" == "cloudabi");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall 0.1.57";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "winnt" "ntstatus" "minwindef" "winerror" "winbase" "errhandlingapi" "handleapi" ];
          }
        ];
        features = {
          "deadlock_detection" = [ "petgraph" "thread-id" "backtrace" ];
        };
      };
      "parking_lot_core 0.8.3" = rec {
        crateName = "parking_lot_core";
        version = "0.8.3";
        edition = "2018";
        sha256 = "065hkylji0g0fkh1vqp7kzs74vclhsxcczwhwqzpcig770lphyps";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "instant";
            packageId = "instant";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall 0.2.8";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "winnt" "ntstatus" "minwindef" "winerror" "winbase" "errhandlingapi" "handleapi" ];
          }
        ];
        features = {
          "deadlock_detection" = [ "petgraph" "thread-id" "backtrace" ];
        };
      };
      "paste" = rec {
        crateName = "paste";
        version = "0.1.18";
        edition = "2018";
        sha256 = "10587zrlmzhq66yhd0z36fzglf32m1nlhi9bxxm6dgl0gp3j1jj5";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "paste-impl";
            packageId = "paste-impl";
          }
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
          }
        ];

      };
      "paste-impl" = rec {
        crateName = "paste-impl";
        version = "0.1.18";
        edition = "2018";
        sha256 = "1dlqzk05cx74522s4iyhyzzhszig4n401pp6r1qg6zmr02r7snnr";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
          }
        ];

      };
      "pbkdf2" = rec {
        crateName = "pbkdf2";
        version = "0.3.0";
        edition = "2015";
        sha256 = "1na2fmmfcmksz4xk7m0ihl778501c1krx88dcylrand48f506v00";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.7.0";
          }
        ];
        features = {
          "default" = [ "include_simple" ];
          "include_simple" = [ "sha2" "hmac" "rand" "base64" "subtle" ];
          "parallel" = [ "rayon" ];
        };
      };
      "percent-encoding 1.0.1" = rec {
        crateName = "percent-encoding";
        version = "1.0.1";
        edition = "2015";
        sha256 = "0cgq08v1fvr6bs5fvy390cz830lq4fak8havdasdacxcw790s09i";
        libPath = "lib.rs";
        authors = [
          "The rust-url developers"
        ];

      };
      "percent-encoding 2.1.0" = rec {
        crateName = "percent-encoding";
        version = "2.1.0";
        edition = "2015";
        sha256 = "0bp3zrsk3kr47fbpipyczidbbx4g54lzxdm77ni1i3qws10mdzfl";
        libPath = "lib.rs";
        authors = [
          "The rust-url developers"
        ];

      };
      "petgraph" = rec {
        crateName = "petgraph";
        version = "0.5.1";
        edition = "2018";
        sha256 = "1dzxda6z17sfxly11m8ja3iargh73pw0s1sdgjyp0qp5dm51cza6";
        authors = [
          "bluss"
          "mitchmindtree"
        ];
        dependencies = [
          {
            name = "fixedbitset";
            packageId = "fixedbitset";
            usesDefaultFeatures = false;
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
        ];
        features = {
          "all" = [ "unstable" "quickcheck" "matrix_graph" "stable_graph" "graphmap" ];
          "default" = [ "graphmap" "stable_graph" "matrix_graph" ];
          "serde-1" = [ "serde" "serde_derive" ];
          "unstable" = [ "generate" ];
        };
        resolvedDefaultFeatures = [ "default" "graphmap" "matrix_graph" "stable_graph" ];
      };
      "pin-project 0.4.28" = rec {
        crateName = "pin-project";
        version = "0.4.28";
        edition = "2018";
        sha256 = "03rx11vd15rwj2g3c5x79f1154fykpag88fj1hgda6ciqnsr50ci";
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = [
          {
            name = "pin-project-internal";
            packageId = "pin-project-internal 0.4.28";
            usesDefaultFeatures = false;
          }
        ];

      };
      "pin-project 1.0.7" = rec {
        crateName = "pin-project";
        version = "1.0.7";
        edition = "2018";
        sha256 = "1964rh32hiy5v2ircli8wv8fxq9h2nkgfalda6j407040v0rql67";
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = [
          {
            name = "pin-project-internal";
            packageId = "pin-project-internal 1.0.7";
            usesDefaultFeatures = false;
          }
        ];

      };
      "pin-project-internal 0.4.28" = rec {
        crateName = "pin-project-internal";
        version = "0.4.28";
        edition = "2018";
        sha256 = "0pianl8ma0ihhara39swdddpa3hrv08k5iv46b9dkrhb6006gqiv";
        procMacro = true;
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit-mut" ];
          }
        ];

      };
      "pin-project-internal 1.0.7" = rec {
        crateName = "pin-project-internal";
        version = "1.0.7";
        edition = "2018";
        sha256 = "0vs289my2262ziwxj60mnzr2k41ibga73z8yddah1dc34l9m1ja8";
        procMacro = true;
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit-mut" ];
          }
        ];

      };
      "pin-project-lite 0.1.12" = rec {
        crateName = "pin-project-lite";
        version = "0.1.12";
        edition = "2018";
        sha256 = "0xx7f3wzc8ydvd1v2mmrxfypjchp52bphrirf08phbq8ba8n8yr5";
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];

      };
      "pin-project-lite 0.2.6" = rec {
        crateName = "pin-project-lite";
        version = "0.2.6";
        edition = "2018";
        sha256 = "01g96zxghb33s1vsjmjpn9l3a2nxdqj7glf9lhq7q5wjkhjiy3nw";
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];

      };
      "pin-utils" = rec {
        crateName = "pin-utils";
        version = "0.1.0";
        edition = "2018";
        sha256 = "117ir7vslsl2z1a7qzhws4pd01cg2d3338c47swjyvqv2n60v1wb";
        authors = [
          "Josef Brandl <mail@josefbrandl.de>"
        ];

      };
      "pkg-config" = rec {
        crateName = "pkg-config";
        version = "0.3.19";
        edition = "2015";
        sha256 = "0k4860955riciibxr8bhnklp79jydp4xfylwdn5v9kj96hxlac9q";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];

      };
      "polling" = rec {
        crateName = "polling";
        version = "2.0.3";
        edition = "2018";
        sha256 = "0yqbb0c9d2bg3rjg7h0sl4c0vd03l1n0gx0kmvmyk7kr9rvjvhag";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "wepoll-sys";
            packageId = "wepoll-sys";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "ioapiset" "winsock2" ];
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "polyval" = rec {
        crateName = "polyval";
        version = "0.4.5";
        edition = "2018";
        sha256 = "1kdpcjhc3666g8xaqichsyf6fhn8rry3z70dqhmvv6hb2jmc9g7f";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cpuid-bool";
            packageId = "cpuid-bool";
            target = { target, features }: ((target."arch" == "x86_64") || (target."arch" == "x86"));
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
          {
            name = "universal-hash";
            packageId = "universal-hash";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "std" = [ "universal-hash/std" ];
        };
        resolvedDefaultFeatures = [ "mulx" ];
      };
      "ppv-lite86" = rec {
        crateName = "ppv-lite86";
        version = "0.2.10";
        edition = "2018";
        sha256 = "0ms8198kclg4h96ggbziixxmsdl847s648kmbx11zlmjsqjccx5c";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "simd" "std" ];
      };
      "primitive-types 0.6.2" = rec {
        crateName = "primitive-types";
        version = "0.6.2";
        edition = "2018";
        sha256 = "0xdr3aj0vpxcg7lm6w0flm182g92z4kfcvxxpihgl92mbm7nycz4";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "fixed-hash";
            packageId = "fixed-hash 0.5.2";
            usesDefaultFeatures = false;
          }
          {
            name = "impl-codec";
            packageId = "impl-codec";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "uint";
            packageId = "uint";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "byteorder" = [ "fixed-hash/byteorder" ];
          "codec" = [ "impl-codec" ];
          "default" = [ "std" ];
          "libc" = [ "fixed-hash/libc" ];
          "rlp" = [ "impl-rlp" ];
          "rustc-hex" = [ "fixed-hash/rustc-hex" ];
          "serde" = [ "std" "impl-serde" ];
          "std" = [ "uint/std" "fixed-hash/std" "impl-codec/std" ];
        };
        resolvedDefaultFeatures = [ "codec" "default" "impl-codec" "std" ];
      };
      "primitive-types 0.7.3" = rec {
        crateName = "primitive-types";
        version = "0.7.3";
        edition = "2018";
        sha256 = "02cq2imxp4lvm45v6y34whjp4wcvr2xsf3api2j1nhbirz59vlvx";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "fixed-hash";
            packageId = "fixed-hash 0.6.1";
            usesDefaultFeatures = false;
          }
          {
            name = "impl-codec";
            packageId = "impl-codec";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "impl-serde";
            packageId = "impl-serde";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "uint";
            packageId = "uint";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "arbitrary" = [ "fixed-hash/arbitrary" "uint/arbitrary" ];
          "byteorder" = [ "fixed-hash/byteorder" ];
          "codec" = [ "impl-codec" ];
          "default" = [ "std" ];
          "fp-conversion" = [ "std" ];
          "rlp" = [ "impl-rlp" ];
          "rustc-hex" = [ "fixed-hash/rustc-hex" ];
          "serde" = [ "std" "impl-serde" "impl-serde/std" ];
          "serde_no_std" = [ "impl-serde" ];
          "std" = [ "uint/std" "fixed-hash/std" "impl-codec/std" ];
        };
        resolvedDefaultFeatures = [ "byteorder" "codec" "impl-codec" "impl-serde" "rustc-hex" "serde" "std" ];
      };
      "proc-macro-crate" = rec {
        crateName = "proc-macro-crate";
        version = "0.1.5";
        edition = "2018";
        sha256 = "11cpihdk9ba68hzw95aa8zxn0i5g6kdrfd4l2cy3d5jvb72a6vhx";
        authors = [
          "Bastian Köcher <git@kchr.de>"
        ];
        dependencies = [
          {
            name = "toml";
            packageId = "toml";
          }
        ];

      };
      "proc-macro-error" = rec {
        crateName = "proc-macro-error";
        version = "1.0.4";
        edition = "2018";
        sha256 = "1373bhxaf0pagd8zkyd03kkx6bchzf6g0dkwrwzsnal9z47lj9fs";
        authors = [
          "CreepySkeleton <creepy-skeleton@yandex.ru>"
        ];
        dependencies = [
          {
            name = "proc-macro-error-attr";
            packageId = "proc-macro-error-attr";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
          "default" = [ "syn-error" ];
          "syn-error" = [ "syn" ];
        };
        resolvedDefaultFeatures = [ "default" "syn" "syn-error" ];
      };
      "proc-macro-error-attr" = rec {
        crateName = "proc-macro-error-attr";
        version = "1.0.4";
        edition = "2018";
        sha256 = "0sgq6m5jfmasmwwy8x4mjygx5l7kp8s4j60bv25ckv2j1qc41gm1";
        procMacro = true;
        authors = [
          "CreepySkeleton <creepy-skeleton@yandex.ru>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];

      };
      "proc-macro-hack" = rec {
        crateName = "proc-macro-hack";
        version = "0.5.19";
        edition = "2018";
        sha256 = "1rg0kzsj7lj00qj602d3h77spwfz48vixn1wbjp7a4yrq65w9w6v";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];

      };
      "proc-macro-nested" = rec {
        crateName = "proc-macro-nested";
        version = "0.1.7";
        edition = "2015";
        sha256 = "11hh1jynh62f3m1ii0f9gf1l3y0fhkwpmr40lz3704v848n1p25w";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];

      };
      "proc-macro2" = rec {
        crateName = "proc-macro2";
        version = "1.0.27";
        edition = "2018";
        sha256 = "0f3h0zl5w5090ajmmvpmhkpr4iwqnn5rip3afacabhc657vwmn7h";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "prometheus 0.10.0" = rec {
        crateName = "prometheus";
        version = "0.10.0";
        edition = "2018";
        sha256 = "1bi0c6rx2w4c2rvyj99m686lavm6yh37kqpzkjnbqci887s0rmrh";
        authors = [
          "overvenus@gmail.com"
          "siddontang@gmail.com"
          "vistaswx@gmail.com"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.11.1";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        features = {
          "default" = [ "protobuf" ];
          "gen" = [ "protobuf-codegen-pure" ];
          "nightly" = [ "libc" ];
          "process" = [ "libc" "procfs" ];
          "push" = [ "reqwest" "libc" "protobuf" ];
        };
      };
      "prometheus 0.11.0" = rec {
        crateName = "prometheus";
        version = "0.11.0";
        edition = "2018";
        sha256 = "0390kh6xlx9adqkwcymf6b6a5lvan5264zm3qwy0qbqjwwrmahn8";
        authors = [
          "overvenus@gmail.com"
          "siddontang@gmail.com"
          "vistaswx@gmail.com"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.11.1";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        features = {
          "default" = [ "protobuf" ];
          "gen" = [ "protobuf-codegen-pure" ];
          "nightly" = [ "libc" ];
          "process" = [ "libc" "procfs" ];
          "push" = [ "reqwest" "libc" "protobuf" ];
        };
      };
      "prost" = rec {
        crateName = "prost";
        version = "0.6.1";
        edition = "2018";
        sha256 = "04n2i5ryhi5pwl524pxmfxv5z6l5s9xwf9r9wdfs8i311bzawjff";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
          }
          {
            name = "prost-derive";
            packageId = "prost-derive";
            optional = true;
          }
        ];
        features = {
          "default" = [ "prost-derive" ];
        };
        resolvedDefaultFeatures = [ "default" "prost-derive" ];
      };
      "prost-build" = rec {
        crateName = "prost-build";
        version = "0.6.1";
        edition = "2018";
        sha256 = "09iggxnikpawp7bw2gvpq1v8c6prmv1kb18f6mlvvv0kr5w0dc82";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
          }
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "itertools";
            packageId = "itertools 0.8.2";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "multimap";
            packageId = "multimap";
            usesDefaultFeatures = false;
          }
          {
            name = "petgraph";
            packageId = "petgraph";
            usesDefaultFeatures = false;
          }
          {
            name = "prost";
            packageId = "prost";
          }
          {
            name = "prost-types";
            packageId = "prost-types";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
        ];
        buildDependencies = [
          {
            name = "which";
            packageId = "which";
            usesDefaultFeatures = false;
          }
        ];

      };
      "prost-derive" = rec {
        crateName = "prost-derive";
        version = "0.6.1";
        edition = "2018";
        sha256 = "0wlgn7nbb3x79xdlxkg47m05gxw6cd302hzc5yhi1pmcjnds2yjk";
        procMacro = true;
        authors = [
          "Dan Burkert <dan@danburkert.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "itertools";
            packageId = "itertools 0.8.2";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "extra-traits" ];
          }
        ];

      };
      "prost-types" = rec {
        crateName = "prost-types";
        version = "0.6.1";
        edition = "2018";
        sha256 = "1ahp6j6b62zfv1d0hfns5rs8k76xgbv7dgkm9cq03h4p0rygcd0q";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
          }
          {
            name = "prost";
            packageId = "prost";
          }
        ];

      };
      "qstring" = rec {
        crateName = "qstring";
        version = "0.7.2";
        edition = "2018";
        sha256 = "0khhcpwifis87r5chr4jiv3w1bkswcf226c0yjx809pzbzkglr6l";
        authors = [
          "Martin Algesten <martin@algesten.se>"
        ];
        dependencies = [
          {
            name = "percent-encoding";
            packageId = "percent-encoding 2.1.0";
          }
        ];

      };
      "quick-error" = rec {
        crateName = "quick-error";
        version = "1.2.3";
        edition = "2015";
        sha256 = "1q6za3v78hsspisc197bg3g7rpc989qycy8ypr8ap8igv10ikl51";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
        ];

      };
      "quote" = rec {
        crateName = "quote";
        version = "1.0.9";
        edition = "2018";
        sha256 = "19rjmfqzk26rxbgxy5j2ckqc2v12sw2xw8l4gi8bzpn2bmsbkl63";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "radium" = rec {
        crateName = "radium";
        version = "0.3.0";
        edition = "2018";
        sha256 = "1b27ihsm5sg17nrkj475y1wymzdxzg7lxy770c98crb16230mxfy";
        authors = [
          "Nika Layzell <nika@thelayzells.com>"
          "myrrlyn <self@myrrlyn.dev>"
        ];

      };
      "rand 0.4.6" = rec {
        crateName = "rand";
        version = "0.4.6";
        edition = "2015";
        sha256 = "14qjfv3gggzhnma20k0sc1jf8y6pplsaq7n1j9ls5c8kf2wl0a2m";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "fuchsia-cprng";
            packageId = "fuchsia-cprng";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
            target = { target, features }: (target."env" == "sgx");
          }
          {
            name = "rdrand";
            packageId = "rdrand";
            target = { target, features }: (target."env" == "sgx");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "nightly" = [ "i128_support" ];
          "std" = [ "libc" ];
        };
        resolvedDefaultFeatures = [ "default" "libc" "std" ];
      };
      "rand 0.5.6" = rec {
        crateName = "rand";
        version = "0.5.6";
        edition = "2015";
        sha256 = "1fdcgja9167hlzkf4g5daqwp498lwiyq7aqm05whklpbsdyc8666";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "cloudabi";
            packageId = "cloudabi";
            optional = true;
            target = { target, features }: (target."os" == "cloudabi");
          }
          {
            name = "fuchsia-cprng";
            packageId = "fuchsia-cprng";
            optional = true;
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            optional = true;
            target = { target, features }: (target."windows" or false);
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "i128_support" ];
          "serde1" = [ "serde" "serde_derive" "rand_core/serde1" ];
          "std" = [ "rand_core/std" "alloc" "libc" "winapi" "cloudabi" "fuchsia-cprng" ];
        };
        resolvedDefaultFeatures = [ "alloc" "cloudabi" "default" "fuchsia-cprng" "libc" "std" "winapi" ];
      };
      "rand 0.6.5" = rec {
        crateName = "rand";
        version = "0.6.5";
        edition = "2015";
        sha256 = "1jl4449jcl4wgmzld6ffwqj5gwxrp8zvx8w573g1z368qg6xlwbd";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.1.1";
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
          }
          {
            name = "rand_hc";
            packageId = "rand_hc 0.1.0";
          }
          {
            name = "rand_isaac";
            packageId = "rand_isaac";
          }
          {
            name = "rand_jitter";
            packageId = "rand_jitter";
          }
          {
            name = "rand_os";
            packageId = "rand_os";
            optional = true;
          }
          {
            name = "rand_pcg";
            packageId = "rand_pcg 0.1.2";
          }
          {
            name = "rand_xorshift";
            packageId = "rand_xorshift";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "simd_support" ];
          "serde1" = [ "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1" ];
          "simd_support" = [ "packed_simd" ];
          "std" = [ "rand_core/std" "alloc" "rand_os" "rand_jitter/std" ];
          "stdweb" = [ "rand_os/stdweb" ];
          "wasm-bindgen" = [ "rand_os/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "rand_os" "std" ];
      };
      "rand 0.7.3" = rec {
        crateName = "rand";
        version = "0.7.3";
        edition = "2018";
        sha256 = "00sdaimkbz491qgi6qxkv582yivl32m2jd401kzbn94vsiwicsva";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom 0.1.16";
            rename = "getrandom_package";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.2.2";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."os" == "emscripten"));
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
          }
          {
            name = "rand_hc";
            packageId = "rand_hc 0.2.0";
            target = { target, features }: (target."os" == "emscripten");
          }
          {
            name = "rand_pcg";
            packageId = "rand_pcg 0.2.1";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "rand_hc";
            packageId = "rand_hc 0.2.0";
          }
          {
            name = "rand_pcg";
            packageId = "rand_pcg 0.2.1";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "getrandom" = [ "getrandom_package" "rand_core/getrandom" ];
          "nightly" = [ "simd_support" ];
          "simd_support" = [ "packed_simd" ];
          "small_rng" = [ "rand_pcg" ];
          "std" = [ "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc" ];
          "stdweb" = [ "getrandom_package/stdweb" ];
          "wasm-bindgen" = [ "getrandom_package/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "getrandom" "getrandom_package" "libc" "rand_pcg" "small_rng" "std" ];
      };
      "rand 0.8.3" = rec {
        crateName = "rand";
        version = "0.8.3";
        edition = "2018";
        sha256 = "0zldxfx4gi551n2fna4zz9ab22zsnzw1mj5hzi5nfs24dgkfgy8f";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.3.0";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."os" == "emscripten"));
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.6.2";
          }
          {
            name = "rand_hc";
            packageId = "rand_hc 0.3.0";
            optional = true;
            target = { target, features }: (target."os" == "emscripten");
          }
        ];
        devDependencies = [
          {
            name = "rand_hc";
            packageId = "rand_hc 0.3.0";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" "std_rng" ];
          "getrandom" = [ "rand_core/getrandom" ];
          "serde1" = [ "serde" ];
          "simd_support" = [ "packed_simd" ];
          "std" = [ "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc" ];
          "std_rng" = [ "rand_chacha" "rand_hc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "getrandom" "libc" "rand_chacha" "rand_hc" "std" "std_rng" ];
      };
      "rand_chacha 0.1.1" = rec {
        crateName = "rand_chacha";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1vxwyzs4fy1ffjc8l00fsyygpiss135irjf7nyxgq2v0lqf3lvam";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7";
          }
        ];

      };
      "rand_chacha 0.2.2" = rec {
        crateName = "rand_chacha";
        version = "0.2.2";
        edition = "2018";
        sha256 = "00il36fkdbsmpr99p9ksmmp6dn1md7rmnwmz0rr77jbrca2yvj7l";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
          "The CryptoCorrosion Contributors"
        ];
        dependencies = [
          {
            name = "ppv-lite86";
            packageId = "ppv-lite86";
            usesDefaultFeatures = false;
            features = [ "simd" ];
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
          }
        ];
        features = {
          "default" = [ "std" "simd" ];
          "std" = [ "ppv-lite86/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rand_chacha 0.3.0" = rec {
        crateName = "rand_chacha";
        version = "0.3.0";
        edition = "2018";
        sha256 = "03df2xh5nbdvwr17qm3sviaxa95r8yhm1nil2pr0pqf90p7ka9z1";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
          "The CryptoCorrosion Contributors"
        ];
        dependencies = [
          {
            name = "ppv-lite86";
            packageId = "ppv-lite86";
            usesDefaultFeatures = false;
            features = [ "simd" ];
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.6.2";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "ppv-lite86/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rand_core 0.3.1" = rec {
        crateName = "rand_core";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0jzdgszfa4bliigiy4hi66k7fs3gfwi2qxn8vik84ph77fwdwvvs";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "serde1" = [ "rand_core/serde1" ];
          "std" = [ "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "rand_core 0.4.2" = rec {
        crateName = "rand_core";
        version = "0.4.2";
        edition = "2015";
        sha256 = "1p09ynysrq1vcdlmcqnapq4qakl2yd1ng3kxh3qscpx09k2a6cww";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "rand_core 0.5.1" = rec {
        crateName = "rand_core";
        version = "0.5.1";
        edition = "2018";
        sha256 = "06bdvx08v3rkz451cm7z59xwwqn1rkfh6v9ay77b14f8dwlybgch";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom 0.1.16";
            optional = true;
          }
        ];
        features = {
          "serde1" = [ "serde" ];
          "std" = [ "alloc" "getrandom" "getrandom/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "getrandom" "std" ];
      };
      "rand_core 0.6.2" = rec {
        crateName = "rand_core";
        version = "0.6.2";
        edition = "2018";
        sha256 = "1rvas1afjvd2827b8mf2ilg78h3ksl9npkrdds3wbw9x33mndkrl";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom 0.2.3";
            optional = true;
          }
        ];
        features = {
          "serde1" = [ "serde" ];
          "std" = [ "alloc" "getrandom" "getrandom/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "getrandom" "std" ];
      };
      "rand_hc 0.1.0" = rec {
        crateName = "rand_hc";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1i0vl8q5ddvvy0x8hf1zxny393miyzxkwqnw31ifg6p0gdy6fh3v";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];

      };
      "rand_hc 0.2.0" = rec {
        crateName = "rand_hc";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0g31sqwpmsirdlwr0svnacr4dbqyz339im4ssl9738cjgfpjjcfa";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
          }
        ];

      };
      "rand_hc 0.3.0" = rec {
        crateName = "rand_hc";
        version = "0.3.0";
        edition = "2018";
        sha256 = "0wra6ar22zdjkry9dsq1mg620m4h3qb9s8rfykkz4im4crqfz41i";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.6.2";
          }
        ];

      };
      "rand_isaac" = rec {
        crateName = "rand_isaac";
        version = "0.1.1";
        edition = "2015";
        sha256 = "027flpjr4znx2csxk7gxb7vrf9c7y5mydmvg5az2afgisp4rgnfy";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" "rand_core/serde1" ];
        };
      };
      "rand_jitter" = rec {
        crateName = "rand_jitter";
        version = "0.1.4";
        edition = "2015";
        sha256 = "16z387y46bfz3csc42zxbjq89vcr1axqacncvv8qhyy93p4xarhi";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
            features = [ "profileapi" ];
          }
        ];
        features = {
          "std" = [ "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rand_os" = rec {
        crateName = "rand_os";
        version = "0.1.3";
        edition = "2015";
        sha256 = "0wahppm0s64gkr2vmhcgwc0lij37in1lgfxg5rbgqlz0l5vgcxbv";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "cloudabi";
            packageId = "cloudabi";
            target = { target, features }: (target."os" == "cloudabi");
          }
          {
            name = "fuchsia-cprng";
            packageId = "fuchsia-cprng";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
            features = [ "std" ];
          }
          {
            name = "rdrand";
            packageId = "rdrand";
            target = { target, features }: (target."env" == "sgx");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "minwindef" "ntsecapi" "winnt" ];
          }
        ];

      };
      "rand_pcg 0.1.2" = rec {
        crateName = "rand_pcg";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0i0bdla18a8x4jn1w0fxsbs3jg7ajllz6azmch1zw33r06dv1ydb";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7";
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
      "rand_pcg 0.2.1" = rec {
        crateName = "rand_pcg";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0ab4h6s6x3py833jk61lwadq83qd1c8bih2hgi6yps9rnv0x1aqn";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
          }
        ];
        features = {
          "serde1" = [ "serde" ];
        };
      };
      "rand_xorshift" = rec {
        crateName = "rand_xorshift";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0p2x8nr00hricpi2m6ca5vysiha7ybnghz79yqhhx6sl4gkfkxyb";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
      "rawpointer" = rec {
        crateName = "rawpointer";
        version = "0.2.1";
        edition = "2015";
        sha256 = "1qy1qvj17yh957vhffnq6agq0brvylw27xgks171qrah75wmg8v0";
        authors = [
          "bluss"
        ];

      };
      "rayon" = rec {
        crateName = "rayon";
        version = "1.5.1";
        edition = "2018";
        sha256 = "143dl2453bazgk7rwjrickmyqd0ks3q69nfz8axcins19n0clsn0";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
          }
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
          {
            name = "rayon-core";
            packageId = "rayon-core";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];

      };
      "rayon-core" = rec {
        crateName = "rayon-core";
        version = "1.9.1";
        edition = "2018";
        sha256 = "13kdcnqp2p1a5a3amamfjpnm7ay463vq4dfxy4rrh9shr3i210fp";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel";
          }
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];

      };
      "rdrand" = rec {
        crateName = "rdrand";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1cjq0kwx1bk7jx3kzyciiish5gqsj7620dm43dc52sr8fzmm9037";
        authors = [
          "Simonas Kazlauskas <rdrand@kazlauskas.me>"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "redox_syscall 0.1.57" = rec {
        crateName = "redox_syscall";
        version = "0.1.57";
        edition = "2015";
        sha256 = "1kh59fpwy33w9nwd5iyc283yglq8pf2s41hnhvl48iax9mz0zk21";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];

      };
      "redox_syscall 0.2.8" = rec {
        crateName = "redox_syscall";
        version = "0.2.8";
        edition = "2018";
        sha256 = "1z27f6rzm0lcpszbr2dmfyna7qmpmx4yb98yhzg1956l3kj3j9vl";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
        ];

      };
      "ref-cast" = rec {
        crateName = "ref-cast";
        version = "1.0.6";
        edition = "2018";
        sha256 = "1nj1wp530yd1rx545qisvllvp7nbv9x00iax57p391w0bn1jl3rh";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "ref-cast-impl";
            packageId = "ref-cast-impl";
          }
        ];

      };
      "ref-cast-impl" = rec {
        crateName = "ref-cast-impl";
        version = "1.0.6";
        edition = "2018";
        sha256 = "1lndalzfwhrpknibjs027zjcfjvincxqhyv3b4wwn89brnpf6f2c";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "regex" = rec {
        crateName = "regex";
        version = "1.5.4";
        edition = "2018";
        sha256 = "0qf479kjbmb582h4d1d6gfl75h0j8aq2nrdi5wg6zdcy6llqcynh";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "aho-corasick";
            packageId = "aho-corasick";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" "perf" "unicode" "regex-syntax/default" ];
          "perf" = [ "perf-cache" "perf-dfa" "perf-inline" "perf-literal" ];
          "perf-literal" = [ "aho-corasick" "memchr" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" "regex-syntax/unicode" ];
          "unicode-age" = [ "regex-syntax/unicode-age" ];
          "unicode-bool" = [ "regex-syntax/unicode-bool" ];
          "unicode-case" = [ "regex-syntax/unicode-case" ];
          "unicode-gencat" = [ "regex-syntax/unicode-gencat" ];
          "unicode-perl" = [ "regex-syntax/unicode-perl" ];
          "unicode-script" = [ "regex-syntax/unicode-script" ];
          "unicode-segment" = [ "regex-syntax/unicode-segment" ];
          "unstable" = [ "pattern" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "aho-corasick" "default" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
      "regex-automata" = rec {
        crateName = "regex-automata";
        version = "0.1.9";
        edition = "2015";
        sha256 = "1r3aqa9c0s9sfrmd2w0mli16ldjzbar0rzb1x7srfjkasrqys7df";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "regex-syntax" ];
          "transducer" = [ "std" "fst" ];
        };
        resolvedDefaultFeatures = [ "default" "regex-syntax" "std" ];
      };
      "regex-syntax" = rec {
        crateName = "regex-syntax";
        version = "0.6.25";
        edition = "2018";
        sha256 = "16y87hz1bxmmz6kk360cxwfm3jnbsxb3x4zw9x1gzz7khic2i5zl";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "unicode" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
        };
        resolvedDefaultFeatures = [ "default" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
      "remove_dir_all" = rec {
        crateName = "remove_dir_all";
        version = "0.5.3";
        edition = "2015";
        sha256 = "1rzqbsgkmr053bxxl04vmvsd1njyz0nxvly97aip6aa2cmb15k9s";
        authors = [
          "Aaronepower <theaaronepower@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "std" "errhandlingapi" "winerror" "fileapi" "winbase" ];
          }
        ];

      };
      "reqwest" = rec {
        crateName = "reqwest";
        version = "0.10.10";
        edition = "2018";
        sha256 = "0z7l46m1mjnvncscaq61zq6qmazrmb33vwjcnfrxpi0liqdgh607";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
          }
          {
            name = "encoding_rs";
            packageId = "encoding_rs";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "http-body";
            packageId = "http-body";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "hyper";
            packageId = "hyper";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
            features = [ "tcp" ];
          }
          {
            name = "hyper-tls";
            packageId = "hyper-tls";
            optional = true;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "ipnet";
            packageId = "ipnet";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "js-sys";
            packageId = "js-sys";
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "log";
            packageId = "log";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "mime";
            packageId = "mime";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "mime_guess";
            packageId = "mime_guess";
          }
          {
            name = "native-tls";
            packageId = "native-tls";
            rename = "native-tls-crate";
            optional = true;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 2.1.0";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.6";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            optional = true;
          }
          {
            name = "serde_urlencoded";
            packageId = "serde_urlencoded";
          }
          {
            name = "tokio";
            packageId = "tokio";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
            features = [ "tcp" "time" ];
          }
          {
            name = "tokio-tls";
            packageId = "tokio-tls";
            optional = true;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "url";
            packageId = "url 2.2.2";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            target = { target, features }: (target."arch" == "wasm32");
            features = [ "serde-serialize" ];
          }
          {
            name = "wasm-bindgen-futures";
            packageId = "wasm-bindgen-futures";
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            target = { target, features }: (target."arch" == "wasm32");
            features = [ "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" ];
          }
          {
            name = "winreg";
            packageId = "winreg";
            target = { target, features }: (target."windows" or false);
          }
        ];
        devDependencies = [
          {
            name = "hyper";
            packageId = "hyper";
            usesDefaultFeatures = false;
            target = {target, features}: (!(target."arch" == "wasm32"));
            features = [ "tcp" "stream" ];
          }
          {
            name = "serde";
            packageId = "serde";
            target = {target, features}: (!(target."arch" == "wasm32"));
            features = [ "derive" ];
          }
          {
            name = "tokio";
            packageId = "tokio";
            usesDefaultFeatures = false;
            target = {target, features}: (!(target."arch" == "wasm32"));
            features = [ "macros" ];
          }
        ];
        features = {
          "__rustls" = [ "hyper-rustls" "tokio-rustls" "rustls" "__tls" ];
          "blocking" = [ "futures-util/io" "tokio/rt-threaded" "tokio/rt-core" "tokio/sync" ];
          "brotli" = [ "async-compression" "async-compression/brotli" ];
          "cookies" = [ "cookie_crate" "cookie_store" "time" ];
          "default" = [ "default-tls" ];
          "default-tls" = [ "hyper-tls" "native-tls-crate" "__tls" "tokio-tls" ];
          "gzip" = [ "async-compression" "async-compression/gzip" ];
          "json" = [ "serde_json" ];
          "native-tls" = [ "default-tls" ];
          "native-tls-vendored" = [ "native-tls" "native-tls-crate/vendored" ];
          "rustls-tls" = [ "rustls-tls-webpki-roots" ];
          "rustls-tls-manual-roots" = [ "__rustls" ];
          "rustls-tls-native-roots" = [ "rustls-native-certs" "__rustls" ];
          "rustls-tls-webpki-roots" = [ "webpki-roots" "__rustls" ];
          "socks" = [ "tokio-socks" ];
          "trust-dns" = [ "trust-dns-resolver" ];
        };
        resolvedDefaultFeatures = [ "__tls" "blocking" "default" "default-tls" "hyper-tls" "json" "native-tls-crate" "serde_json" "tokio-tls" ];
      };
      "resource-viewer" = rec {
        crateName = "resource-viewer";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "compiled-stdlib";
            packageId = "compiled-stdlib";
          }
          {
            name = "diem-state-view";
            packageId = "diem-state-view";
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "move-vm-runtime";
            packageId = "move-vm-runtime";
          }
          {
            name = "move-vm-types";
            packageId = "move-vm-types";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" "rc" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "vm";
            packageId = "vm";
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" "diem-state-view/dfinance_address" "diem-types/dfinance_address" "move-core-types/dfinance_address" "move-vm-runtime/dfinance_address" "move-vm-types/dfinance_address" "compiled-stdlib/dfinance_address" "vm/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" "diem-state-view/diem_address" "diem-types/diem_address" "move-core-types/diem_address" "move-vm-runtime/diem_address" "move-vm-types/diem_address" "compiled-stdlib/diem_address" "vm/diem_address" ];
          "ps_address" = [ "move-core-types/diem_address" "diem-state-view/diem_address" "diem-types/diem_address" "move-core-types/diem_address" "move-vm-runtime/diem_address" "move-vm-types/diem_address" "compiled-stdlib/diem_address" "vm/diem_address" ];
        };
      };
      "resources" = rec {
        crateName = "resources";
        version = "0.1.0";
        edition = "2018";
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ./resources; };
        authors = [
          "Alex Koz. <alexanderkozlovskii@wings.ai>"
          "Dm. Yakushev <dmitryyakushev@wings.ai>"
          "Maxim Kurnikov <maximkurnikov@wings.ai>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
        ];

      };
      "ring" = rec {
        crateName = "ring";
        version = "0.16.20";
        edition = "2018";
        sha256 = "1z682xp7v38ayq9g9nkbhhfpj6ygralmlx7wdmsfv8rnw99cylrh";
        authors = [
          "Brian Smith <brian@briansmith.org>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "android") || (target."os" == "linux"));
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "android") || (target."os" == "linux"));
            features = [ "std" ];
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "dragonfly") || (target."os" == "freebsd") || (target."os" == "illumos") || (target."os" == "netbsd") || (target."os" == "openbsd") || (target."os" == "solaris"));
            features = [ "std" ];
          }
          {
            name = "spin";
            packageId = "spin";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."arch" == "x86") || (target."arch" == "x86_64") || (((target."arch" == "aarch64") || (target."arch" == "arm")) && ((target."os" == "android") || (target."os" == "fuchsia") || (target."os" == "linux"))));
          }
          {
            name = "untrusted";
            packageId = "untrusted";
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."arch" == "wasm32") && (target."vendor" == "unknown") && (target."os" == "unknown") && (target."env" == ""));
            features = [ "Crypto" "Window" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            usesDefaultFeatures = false;
            target = { target, features }: (target."os" == "windows");
            features = [ "ntsecapi" "wtypesbase" ];
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = {target, features}: ((target."unix" or false) || (target."windows" or false));
          }
        ];
        features = {
          "default" = [ "alloc" "dev_urandom_fallback" ];
          "dev_urandom_fallback" = [ "once_cell" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "rust-base58" = rec {
        crateName = "rust-base58";
        version = "0.0.4";
        edition = "2015";
        sha256 = "0fa4y2jjjmg1a0cr3gz4z8rkic0hx2vx5nm23za9lwf6rlgvj4xk";
        authors = [
          "Nick Hamann <nick@wabbo.org>"
        ];
        dependencies = [
          {
            name = "num";
            packageId = "num 0.4.0";
          }
        ];

      };
      "rustc-demangle" = rec {
        crateName = "rustc-demangle";
        version = "0.1.19";
        edition = "2015";
        sha256 = "1kkhizz8nj94qlprypsxj5hc9rpl9fnnnm6rqlklb95k7k7pl3s1";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "rustc-hash" = rec {
        crateName = "rustc-hash";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1qkc5khrmv5pqi5l5ca9p5nl5hs742cagrndhbrlk3dhlrx3zm08";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "rustc-hex" = rec {
        crateName = "rustc-hex";
        version = "2.1.0";
        edition = "2018";
        sha256 = "1mkjy2vbn5kzg67wgngwddlk4snmd8mkjkql2dzrzzfh6ajzcx9y";
        authors = [
          "The Rust Project Developers"
          "debris <marek.kotewicz@gmail.com>"
          "Robert Habermeier"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rw-stream-sink" = rec {
        crateName = "rw-stream-sink";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0810glqcrs36r3k3a5skg40kygd9hn914fw3zxfmlvy4ajqgr9ad";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.15";
          }
          {
            name = "pin-project";
            packageId = "pin-project 0.4.28";
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
        ];

      };
      "ryu" = rec {
        crateName = "ryu";
        version = "1.0.5";
        edition = "2018";
        sha256 = "0vpqv1dj7fksa6hm3zpk5rbsjs0ifbfy7xwzsyyil0rx37a03lvi";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
        };
      };
      "same-file" = rec {
        crateName = "same-file";
        version = "1.0.6";
        edition = "2018";
        sha256 = "00h5j1w87dmhnvbv9l8bic3y7xxsnjmssvifw2ayvgx9mb1ivz4k";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: (target."windows" or false);
          }
        ];

      };
      "sc-rpc-api" = rec {
        crateName = "sc-rpc-api";
        version = "0.8.1";
        edition = "2018";
        sha256 = "1gl4qz3vf93y50rjs7ysakz2d5zryfq30rzhnk90g68rr05yspx5";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "derive_more";
            packageId = "derive_more";
          }
          {
            name = "futures";
            packageId = "futures 0.3.15";
            features = [ "compat" ];
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "jsonrpc-core-client";
            packageId = "jsonrpc-core-client";
          }
          {
            name = "jsonrpc-derive";
            packageId = "jsonrpc-derive";
          }
          {
            name = "jsonrpc-pubsub";
            packageId = "jsonrpc-pubsub";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.10.2";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "sp-chain-spec";
            packageId = "sp-chain-spec";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-rpc";
            packageId = "sp-rpc";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "sp-transaction-pool";
            packageId = "sp-transaction-pool";
          }
          {
            name = "sp-version";
            packageId = "sp-version";
          }
        ];

      };
      "schannel" = rec {
        crateName = "schannel";
        version = "0.1.19";
        edition = "2015";
        sha256 = "0xdwr3clrylywpv2r5hw7mrxmsf7ljagwiymw2z60ki3kihbl1cg";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Steffen Butzer <steffen.butzer@outlook.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            features = [ "lmcons" "minschannel" "securitybaseapi" "schannel" "sspi" "sysinfoapi" "timezoneapi" "winbase" "wincrypt" "winerror" ];
          }
        ];

      };
      "schemars" = rec {
        crateName = "schemars";
        version = "0.8.3";
        edition = "2018";
        sha256 = "0y6bcsrc2sigri8612r8gmwpn9c5r6200v56rfswrb1mmriv8smw";
        authors = [
          "Graham Esau <gesau@hotmail.co.uk>"
        ];
        dependencies = [
          {
            name = "dyn-clone";
            packageId = "dyn-clone";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
            optional = true;
            features = [ "serde-1" ];
          }
          {
            name = "schemars_derive";
            packageId = "schemars_derive";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
        ];
        features = {
          "default" = [ "derive" ];
          "derive" = [ "schemars_derive" ];
          "derive_json_schema" = [ "impl_json_schema" ];
          "impl_json_schema" = [ "derive" ];
          "preserve_order" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "default" "derive" "indexmap" "preserve_order" "schemars_derive" ];
      };
      "schemars_derive" = rec {
        crateName = "schemars_derive";
        version = "0.8.3";
        edition = "2018";
        sha256 = "0mhksgh3nzkq2nlk57gn12yamp85b70b5x6x7djqzbkiz2ydybwh";
        procMacro = true;
        authors = [
          "Graham Esau <gesau@hotmail.co.uk>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "serde_derive_internals";
            packageId = "serde_derive_internals";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "extra-traits" ];
          }
        ];

      };
      "schnorrkel" = rec {
        crateName = "schnorrkel";
        version = "0.9.1";
        edition = "2018";
        sha256 = "0qkq4sm7yppih2zw753aadfqwn69ngv15spnd3m1xn3hzqx406q2";
        authors = [
          "Jeff Burdges <jeff@web3.foundation>"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
            usesDefaultFeatures = false;
          }
          {
            name = "arrayvec";
            packageId = "arrayvec 0.5.2";
            usesDefaultFeatures = false;
          }
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek 2.1.2";
            usesDefaultFeatures = false;
          }
          {
            name = "getrandom";
            packageId = "getrandom 0.1.16";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "merlin";
            packageId = "merlin";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "sha2";
            packageId = "sha2 0.8.2";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.0";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" ];
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "sha2";
            packageId = "sha2 0.8.2";
          }
        ];
        features = {
          "alloc" = [ "curve25519-dalek/alloc" "rand_core/alloc" ];
          "asm" = [ "sha2/asm" ];
          "avx2_backend" = [ "curve25519-dalek/avx2_backend" ];
          "chacha" = [ "rand_chacha" ];
          "default" = [ "std" "u64_backend" "rand" "getrandom" ];
          "nightly" = [ "curve25519-dalek/nightly" "rand/nightly" ];
          "std" = [ "getrandom" "curve25519-dalek/std" "rand/std" ];
          "stdweb" = [ "getrandom/stdweb" ];
          "u32_backend" = [ "curve25519-dalek/u32_backend" ];
          "u64_backend" = [ "curve25519-dalek/u64_backend" ];
          "wasm-bindgen" = [ "getrandom/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "default" "getrandom" "preaudit_deprecated" "rand" "std" "u64_backend" ];
      };
      "scopeguard" = rec {
        crateName = "scopeguard";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1kbqm85v43rq92vx7hfiay6pmcga03vrjbbfwqpyj3pwsg3b16nj";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
      "secrecy" = rec {
        crateName = "secrecy";
        version = "0.6.0";
        edition = "2018";
        sha256 = "03q7h4yswpbrgxgn6wk9dyhilqhwcbhgwyy2m5vk9ps5ss72g0li";
        authors = [
          "Tony Arcieri <tony@iqlusion.io>"
        ];
        dependencies = [
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "zeroize/alloc" ];
          "default" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" ];
      };
      "security-framework" = rec {
        crateName = "security-framework";
        version = "2.2.0";
        edition = "2018";
        sha256 = "115xn71aa7qimk1rrg9zxai6mh76mdxas7n75ccls27nzp9b2w1n";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Kornel <kornel@geekhood.net>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "core-foundation";
            packageId = "core-foundation";
          }
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "security-framework-sys";
            packageId = "security-framework-sys";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "OSX_10_10" = [ "OSX_10_9" "security-framework-sys/OSX_10_10" ];
          "OSX_10_11" = [ "OSX_10_10" "security-framework-sys/OSX_10_11" ];
          "OSX_10_12" = [ "OSX_10_11" "security-framework-sys/OSX_10_12" ];
          "OSX_10_13" = [ "OSX_10_12" "security-framework-sys/OSX_10_13" "alpn" "session-tickets" ];
          "OSX_10_14" = [ "OSX_10_13" "security-framework-sys/OSX_10_14" ];
          "OSX_10_9" = [ "security-framework-sys/OSX_10_9" ];
          "default" = [ "OSX_10_9" ];
        };
        resolvedDefaultFeatures = [ "OSX_10_9" "default" ];
      };
      "security-framework-sys" = rec {
        crateName = "security-framework-sys";
        version = "2.2.0";
        edition = "2018";
        sha256 = "0fb3q4d0z7zbfdip85xvwkipr14dg4w31klrxjhckqngsf7jaxin";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Kornel <kornel@geekhood.net>"
        ];
        dependencies = [
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "OSX_10_10" = [ "OSX_10_9" ];
          "OSX_10_11" = [ "OSX_10_10" ];
          "OSX_10_12" = [ "OSX_10_11" ];
          "OSX_10_13" = [ "OSX_10_12" ];
          "OSX_10_14" = [ "OSX_10_13" ];
          "default" = [ "OSX_10_9" ];
        };
        resolvedDefaultFeatures = [ "OSX_10_9" "default" ];
      };
      "serde" = rec {
        crateName = "serde";
        version = "1.0.118";
        edition = "2015";
        sha256 = "0028kv3dh3ix5g7jfws22zb9hcqq4cnpwn2lnlpam1wxhmil5ih6";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
        ];
        features = {
          "default" = [ "std" ];
          "derive" = [ "serde_derive" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "derive" "rc" "serde_derive" "std" ];
      };
      "serde-name" = rec {
        crateName = "serde-name";
        version = "0.1.1";
        edition = "2018";
        sha256 = "1n4b08zlc309fgg38g7iv76l3kz2n1n1bdswhzlcdvds61x2ni47";
        authors = [
          "Mathieu Baudet <mathieubaudet@calibra.com>"
          "Brandon Williams <bmwill@calibra.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];

      };
      "serde_bytes" = rec {
        crateName = "serde_bytes";
        version = "0.11.5";
        edition = "2018";
        sha256 = "1fcb6sw8wkrj4ylm118wkb31hw124nkjnqyhbgqnd8w85zfhgbhn";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "serde/alloc" ];
          "default" = [ "std" ];
          "std" = [ "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "serde_derive" = rec {
        crateName = "serde_derive";
        version = "1.0.118";
        edition = "2015";
        sha256 = "1pvj4v8k107ichsnm7jgm9kxyi2lf971x52bmxhm5mcwd4k3akf8";
        procMacro = true;
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "visit" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "serde_derive_internals" = rec {
        crateName = "serde_derive_internals";
        version = "0.25.0";
        edition = "2015";
        sha256 = "1ihqfkpplqqiwmh87s8p9jsv27ibkz1z7gc0abqs2mrhlr6b7fhx";
        libPath = "lib.rs";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "derive" "parsing" "printing" "clone-impls" ];
          }
        ];

      };
      "serde_json" = rec {
        crateName = "serde_json";
        version = "1.0.64";
        edition = "2018";
        sha256 = "0y9gk3yikncrc0zajmwc0pidr7zfwafawb4gidf6mqyskzf9g7kr";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "itoa";
            packageId = "itoa";
            usesDefaultFeatures = false;
          }
          {
            name = "ryu";
            packageId = "ryu";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "serde/alloc" ];
          "default" = [ "std" ];
          "preserve_order" = [ "indexmap" ];
          "std" = [ "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "serde_repr" = rec {
        crateName = "serde_repr";
        version = "0.1.7";
        edition = "2018";
        sha256 = "1mcy39p1g3z49rzzsadfhpy6yv2f3zx9ihhplbpjk32i01lm3l4q";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "serde_urlencoded" = rec {
        crateName = "serde_urlencoded";
        version = "0.7.0";
        edition = "2018";
        sha256 = "1s9wnjrak5a0igfhcghhz51kvi7n010j5rs9lmhd5hfrz2kmgypd";
        authors = [
          "Anthony Ramine <n.oxyde@gmail.com>"
        ];
        dependencies = [
          {
            name = "form_urlencoded";
            packageId = "form_urlencoded";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "ryu";
            packageId = "ryu";
          }
          {
            name = "serde";
            packageId = "serde";
          }
        ];

      };
      "serde_yaml" = rec {
        crateName = "serde_yaml";
        version = "0.8.17";
        edition = "2018";
        sha256 = "08xvb5zxz3x5dgx0fy1q0aq9aa9fibcvi75333wnnwk1mga4wr8m";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "dtoa";
            packageId = "dtoa";
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "yaml-rust";
            packageId = "yaml-rust";
          }
        ];

      };
      "sha-1" = rec {
        crateName = "sha-1";
        version = "0.9.6";
        edition = "2018";
        sha256 = "05jfwssqvpcy0sr1pcdhdn9awalwsazclimbgzpx0cjq3isglk4c";
        libName = "sha1";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.9.0";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: (stdenv.hostPlatform.config == "aarch64-apple-darwin");
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: ((target."arch" == "aarch64") && (target."os" == "linux"));
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: ((target."arch" == "x86") || (target."arch" == "x86_64"));
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.9.0";
            features = [ "dev" ];
          }
        ];
        features = {
          "asm" = [ "sha1-asm" ];
          "asm-aarch64" = [ "asm" ];
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sha1" = rec {
        crateName = "sha1";
        version = "0.6.0";
        edition = "2015";
        sha256 = "03gs2q4m67rn2p8xcdfxhip6mpgahdwm12bnb3vh90ahv9grhy95";
        authors = [
          "Armin Ronacher <armin.ronacher@active-4.com>"
        ];
        features = {
        };
      };
      "sha2 0.8.2" = rec {
        crateName = "sha2";
        version = "0.8.2";
        edition = "2015";
        sha256 = "0s9yddvyg6anaikdl86wmwfim25c0d4m0xq0y2ghs34alxpg8mm2";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.7.3";
          }
          {
            name = "digest";
            packageId = "digest 0.8.1";
          }
          {
            name = "fake-simd";
            packageId = "fake-simd";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.2.3";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.8.1";
            features = [ "dev" ];
          }
        ];
        features = {
          "asm" = [ "sha2-asm" ];
          "asm-aarch64" = [ "asm" "libc" ];
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sha2 0.9.5" = rec {
        crateName = "sha2";
        version = "0.9.5";
        edition = "2018";
        sha256 = "04lzf4swq6cijvxnc6facr3g72h5v7a5z8lz3xrkf8gxa9bswqmk";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.9.0";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: (stdenv.hostPlatform.config == "aarch64-apple-darwin");
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: ((target."arch" == "aarch64") && (target."os" == "linux"));
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: ((target."arch" == "x86") || (target."arch" == "x86_64"));
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.9.0";
            features = [ "dev" ];
          }
        ];
        features = {
          "asm" = [ "sha2-asm" ];
          "asm-aarch64" = [ "asm" ];
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sha3" = rec {
        crateName = "sha3";
        version = "0.9.1";
        edition = "2018";
        sha256 = "02d85wpvz75a0n7r2da15ikqjwzamhii11qy9gqf6pafgm0rj4gq";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.9.0";
            features = [ "block-padding" ];
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "keccak";
            packageId = "keccak";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.9.0";
            features = [ "dev" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
      };
      "sharded-slab" = rec {
        crateName = "sharded-slab";
        version = "0.1.1";
        edition = "2018";
        sha256 = "1qqlmr2jfhpfgav4y7lax46a7rcrzjn4a2pqj1sgjpg0krqikivr";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
        ];

      };
      "short-hex-str" = rec {
        crateName = "short-hex-str";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "mirai-annotations";
            packageId = "mirai-annotations";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];

      };
      "signal-hook" = rec {
        crateName = "signal-hook";
        version = "0.3.8";
        edition = "2018";
        sha256 = "1b1hzwafsi9k5m0lvqff0mzfciy1k2qam1crp87q9q06rp8dcczg";
        authors = [
          "Michal 'vorner' Vaner <vorner@vorner.cz>"
          "Thomas Himmelstoss <thimm@posteo.de>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "signal-hook-registry";
            packageId = "signal-hook-registry";
          }
        ];
        features = {
          "default" = [ "channel" "iterator" ];
          "extended-siginfo" = [ "channel" "iterator" "extended-siginfo-raw" ];
          "extended-siginfo-raw" = [ "cc" ];
          "iterator" = [ "channel" ];
        };
        resolvedDefaultFeatures = [ "channel" "iterator" ];
      };
      "signal-hook-registry" = rec {
        crateName = "signal-hook-registry";
        version = "1.3.0";
        edition = "2015";
        sha256 = "19hirq0h33jjyh505s8hf9q5dq0ky80ygivkl3vshjv0y7zd1w8n";
        authors = [
          "Michal 'vorner' Vaner <vorner@vorner.cz>"
          "Masaki Hara <ackie.h.gmai@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];

      };
      "signature" = rec {
        crateName = "signature";
        version = "1.3.0";
        edition = "2018";
        sha256 = "0s5f6q7psdkfk99q777bk2q27lpbl56fjw31sp6srn8dwnw440hg";
        authors = [
          "RustCrypto Developers"
        ];
        features = {
          "default" = [ "std" ];
          "derive-preview" = [ "digest-preview" "signature_derive" ];
          "digest-preview" = [ "digest" ];
          "rand-preview" = [ "rand_core" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "slab" = rec {
        crateName = "slab";
        version = "0.4.3";
        edition = "2015";
        sha256 = "09v57dmy9gnfcj3c6gywp7wi09zywxf0ppj07w02hfvy38ysqwzi";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "smallvec" = rec {
        crateName = "smallvec";
        version = "1.6.1";
        edition = "2018";
        sha256 = "0kk08axr0ybfbjzk65a41k84mb6sfhyajmfndaka9igkx34kf3zy";
        authors = [
          "The Servo Project Developers"
        ];
        features = {
        };
      };
      "socket2 0.3.19" = rec {
        crateName = "socket2";
        version = "0.3.19";
        edition = "2018";
        sha256 = "0vldz14mxqxnjqb6an2pj7mgclv7nrk45cpscwq7g3fj2c0mfbhj";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
            features = [ "align" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "handleapi" "ws2def" "ws2ipdef" "ws2tcpip" "minwindef" ];
          }
        ];
        features = {
        };
      };
      "socket2 0.4.0" = rec {
        crateName = "socket2";
        version = "0.4.0";
        edition = "2018";
        sha256 = "18ny6m1gnf6cwp5ax0b5hr36w6yg16z7faj76b31aq2jghhgqgcy";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Thomas de Zeeuw <thomasdezeeuw@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "handleapi" "ws2ipdef" "ws2tcpip" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "all" ];
      };
      "sp-api" = rec {
        crateName = "sp-api";
        version = "2.0.1";
        edition = "2018";
        sha256 = "1032dgvlvx7sliq1iqs6hbn33znvxk8fnf6lwvp91wjy4lpp75l4";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "hash-db";
            packageId = "hash-db";
            optional = true;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-api-proc-macro";
            packageId = "sp-api-proc-macro";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
            optional = true;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-version";
            packageId = "sp-version";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "sp-core/std" "sp-std/std" "sp-runtime/std" "sp-state-machine" "sp-version/std" "hash-db" ];
        };
        resolvedDefaultFeatures = [ "default" "hash-db" "sp-state-machine" "std" ];
      };
      "sp-api-proc-macro" = rec {
        crateName = "sp-api-proc-macro";
        version = "2.0.1";
        edition = "2018";
        sha256 = "002a0ya8mx6kngmvsfjvn7yb4qa5j9cxkykfqwprz11nkqmx6qy8";
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "blake2-rfc";
            packageId = "blake2-rfc";
            usesDefaultFeatures = false;
          }
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "fold" "extra-traits" "visit" ];
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sp-application-crypto" = rec {
        crateName = "sp-application-crypto";
        version = "2.0.1";
        edition = "2018";
        sha256 = "0h8860qd08xn0gva4yg0yvlmi2kcpbspn1bailr5has9r866d8pd";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "full_crypto" = [ "sp-core/full_crypto" "sp-io/disable_panic_handler" "sp-io/disable_oom" ];
          "std" = [ "full_crypto" "sp-core/std" "codec/std" "serde" "sp-std/std" "sp-io/std" ];
        };
        resolvedDefaultFeatures = [ "full_crypto" "serde" "std" ];
      };
      "sp-arithmetic" = rec {
        crateName = "sp-arithmetic";
        version = "2.0.1";
        edition = "2018";
        sha256 = "12gafy4w36zhh52zliihxs2z6k9cvlpbvzq4d21d9qgq3i5j0kcw";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "integer-sqrt";
            packageId = "integer-sqrt";
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-debug-derive";
            packageId = "sp-debug-derive";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std" ];
        };
        resolvedDefaultFeatures = [ "serde" "std" ];
      };
      "sp-block-builder" = rec {
        crateName = "sp-block-builder";
        version = "2.0.1";
        edition = "2018";
        sha256 = "08big0nqwiz9icvk3irhl9pq1rdv94b41qlzgh8i8g1nl0vnci22";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-api";
            packageId = "sp-api";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-runtime/std" "codec/std" "sp-inherents/std" "sp-api/std" "sp-std/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sp-blockchain" = rec {
        crateName = "sp-blockchain";
        version = "2.0.1";
        edition = "2018";
        sha256 = "02dmkxwh1ski00xa3dd63ycq32kj623g2zaz59h9v80sx7ni59hb";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "derive_more";
            packageId = "derive_more";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "lru";
            packageId = "lru";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.10.2";
          }
          {
            name = "sp-block-builder";
            packageId = "sp-block-builder";
          }
          {
            name = "sp-consensus";
            packageId = "sp-consensus";
          }
          {
            name = "sp-database";
            packageId = "sp-database";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
          }
        ];

      };
      "sp-chain-spec" = rec {
        crateName = "sp-chain-spec";
        version = "2.0.1";
        edition = "2018";
        sha256 = "03bj33hq48ar80ssphrw7ap3v1n1sk1fjibky6zbasjpwwqyw2pj";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
        ];

      };
      "sp-consensus" = rec {
        crateName = "sp-consensus";
        version = "0.8.1";
        edition = "2018";
        sha256 = "01zlsldmiv1g9p0c53dcqcs5bmdbgq98xdl9hjsfc1qxyddhkjx6";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "derive_more";
            packageId = "derive_more";
          }
          {
            name = "futures";
            packageId = "futures 0.3.15";
            features = [ "thread-pool" ];
          }
          {
            name = "futures-timer";
            packageId = "futures-timer";
          }
          {
            name = "libp2p";
            packageId = "libp2p";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            features = [ "derive" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.10.2";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
          }
          {
            name = "sp-std";
            packageId = "sp-std";
          }
          {
            name = "sp-trie";
            packageId = "sp-trie";
          }
          {
            name = "sp-utils";
            packageId = "sp-utils";
          }
          {
            name = "sp-version";
            packageId = "sp-version";
          }
          {
            name = "substrate-prometheus-endpoint";
            packageId = "substrate-prometheus-endpoint";
            rename = "prometheus-endpoint";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "sp-core" = rec {
        crateName = "sp-core";
        version = "2.0.1";
        edition = "2018";
        sha256 = "0dc0nks9y50g1igmbj6wd1n6g3ryr0anji1mfppfnrp86588l6zv";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "base58";
            packageId = "base58";
            optional = true;
          }
          {
            name = "blake2-rfc";
            packageId = "blake2-rfc";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "derive_more";
            packageId = "derive_more";
          }
          {
            name = "dyn-clonable";
            packageId = "dyn-clonable";
            optional = true;
          }
          {
            name = "ed25519-dalek";
            packageId = "ed25519-dalek 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "u64_backend" "alloc" ];
          }
          {
            name = "futures";
            packageId = "futures 0.3.15";
            optional = true;
          }
          {
            name = "hash-db";
            packageId = "hash-db";
            usesDefaultFeatures = false;
          }
          {
            name = "hash256-std-hasher";
            packageId = "hash256-std-hasher";
            usesDefaultFeatures = false;
          }
          {
            name = "hex";
            packageId = "hex";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "impl-serde";
            packageId = "impl-serde";
            optional = true;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "libsecp256k1";
            packageId = "libsecp256k1";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "hmac" ];
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "merlin";
            packageId = "merlin";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "parity-util-mem";
            packageId = "parity-util-mem";
            usesDefaultFeatures = false;
            features = [ "primitive-types" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.10.2";
            optional = true;
          }
          {
            name = "primitive-types";
            packageId = "primitive-types 0.7.3";
            usesDefaultFeatures = false;
            features = [ "codec" ];
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            optional = true;
            features = [ "small_rng" ];
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
          }
          {
            name = "schnorrkel";
            packageId = "schnorrkel";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "preaudit_deprecated" "u64_backend" ];
          }
          {
            name = "secrecy";
            packageId = "secrecy";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sha2";
            packageId = "sha2 0.8.2";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "sp-debug-derive";
            packageId = "sp-debug-derive";
          }
          {
            name = "sp-externalities";
            packageId = "sp-externalities";
            optional = true;
          }
          {
            name = "sp-runtime-interface";
            packageId = "sp-runtime-interface";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-storage";
            packageId = "sp-storage";
            usesDefaultFeatures = false;
          }
          {
            name = "substrate-bip39";
            packageId = "substrate-bip39";
            optional = true;
          }
          {
            name = "tiny-bip39";
            packageId = "tiny-bip39";
            optional = true;
          }
          {
            name = "tiny-keccak";
            packageId = "tiny-keccak";
            optional = true;
            features = [ "keccak" ];
          }
          {
            name = "twox-hash";
            packageId = "twox-hash";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "wasmi";
            packageId = "wasmi";
            optional = true;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "full_crypto" = [ "ed25519-dalek" "blake2-rfc" "tiny-keccak" "schnorrkel" "hex" "sha2" "twox-hash" "libsecp256k1" "sp-runtime-interface/disable_target_static_assertions" "merlin" ];
          "std" = [ "full_crypto" "log/std" "wasmi" "lazy_static" "parking_lot" "primitive-types/std" "primitive-types/serde" "primitive-types/byteorder" "primitive-types/rustc-hex" "impl-serde" "codec/std" "hash256-std-hasher/std" "hash-db/std" "sp-std/std" "serde" "twox-hash/std" "blake2-rfc/std" "ed25519-dalek/std" "hex/std" "base58" "substrate-bip39" "tiny-bip39" "serde" "byteorder/std" "rand" "sha2/std" "schnorrkel/std" "regex" "num-traits/std" "tiny-keccak" "sp-debug-derive/std" "sp-externalities" "sp-storage/std" "sp-runtime-interface/std" "zeroize/alloc" "secrecy/alloc" "futures" "futures/thread-pool" "libsecp256k1/std" "dyn-clonable" ];
        };
        resolvedDefaultFeatures = [ "base58" "blake2-rfc" "default" "dyn-clonable" "ed25519-dalek" "full_crypto" "futures" "hex" "impl-serde" "lazy_static" "libsecp256k1" "merlin" "parking_lot" "rand" "regex" "schnorrkel" "serde" "sha2" "sp-externalities" "std" "substrate-bip39" "tiny-bip39" "tiny-keccak" "twox-hash" "wasmi" ];
      };
      "sp-database" = rec {
        crateName = "sp-database";
        version = "2.0.1";
        edition = "2018";
        sha256 = "0ya92mkcqqfqnfcb2620pn8pxlakcbm3jlsyvwfbhdm2fbjiphaj";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "kvdb";
            packageId = "kvdb";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.10.2";
          }
        ];

      };
      "sp-debug-derive" = rec {
        crateName = "sp-debug-derive";
        version = "2.0.1";
        edition = "2018";
        sha256 = "1a7vaxgvlzg4n4p87xybqq3k49czhxi3p4l2wc69bazyy8j1m2jm";
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "sp-externalities" = rec {
        crateName = "sp-externalities";
        version = "0.8.1";
        edition = "2018";
        sha256 = "114ni71mrs7yyk9d99q87xg24v4sgcaqkqkqwjf7mzdgnyn3jk0l";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "environmental";
            packageId = "environmental";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-storage";
            packageId = "sp-storage";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "environmental/std" "sp-std/std" "sp-storage/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sp-inherents" = rec {
        crateName = "sp-inherents";
        version = "2.0.1";
        edition = "2018";
        sha256 = "14wi3x3ddgln7dxn05gz2gk101nw43dbiyaa0k5r40w5ba9gbg1y";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "derive_more";
            packageId = "derive_more";
            optional = true;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.10.2";
            optional = true;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "parking_lot" "sp-std/std" "codec/std" "sp-core/std" "derive_more" ];
        };
        resolvedDefaultFeatures = [ "default" "derive_more" "parking_lot" "std" ];
      };
      "sp-io" = rec {
        crateName = "sp-io";
        version = "2.0.1";
        edition = "2018";
        sha256 = "0sv1rgz2baa0pawql7ndfpm4i2yr6xzc6hz0cnn178zhmkgfpyxz";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.15";
            optional = true;
            features = [ "thread-pool" ];
          }
          {
            name = "hash-db";
            packageId = "hash-db";
            usesDefaultFeatures = false;
          }
          {
            name = "libsecp256k1";
            packageId = "libsecp256k1";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.10.2";
            optional = true;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-externalities";
            packageId = "sp-externalities";
            optional = true;
          }
          {
            name = "sp-runtime-interface";
            packageId = "sp-runtime-interface";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
            optional = true;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-tracing";
            packageId = "sp-tracing";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-trie";
            packageId = "sp-trie";
            optional = true;
          }
          {
            name = "sp-wasm-interface";
            packageId = "sp-wasm-interface";
            usesDefaultFeatures = false;
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
          }
          {
            name = "tracing-core";
            packageId = "tracing-core";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-core/std" "codec/std" "sp-std/std" "hash-db/std" "sp-trie" "sp-state-machine" "libsecp256k1" "sp-runtime-interface/std" "sp-externalities" "sp-wasm-interface/std" "sp-tracing/std" "tracing/std" "tracing-core/std" "log" "futures" "parking_lot" ];
          "with-tracing" = [ "sp-tracing/with-tracing" ];
        };
        resolvedDefaultFeatures = [ "disable_oom" "disable_panic_handler" "futures" "libsecp256k1" "log" "parking_lot" "sp-externalities" "sp-state-machine" "sp-trie" "std" ];
      };
      "sp-keyring" = rec {
        crateName = "sp-keyring";
        version = "2.0.1";
        edition = "2018";
        sha256 = "1hnhws5cvkpd0lk2v6dz8x4fdksr1pjglnfjmphrcd5k0zqdqhcp";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "strum";
            packageId = "strum";
            features = [ "derive" ];
          }
        ];

      };
      "sp-panic-handler" = rec {
        crateName = "sp-panic-handler";
        version = "2.0.1";
        edition = "2018";
        sha256 = "1s5jxnx41mf3a99zhy89dj8zd27dl7z051m3xkcmqw4l94fh6m8h";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "backtrace";
            packageId = "backtrace";
          }
          {
            name = "log";
            packageId = "log";
          }
        ];

      };
      "sp-rpc" = rec {
        crateName = "sp-rpc";
        version = "2.0.1";
        edition = "2018";
        sha256 = "1yawc3g9zm1x5igghxzlhky58fbaya958m4y65gjrzqiwf52p7q0";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
        ];

      };
      "sp-runtime" = rec {
        crateName = "sp-runtime";
        version = "2.0.1";
        edition = "2018";
        sha256 = "0qh7pw3bvdfcipl608ijm7x24k04fiym3vhfih6wbfccp8nd3n45";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
          {
            name = "hash256-std-hasher";
            packageId = "hash256-std-hasher";
            usesDefaultFeatures = false;
          }
          {
            name = "impl-trait-for-tuples";
            packageId = "impl-trait-for-tuples";
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "parity-util-mem";
            packageId = "parity-util-mem";
            usesDefaultFeatures = false;
            features = [ "primitive-types" ];
          }
          {
            name = "paste";
            packageId = "paste";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-application-crypto";
            packageId = "sp-application-crypto";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-arithmetic";
            packageId = "sp-arithmetic";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-application-crypto/std" "sp-arithmetic/std" "codec/std" "log" "sp-core/std" "rand" "sp-std/std" "sp-io/std" "serde" "sp-inherents/std" "parity-util-mem/std" "hash256-std-hasher/std" "either/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "log" "rand" "serde" "std" ];
      };
      "sp-runtime-interface" = rec {
        crateName = "sp-runtime-interface";
        version = "2.0.1";
        edition = "2018";
        sha256 = "059ykiv970sbjqxcwff5q8w3s34zpknfy5xl268widd70525gdlg";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "primitive-types";
            packageId = "primitive-types 0.7.3";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-externalities";
            packageId = "sp-externalities";
            optional = true;
          }
          {
            name = "sp-runtime-interface-proc-macro";
            packageId = "sp-runtime-interface-proc-macro";
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-storage";
            packageId = "sp-storage";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-tracing";
            packageId = "sp-tracing";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-wasm-interface";
            packageId = "sp-wasm-interface";
            usesDefaultFeatures = false;
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-wasm-interface/std" "sp-std/std" "sp-tracing/std" "codec/std" "sp-externalities" "primitive-types/std" ];
        };
        resolvedDefaultFeatures = [ "disable_target_static_assertions" "sp-externalities" "std" ];
      };
      "sp-runtime-interface-proc-macro" = rec {
        crateName = "sp-runtime-interface-proc-macro";
        version = "2.0.1";
        edition = "2018";
        sha256 = "17fq2v0wnr6rdkw4fnpyk0h9p7g54lr4bc0dvicgk6v2rbzb296p";
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "Inflector";
            packageId = "Inflector";
          }
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit" "fold" "extra-traits" ];
          }
        ];

      };
      "sp-state-machine" = rec {
        crateName = "sp-state-machine";
        version = "0.8.1";
        edition = "2018";
        sha256 = "1spdxnr4zl301nz2ayl0i280bk0rmliwmnizqmhyal81ywrqqnh9";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "hash-db";
            packageId = "hash-db";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.10.2";
            optional = true;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            optional = true;
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-externalities";
            packageId = "sp-externalities";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-panic-handler";
            packageId = "sp-panic-handler";
            optional = true;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-trie";
            packageId = "sp-trie";
            usesDefaultFeatures = false;
          }
          {
            name = "trie-db";
            packageId = "trie-db";
            usesDefaultFeatures = false;
          }
          {
            name = "trie-root";
            packageId = "trie-root";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "hash-db/std" "num-traits/std" "sp-core/std" "sp-externalities/std" "sp-std/std" "sp-trie/std" "trie-db/std" "trie-root/std" "log" "parking_lot" "rand" "sp-panic-handler" ];
        };
        resolvedDefaultFeatures = [ "default" "log" "parking_lot" "rand" "sp-panic-handler" "std" ];
      };
      "sp-std" = rec {
        crateName = "sp-std";
        version = "2.0.1";
        edition = "2018";
        sha256 = "1hk6vacbfm3zvgswm3rs6wsw8kfs2x2srsycz7157pjgby7zp195";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sp-storage" = rec {
        crateName = "sp-storage";
        version = "2.0.1";
        edition = "2018";
        sha256 = "15f296kpjbmzhxpz86m2m2yazjhz01fqv9lw4qfbpiv1im6c073q";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "impl-serde";
            packageId = "impl-serde";
            optional = true;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "ref-cast";
            packageId = "ref-cast";
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-debug-derive";
            packageId = "sp-debug-derive";
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-std/std" "serde" "impl-serde" "codec/std" ];
        };
        resolvedDefaultFeatures = [ "impl-serde" "serde" "std" ];
      };
      "sp-tracing" = rec {
        crateName = "sp-tracing";
        version = "2.0.1";
        edition = "2018";
        sha256 = "1x7n281i3xhli44mdhhr48s9jr2lj89awqdf57ycdwrjq1ma0x65";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
          }
          {
            name = "tracing-core";
            packageId = "tracing-core";
            usesDefaultFeatures = false;
          }
          {
            name = "tracing-subscriber";
            packageId = "tracing-subscriber";
            optional = true;
            features = [ "tracing-log" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "with-tracing" "tracing/std" "tracing-core/std" "codec/std" "sp-std/std" "log" "tracing-subscriber" ];
          "with-tracing" = [ "codec/derive" "codec/full" ];
        };
        resolvedDefaultFeatures = [ "log" "std" "tracing-subscriber" "with-tracing" ];
      };
      "sp-transaction-pool" = rec {
        crateName = "sp-transaction-pool";
        version = "2.0.1";
        edition = "2018";
        sha256 = "06ygkrac81byjnj4rnrhgj2nm7gnv1zf5hczkmaiaizphv7jb4a2";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "derive_more";
            packageId = "derive_more";
            optional = true;
          }
          {
            name = "futures";
            packageId = "futures 0.3.15";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-api";
            packageId = "sp-api";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
            optional = true;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec" "derive_more" "futures" "log" "serde" "sp-api/std" "sp-blockchain" "sp-runtime/std" ];
        };
        resolvedDefaultFeatures = [ "codec" "default" "derive_more" "futures" "log" "serde" "sp-blockchain" "std" ];
      };
      "sp-trie" = rec {
        crateName = "sp-trie";
        version = "2.0.1";
        edition = "2018";
        sha256 = "0imap97ix148whyxr09gzvcr613s7ls9sldgchb9cv8x387347ri";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "hash-db";
            packageId = "hash-db";
            usesDefaultFeatures = false;
          }
          {
            name = "memory-db";
            packageId = "memory-db";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "trie-db";
            packageId = "trie-db";
            usesDefaultFeatures = false;
          }
          {
            name = "trie-root";
            packageId = "trie-root";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-std/std" "codec/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sp-utils" = rec {
        crateName = "sp-utils";
        version = "2.0.1";
        edition = "2018";
        sha256 = "1y1inwibvxxvzxiyk1zjqjqjg5c59i76sd37mm8a48c7zrhfpxas";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.15";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "futures-timer";
            packageId = "futures-timer";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "prometheus";
            packageId = "prometheus 0.10.0";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "metered" ];
        };
        resolvedDefaultFeatures = [ "default" "metered" ];
      };
      "sp-version" = rec {
        crateName = "sp-version";
        version = "2.0.1";
        edition = "2018";
        sha256 = "0d5bp73aipmxdj3skw5hb91gd79sh6dvd8al30dpsyklbzxbfpqx";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "impl-serde";
            packageId = "impl-serde";
            optional = true;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "impl-serde" "serde" "codec/std" "sp-std/std" "sp-runtime/std" ];
        };
        resolvedDefaultFeatures = [ "default" "impl-serde" "serde" "std" ];
      };
      "sp-wasm-interface" = rec {
        crateName = "sp-wasm-interface";
        version = "2.0.1";
        edition = "2018";
        sha256 = "1ghr29gijx6h47f2khgxr2gk6cwp12pbfydch4nvzcqvsq4alkam";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "impl-trait-for-tuples";
            packageId = "impl-trait-for-tuples";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "wasmi";
            packageId = "wasmi";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "wasmi" "sp-std/std" "codec/std" ];
        };
        resolvedDefaultFeatures = [ "std" "wasmi" ];
      };
      "spec-lang" = rec {
        crateName = "spec-lang";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "bytecode-source-map";
            packageId = "bytecode-source-map";
          }
          {
            name = "bytecode-verifier";
            packageId = "bytecode-verifier";
          }
          {
            name = "codespan";
            packageId = "codespan 0.8.0";
          }
          {
            name = "codespan-reporting";
            packageId = "codespan-reporting 0.8.0";
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "itertools";
            packageId = "itertools 0.9.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "move-ir-types";
            packageId = "move-ir-types";
          }
          {
            name = "move-lang";
            packageId = "move-lang";
          }
          {
            name = "num";
            packageId = "num 0.3.1";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "vm";
            packageId = "vm";
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" "move-lang/dfinance_address" "bytecode-verifier/dfinance_address" "vm/dfinance_address" "diem-types/dfinance_address" "bytecode-source-map/dfinance_address" "move-ir-types/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" "move-lang/diem_address" "bytecode-verifier/diem_address" "vm/diem_address" "diem-types/diem_address" "bytecode-source-map/diem_address" "move-ir-types/diem_address" ];
          "ps_address" = [ "move-core-types/ps_address" "move-lang/ps_address" "bytecode-verifier/ps_address" "vm/ps_address" "diem-types/ps_address" "bytecode-source-map/ps_address" "move-ir-types/ps_address" ];
        };
        resolvedDefaultFeatures = [ "dfinance_address" "diem_address" "ps_address" ];
      };
      "spin" = rec {
        crateName = "spin";
        version = "0.5.2";
        edition = "2015";
        sha256 = "0b84m6dbzrwf2kxylnw82d3dr8w06av7rfkr8s85fb5f43rwyqvf";
        authors = [
          "Mathijs van de Nes <git@mathijs.vd-nes.nl>"
          "John Ericson <git@JohnEricson.me>"
        ];

      };
      "static_assertions" = rec {
        crateName = "static_assertions";
        version = "1.1.0";
        edition = "2015";
        sha256 = "0gsl6xmw10gvn3zs1rv99laj5ig7ylffnh71f9l34js4nr4r7sx2";
        authors = [
          "Nikolai Vazquez"
        ];
        features = {
        };
      };
      "statrs" = rec {
        crateName = "statrs";
        version = "0.10.0";
        edition = "2015";
        sha256 = "1s454spijvbyls3bd6l72lpdliw6pa0nzhmg7wmxndaysp42l40h";
        authors = [
          "Michael Ma"
        ];
        dependencies = [
          {
            name = "rand";
            packageId = "rand 0.5.6";
          }
        ];

      };
      "strsim 0.10.0" = rec {
        crateName = "strsim";
        version = "0.10.0";
        edition = "2015";
        sha256 = "08s69r4rcrahwnickvi0kq49z524ci50capybln83mg6b473qivk";
        authors = [
          "Danny Guo <danny@dannyguo.com>"
        ];

      };
      "strsim 0.8.0" = rec {
        crateName = "strsim";
        version = "0.8.0";
        edition = "2015";
        sha256 = "0sjsm7hrvjdifz661pjxq5w4hf190hx53fra8dfvamacvff139cf";
        authors = [
          "Danny Guo <dannyguo91@gmail.com>"
        ];

      };
      "structopt" = rec {
        crateName = "structopt";
        version = "0.3.21";
        edition = "2018";
        sha256 = "136j0lvjmpv5syi751vxg8vb30gfyv4k81x8d18kxrj6xvbsqxsj";
        authors = [
          "Guillaume Pinot <texitoi@texitoi.eu>"
          "others"
        ];
        dependencies = [
          {
            name = "clap";
            packageId = "clap 2.33.3";
            usesDefaultFeatures = false;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "structopt-derive";
            packageId = "structopt-derive";
          }
        ];
        features = {
          "color" = [ "clap/color" ];
          "debug" = [ "clap/debug" ];
          "default" = [ "clap/default" ];
          "doc" = [ "clap/doc" ];
          "lints" = [ "clap/lints" ];
          "no_cargo" = [ "clap/no_cargo" ];
          "paw" = [ "structopt-derive/paw" "paw_dep" ];
          "suggestions" = [ "clap/suggestions" ];
          "wrap_help" = [ "clap/wrap_help" ];
          "yaml" = [ "clap/yaml" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "structopt-derive" = rec {
        crateName = "structopt-derive";
        version = "0.4.14";
        edition = "2018";
        sha256 = "143gjwvz3s86hwp070km83y25n8kqp5f01kb1dr19f4ilkywvaav";
        procMacro = true;
        authors = [
          "Guillaume Pinot <texitoi@texitoi.eu>"
        ];
        dependencies = [
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "proc-macro-error";
            packageId = "proc-macro-error";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];
        features = {
        };
      };
      "strum" = rec {
        crateName = "strum";
        version = "0.16.0";
        edition = "2015";
        sha256 = "08ld32irbvx3z6ndc9a7vfkxcgpsfvyf651kfqs03n8nibwghf31";
        authors = [
          "Peter Glotfelty <peter.glotfelty@microsoft.com>"
        ];
        dependencies = [
          {
            name = "strum_macros";
            packageId = "strum_macros";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "strum_macros";
            packageId = "strum_macros";
          }
        ];
        features = {
          "derive" = [ "strum_macros" ];
        };
        resolvedDefaultFeatures = [ "derive" "strum_macros" ];
      };
      "strum_macros" = rec {
        crateName = "strum_macros";
        version = "0.16.0";
        edition = "2015";
        sha256 = "10awwslby71psnkh7ll1y27kdv2bps2dxfcjhp6scfa0fvgsfm00";
        procMacro = true;
        authors = [
          "Peter Glotfelty <peter.glotfelty@microsoft.com>"
        ];
        dependencies = [
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "parsing" "extra-traits" ];
          }
        ];
        features = {
        };
      };
      "substrate-api-client" = rec {
        crateName = "substrate-api-client";
        version = "0.4.9-sub2.0.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/scs/substrate-api-client.git";
          rev = "62afbac0be1928681d8c70565fa0cc39a92cf4c8";
          sha256 = "1qnhv1gr98rla2lr8c7y2175li9138cb76kd3scgy8jv9iby8zyq";
        };
        authors = [
          "Supercomputing Systems AG <info@scs.ch>"
        ];
        dependencies = [
          {
            name = "env_logger";
            packageId = "env_logger 0.7.1";
            optional = true;
          }
          {
            name = "frame-metadata";
            packageId = "frame-metadata";
            rename = "metadata";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-support";
            packageId = "frame-support";
            rename = "support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            rename = "system";
            usesDefaultFeatures = false;
          }
          {
            name = "hex";
            packageId = "hex";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "pallet-balances";
            packageId = "pallet-balances";
            rename = "balances";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "primitive-types";
            packageId = "primitive-types 0.6.2";
            optional = true;
            features = [ "codec" ];
          }
          {
            name = "sc-rpc-api";
            packageId = "sc-rpc-api";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            optional = true;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            rename = "sp-core";
            usesDefaultFeatures = false;
            features = [ "full_crypto" ];
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            rename = "runtime_io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            rename = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            rename = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-version";
            packageId = "sp-version";
            rename = "sp-version";
            usesDefaultFeatures = false;
          }
          {
            name = "thiserror";
            packageId = "thiserror";
            optional = true;
          }
          {
            name = "ws";
            packageId = "ws";
            optional = true;
            features = [ "ssl" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sc-rpc-api" "sp-core/std" "codec/std" "runtime_io/std" "metadata/std" "sp-version/std" "balances/std" "system/std" "sp-runtime/std" "support/std" "sp-std/std" "serde/std" "serde_json" "env_logger" "log" "ws" "hex/std" "primitive-types" "thiserror" ];
        };
        resolvedDefaultFeatures = [ "default" "env_logger" "log" "primitive-types" "sc-rpc-api" "serde" "serde_json" "std" "thiserror" "ws" ];
      };
      "substrate-bip39" = rec {
        crateName = "substrate-bip39";
        version = "0.4.2";
        edition = "2018";
        sha256 = "0dh27ahjb8swdyikpp3sinvl5y7f1rb12mh4bmdr7far05m69mmy";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "hmac";
            packageId = "hmac 0.7.1";
          }
          {
            name = "pbkdf2";
            packageId = "pbkdf2";
            usesDefaultFeatures = false;
          }
          {
            name = "schnorrkel";
            packageId = "schnorrkel";
          }
          {
            name = "sha2";
            packageId = "sha2 0.8.2";
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];

      };
      "substrate-prometheus-endpoint" = rec {
        crateName = "substrate-prometheus-endpoint";
        version = "0.8.1";
        edition = "2018";
        sha256 = "0kqbvaxwkaz2npzipl5mx06xy4bkqpmpi96q6zz944mazb76zhs5";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-std";
            packageId = "async-std";
            target = { target, features }: (!(target."os" == "unknown"));
            features = [ "unstable" ];
          }
          {
            name = "derive_more";
            packageId = "derive_more";
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "io" ];
          }
          {
            name = "hyper";
            packageId = "hyper";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."os" == "unknown"));
            features = [ "stream" ];
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "prometheus";
            packageId = "prometheus 0.10.0";
            usesDefaultFeatures = false;
          }
          {
            name = "tokio";
            packageId = "tokio";
            target = { target, features }: (!(target."os" == "unknown"));
          }
        ];

      };
      "subtle 1.0.0" = rec {
        crateName = "subtle";
        version = "1.0.0";
        edition = "2015";
        sha256 = "1vm80mxbwfj334izwm8x8l65v1xl9hr0kwrg36r1rq565fkaarrd";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        features = {
          "default" = [ "std" "i128" ];
        };
      };
      "subtle 2.4.0" = rec {
        crateName = "subtle";
        version = "2.4.0";
        edition = "2015";
        sha256 = "1hipji54nipkya6szyk9kl7nz07qli570b1isklz78dda44dm08y";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        features = {
          "default" = [ "std" "i128" ];
        };
        resolvedDefaultFeatures = [ "default" "i128" "std" ];
      };
      "syn" = rec {
        crateName = "syn";
        version = "1.0.72";
        edition = "2018";
        sha256 = "10mb1cqmq2vpl5v6qjgqqyvhgs9yf9xv9f0dbskababrzfzcvs51";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
          "test" = [ "syn-test-suite/all-features" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" "visit" "visit-mut" ];
      };
      "synstructure" = rec {
        crateName = "synstructure";
        version = "0.12.4";
        edition = "2018";
        sha256 = "00c72ij813xsilssgya6m6f73d0s5zzsld1y26bvhk3kdzbg4d5q";
        authors = [
          "Nika Layzell <nika@thelayzells.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
            usesDefaultFeatures = false;
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "derive" "parsing" "printing" "clone-impls" "visit" "extra-traits" ];
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "syn/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "tempfile" = rec {
        crateName = "tempfile";
        version = "3.2.0";
        edition = "2018";
        sha256 = "08pbf3c1i42382dc44dil5bgiawcsi0qk6zdibw10f69rxiwdhfs";
        authors = [
          "Steven Allen <steven@stebalien.com>"
          "The Rust Project Developers"
          "Ashley Mannix <ashleymannix@live.com.au>"
          "Jason White <jasonaw0@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "rand";
            packageId = "rand 0.8.3";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall 0.2.8";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "remove_dir_all";
            packageId = "remove_dir_all";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "fileapi" "handleapi" "winbase" ];
          }
        ];

      };
      "termcolor" = rec {
        crateName = "termcolor";
        version = "1.1.2";
        edition = "2018";
        sha256 = "1x65i1ny4m6z1by62ra6wdcrd557p2ysm866x0pg60zby2cxizid";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: (target."windows" or false);
          }
        ];

      };
      "textwrap 0.11.0" = rec {
        crateName = "textwrap";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0q5hky03ik3y50s9sz25r438bc4nwhqc6dqwynv4wylc807n29nk";
        authors = [
          "Martin Geisler <martin@geisler.net>"
        ];
        dependencies = [
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
        ];

      };
      "textwrap 0.12.1" = rec {
        crateName = "textwrap";
        version = "0.12.1";
        edition = "2018";
        sha256 = "12978qmkl5gcp94lxndpvp9qxq8mxp7hm9xbrw3422dgikchhc10";
        authors = [
          "Martin Geisler <martin@geisler.net>"
        ];
        dependencies = [
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
        ];

      };
      "thiserror" = rec {
        crateName = "thiserror";
        version = "1.0.24";
        edition = "2018";
        sha256 = "13m99wjikivkkwd209fgxhdprjxj17s39ldfvn1l8k89jxasdx70";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "thiserror-impl";
            packageId = "thiserror-impl";
          }
        ];

      };
      "thiserror-impl" = rec {
        crateName = "thiserror-impl";
        version = "1.0.24";
        edition = "2018";
        sha256 = "1h7kh6rr4vsm79dmv8qk8drhh2if3zyxc1lqa921l96q22b1hrbp";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "thread_local" = rec {
        crateName = "thread_local";
        version = "1.1.3";
        edition = "2018";
        sha256 = "1gccp3grndpi6dyhzylz4hkqnkzc1xyri98n0xwwhnn90i7d4640";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "once_cell";
            packageId = "once_cell";
          }
        ];

      };
      "threadpool" = rec {
        crateName = "threadpool";
        version = "1.8.1";
        edition = "2015";
        sha256 = "1amgfyzvynbm8pacniivzq9r0fh3chhs7kijic81j76l6c5ycl6h";
        authors = [
          "The Rust Project Developers"
          "Corey Farwell <coreyf@rwell.org>"
          "Stefan Schindler <dns2utf8@estada.ch>"
        ];
        dependencies = [
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];

      };
      "time" = rec {
        crateName = "time";
        version = "0.1.44";
        edition = "2015";
        sha256 = "0m9jwy2pcmk232r3b9r80fs12mkckfjffjha4qfaxcdq9a8ydfbd";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "wasi";
            packageId = "wasi 0.10.0+wasi-snapshot-preview1";
            target = { target, features }: (target."os" == "wasi");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi" ];
          }
        ];
        devDependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            features = [ "std" "processthreadsapi" "winbase" ];
          }
        ];

      };
      "tiny-bip39" = rec {
        crateName = "tiny-bip39";
        version = "0.7.3";
        edition = "2018";
        sha256 = "1wiigssfjr86gl7v348gxc7vdanvfqb5x9hc4xh1dbn2bh25w5mh";
        libName = "bip39";
        authors = [
          "Stephen Oliver <steve@infincia.com>"
          "Maciej Hirsz <hello@maciej.codes>"
        ];
        dependencies = [
          {
            name = "failure";
            packageId = "failure";
          }
          {
            name = "hmac";
            packageId = "hmac 0.7.1";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            features = [ "parking_lot" ];
          }
          {
            name = "pbkdf2";
            packageId = "pbkdf2";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "rustc-hash";
            packageId = "rustc-hash";
          }
          {
            name = "sha2";
            packageId = "sha2 0.8.2";
          }
          {
            name = "unicode-normalization";
            packageId = "unicode-normalization";
          }
        ];
        features = {
          "default" = [ "chinese-simplified" "chinese-traditional" "french" "italian" "japanese" "korean" "spanish" ];
        };
        resolvedDefaultFeatures = [ "chinese-simplified" "chinese-traditional" "default" "french" "italian" "japanese" "korean" "spanish" ];
      };
      "tiny-keccak" = rec {
        crateName = "tiny-keccak";
        version = "2.0.2";
        edition = "2018";
        sha256 = "0dq2x0hjffmixgyf6xv9wgsbcxkd65ld0wrfqmagji8a829kg79c";
        authors = [
          "debris <marek.kotewicz@gmail.com>"
        ];
        dependencies = [
          {
            name = "crunchy";
            packageId = "crunchy";
          }
        ];
        features = {
          "fips202" = [ "keccak" "shake" "sha3" ];
          "kmac" = [ "cshake" ];
          "parallel_hash" = [ "cshake" ];
          "sp800" = [ "cshake" "kmac" "tuple_hash" ];
          "tuple_hash" = [ "cshake" ];
        };
        resolvedDefaultFeatures = [ "default" "keccak" "sha3" ];
      };
      "tinyvec" = rec {
        crateName = "tinyvec";
        version = "1.2.0";
        edition = "2018";
        sha256 = "0hn3fkpb9nca9nf9znz2dxlp4ccv37hnbh67aczpzpmpbgq20ljv";
        authors = [
          "Lokathor <zefria@gmail.com>"
        ];
        dependencies = [
          {
            name = "tinyvec_macros";
            packageId = "tinyvec_macros";
            optional = true;
          }
        ];
        features = {
          "alloc" = [ "tinyvec_macros" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "tinyvec_macros" ];
      };
      "tinyvec_macros" = rec {
        crateName = "tinyvec_macros";
        version = "0.1.0";
        edition = "2018";
        sha256 = "0p5zvgbas5nh403fbxica819mf3g83n8g2hzpfazfr56w6klv9yd";
        authors = [
          "Soveu <marx.tomasz@gmail.com>"
        ];

      };
      "tokio" = rec {
        crateName = "tokio";
        version = "0.2.25";
        edition = "2018";
        sha256 = "14l0rll6y1dyzh6qcd8rma2ch3wx0dxzxq8b54di744sjirs40v7";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
          }
          {
            name = "fnv";
            packageId = "fnv";
            optional = true;
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            optional = true;
          }
          {
            name = "iovec";
            packageId = "iovec";
            optional = true;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "mio";
            packageId = "mio";
            optional = true;
          }
          {
            name = "mio-named-pipes";
            packageId = "mio-named-pipes";
            optional = true;
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "mio-uds";
            packageId = "mio-uds";
            optional = true;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.1.12";
          }
          {
            name = "signal-hook-registry";
            packageId = "signal-hook-registry";
            optional = true;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "slab";
            packageId = "slab";
            optional = true;
          }
          {
            name = "tokio-macros";
            packageId = "tokio-macros";
            optional = true;
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (target."windows" or false);
          }
        ];
        features = {
          "blocking" = [ "rt-core" ];
          "dns" = [ "rt-core" ];
          "fs" = [ "rt-core" "io-util" ];
          "full" = [ "blocking" "dns" "fs" "io-driver" "io-util" "io-std" "macros" "net" "process" "rt-core" "rt-util" "rt-threaded" "signal" "stream" "sync" "time" ];
          "io-driver" = [ "mio" "lazy_static" ];
          "io-std" = [ "rt-core" ];
          "io-util" = [ "memchr" ];
          "macros" = [ "tokio-macros" ];
          "net" = [ "dns" "tcp" "udp" "uds" ];
          "process" = [ "io-driver" "libc" "mio-named-pipes" "signal" "winapi/consoleapi" "winapi/minwindef" "winapi/threadpoollegacyapiset" "winapi/winerror" ];
          "rt-core" = [ "slab" ];
          "rt-threaded" = [ "num_cpus" "rt-core" ];
          "signal" = [ "io-driver" "lazy_static" "libc" "mio-uds" "signal-hook-registry" "winapi/consoleapi" "winapi/minwindef" ];
          "stream" = [ "futures-core" ];
          "sync" = [ "fnv" ];
          "tcp" = [ "io-driver" "iovec" ];
          "time" = [ "slab" ];
          "udp" = [ "io-driver" ];
          "uds" = [ "io-driver" "mio-uds" "libc" ];
        };
        resolvedDefaultFeatures = [ "blocking" "default" "dns" "fnv" "fs" "full" "futures-core" "io-driver" "io-std" "io-util" "iovec" "lazy_static" "libc" "macros" "memchr" "mio" "mio-named-pipes" "mio-uds" "net" "num_cpus" "process" "rt-core" "rt-threaded" "rt-util" "signal" "signal-hook-registry" "slab" "stream" "sync" "tcp" "time" "tokio-macros" "udp" "uds" "winapi" ];
      };
      "tokio-macros" = rec {
        crateName = "tokio-macros";
        version = "0.2.6";
        edition = "2018";
        sha256 = "0ni60vnrf32r3wfhlahmnds1phx5d1xfbmyq9j0mz8kkzh5s0kg4";
        procMacro = true;
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];

      };
      "tokio-tls" = rec {
        crateName = "tokio-tls";
        version = "0.3.1";
        edition = "2018";
        sha256 = "0hv375949532p32d0w6bm2f6d3r0d00mcdzqjjqlzcmkszyg8w4s";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "native-tls";
            packageId = "native-tls";
          }
          {
            name = "tokio";
            packageId = "tokio";
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "macros" "stream" "rt-core" "io-util" "net" ];
          }
        ];

      };
      "tokio-util" = rec {
        crateName = "tokio-util";
        version = "0.3.1";
        edition = "2018";
        sha256 = "16b48dl6sbc9x944jgjvsd65ab1w2c2qcziddbrbwv1b3y4l50my";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.1.12";
          }
          {
            name = "tokio";
            packageId = "tokio";
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" ];
          }
        ];
        features = {
          "codec" = [ "tokio/stream" ];
          "compat" = [ "futures-io" ];
          "full" = [ "codec" "udp" "compat" ];
          "udp" = [ "tokio/udp" ];
        };
        resolvedDefaultFeatures = [ "codec" "default" ];
      };
      "toml" = rec {
        crateName = "toml";
        version = "0.5.8";
        edition = "2018";
        sha256 = "1apcmjrrjw429pjw7mqlmdwwd67g8305vwqy4kw3swr612bl44d3";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
          }
        ];
        features = {
          "preserve_order" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "tower-service" = rec {
        crateName = "tower-service";
        version = "0.3.1";
        edition = "2018";
        sha256 = "1iih764s3f6vlkspfmr72fkrs2lw1v3wiqmc6bd5zq1hdlfzs39n";
        authors = [
          "Tower Maintainers <team@tower-rs.com>"
        ];

      };
      "tracing" = rec {
        crateName = "tracing";
        version = "0.1.26";
        edition = "2018";
        sha256 = "17dqjhixmnbrk0c99ydb3b9pygjnzfb7yhlasb6134s4jy6fpb89";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.6";
          }
          {
            name = "tracing-core";
            packageId = "tracing-core";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "log";
            packageId = "log";
          }
        ];
        features = {
          "attributes" = [ "tracing-attributes" ];
          "default" = [ "std" "attributes" ];
          "log-always" = [ "log" ];
          "std" = [ "tracing-core/std" ];
        };
        resolvedDefaultFeatures = [ "log" "std" ];
      };
      "tracing-core" = rec {
        crateName = "tracing-core";
        version = "0.1.18";
        edition = "2018";
        sha256 = "0lm0li6lx75jgbbgxsb45439257sqb0j7828caf2hjqsigwi9zx9";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "tracing-futures" = rec {
        crateName = "tracing-futures";
        version = "0.2.5";
        edition = "2018";
        sha256 = "1wimg0iwa2ldq7xv98lvivvf3q9ykfminig8r1bs0ig22np9bl4p";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "pin-project";
            packageId = "pin-project 1.0.7";
            optional = true;
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std-future" "std" ];
          "futures-01" = [ "futures_01" "std" ];
          "futures-03" = [ "std-future" "futures" "futures-task" "std" ];
          "std" = [ "tracing/std" ];
          "std-future" = [ "pin-project" ];
        };
        resolvedDefaultFeatures = [ "pin-project" "std-future" ];
      };
      "tracing-log" = rec {
        crateName = "tracing-log";
        version = "0.1.2";
        edition = "2018";
        sha256 = "1qv1cwvdqrgvizkszbff4fvkw0m3nn5yz68r3yaw2hcflivk94m6";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "tracing-core";
            packageId = "tracing-core";
          }
        ];
        features = {
          "default" = [ "log-tracer" "trace-logger" "std" ];
          "std" = [ "log/std" ];
        };
        resolvedDefaultFeatures = [ "log-tracer" "std" ];
      };
      "tracing-serde" = rec {
        crateName = "tracing-serde";
        version = "0.1.2";
        edition = "2018";
        sha256 = "12xjirg0b3cparjdhkd9pksrmv33gz7rdm4gfkvgk15v3x2flrgv";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "tracing-core";
            packageId = "tracing-core";
          }
        ];

      };
      "tracing-subscriber" = rec {
        crateName = "tracing-subscriber";
        version = "0.2.18";
        edition = "2018";
        sha256 = "1mfwc3xz8zzi5kvizhxgcqdx8swj55f0hfs9psf7rfl312zm6mda";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
          "David Barsky <me@davidbarsky.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.12.1";
            optional = true;
          }
          {
            name = "chrono";
            packageId = "chrono";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "clock" "std" ];
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
          {
            name = "matchers";
            packageId = "matchers";
            optional = true;
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            optional = true;
          }
          {
            name = "sharded-slab";
            packageId = "sharded-slab";
            optional = true;
          }
          {
            name = "smallvec";
            packageId = "smallvec";
            optional = true;
          }
          {
            name = "thread_local";
            packageId = "thread_local";
            optional = true;
          }
          {
            name = "tracing";
            packageId = "tracing";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "tracing-core";
            packageId = "tracing-core";
          }
          {
            name = "tracing-log";
            packageId = "tracing-log";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "log-tracer" "std" ];
          }
          {
            name = "tracing-serde";
            packageId = "tracing-serde";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "regex";
            packageId = "regex";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "tracing";
            packageId = "tracing";
          }
          {
            name = "tracing-log";
            packageId = "tracing-log";
          }
        ];
        features = {
          "ansi" = [ "fmt" "ansi_term" ];
          "default" = [ "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json" ];
          "env-filter" = [ "matchers" "regex" "lazy_static" "tracing" ];
          "fmt" = [ "registry" ];
          "json" = [ "tracing-serde" "serde" "serde_json" ];
          "registry" = [ "sharded-slab" "thread_local" ];
        };
        resolvedDefaultFeatures = [ "ansi" "ansi_term" "chrono" "default" "env-filter" "fmt" "json" "lazy_static" "matchers" "regex" "registry" "serde" "serde_json" "sharded-slab" "smallvec" "thread_local" "tracing" "tracing-log" "tracing-serde" ];
      };
      "transaction-builder" = rec {
        crateName = "transaction-builder";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "mirai-annotations";
            packageId = "mirai-annotations";
          }
          {
            name = "transaction-builder-generated";
            packageId = "transaction-builder-generated";
          }
        ];
        features = {
          "dfinance_address" = [ "transaction-builder-generated/dfinance_address" ];
          "diem_address" = [ "transaction-builder-generated/diem_address" ];
          "ps_address" = [ "transaction-builder-generated/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "transaction-builder-generated" = rec {
        crateName = "transaction-builder-generated";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "compiled-stdlib";
            packageId = "compiled-stdlib";
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" "compiled-stdlib/dfinance_address" "diem-types/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" "compiled-stdlib/diem_address" "diem-types/diem_address" ];
          "fuzzing" = [ "proptest" "proptest-derive" "diem-proptest-helpers" "move-core-types/fuzzing" ];
          "ps_address" = [ "move-core-types/ps_address" "compiled-stdlib/ps_address" "diem-types/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "trie-db" = rec {
        crateName = "trie-db";
        version = "0.22.3";
        edition = "2018";
        sha256 = "1bxc1nbrybiibrhfgkk1gyfqn55jr997d55h5jd4kj8ggzgiw1gc";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "hash-db";
            packageId = "hash-db";
            usesDefaultFeatures = false;
          }
          {
            name = "hashbrown";
            packageId = "hashbrown 0.9.1";
            usesDefaultFeatures = false;
            features = [ "ahash" ];
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "rustc-hex";
            packageId = "rustc-hex";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "hash-db/std" "rustc-hex" ];
        };
        resolvedDefaultFeatures = [ "rustc-hex" "std" ];
      };
      "trie-root" = rec {
        crateName = "trie-root";
        version = "0.16.0";
        edition = "2018";
        sha256 = "1kb8kylp5046rpkh8zxkc50pp2kiasgvjw3s47bl84icdm832ab5";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "hash-db";
            packageId = "hash-db";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "hash-db/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "try-lock" = rec {
        crateName = "try-lock";
        version = "0.2.3";
        edition = "2015";
        sha256 = "0hkn1ksmg5hdqgqdw1ahy5qk69f4crh2psf0v61qphyrf777nm2r";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];

      };
      "twox-hash" = rec {
        crateName = "twox-hash";
        version = "1.6.0";
        edition = "2018";
        crateBin = [];
        sha256 = "0ndb4pil758kn0av83jjgq8kkfkwc5lhi5ii7fk5yw96h1wapy04";
        authors = [
          "Jake Goulding <jake.goulding@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            optional = true;
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "serialize" = [ "serde" ];
          "std" = [ "rand" ];
        };
        resolvedDefaultFeatures = [ "default" "rand" "std" ];
      };
      "typenum" = rec {
        crateName = "typenum";
        version = "1.13.0";
        edition = "2018";
        sha256 = "01lbbspn4080yg8wp6y7q3xcqih1c1dmkkx4pwax4z1a9436k7w7";
        build = "build/main.rs";
        authors = [
          "Paho Lurie-Gregg <paho@paholg.com>"
          "Andre Bogus <bogusandre@gmail.com>"
        ];
        features = {
        };
      };
      "uint" = rec {
        crateName = "uint";
        version = "0.8.5";
        edition = "2018";
        sha256 = "0xsihgqwr32ca7nly154r19ysgnnzim6gs5zmvcyvxzsgpk3bc4x";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "crunchy";
            packageId = "crunchy";
            usesDefaultFeatures = false;
          }
          {
            name = "rustc-hex";
            packageId = "rustc-hex";
            usesDefaultFeatures = false;
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
        ];
        features = {
          "default" = [ "std" ];
          "quickcheck" = [ "qc" "rand" ];
          "std" = [ "byteorder/std" "rustc-hex/std" "crunchy/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "unicase" = rec {
        crateName = "unicase";
        version = "2.6.0";
        edition = "2015";
        sha256 = "1xmlbink4ycgxrkjspp0mf7pghcx4m7vxq7fpfm04ikr2zk7pwsh";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
        };
      };
      "unicode-bidi" = rec {
        crateName = "unicode-bidi";
        version = "0.3.5";
        edition = "2018";
        sha256 = "1q07h5kp9jszwf0bkrpa1v5wmv04dv920x3w2xy6pjdikchbxf7f";
        libName = "unicode_bidi";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
        ];
        features = {
          "flame_it" = [ "flame" "flamer" ];
          "with_serde" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-normalization" = rec {
        crateName = "unicode-normalization";
        version = "0.1.17";
        edition = "2018";
        sha256 = "1vzajca1hk9plka5d3z3426frmnr7229fd2kidz58zd9r3hzryq7";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        dependencies = [
          {
            name = "tinyvec";
            packageId = "tinyvec";
            features = [ "alloc" ];
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "unicode-segmentation" = rec {
        crateName = "unicode-segmentation";
        version = "1.7.1";
        edition = "2015";
        sha256 = "15n736z0pbj30pj44jb9s9rjavzrmx8v8pzdgsl5yfmfwrxjw3dv";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
        };
      };
      "unicode-width" = rec {
        crateName = "unicode-width";
        version = "0.1.8";
        edition = "2015";
        sha256 = "1qxizyi6xbcqyi4z79p523ywvmgsfcgfqb3zv3c8i6x1jcc5jdwk";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "std" "core" "compiler_builtins" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-xid" = rec {
        crateName = "unicode-xid";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1wrkgcw557v311dkdb6n2hrix9dm2qdsb1zpw7pn79l03zb85jwc";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "universal-hash" = rec {
        crateName = "universal-hash";
        version = "0.4.0";
        edition = "2018";
        sha256 = "00hljq64l0p68yrncvyww4cdgkzpzl49vrlnj57kwblkak3b49l3";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.4";
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.0";
            usesDefaultFeatures = false;
          }
        ];
        features = {
        };
      };
      "unsigned-varint 0.4.0" = rec {
        crateName = "unsigned-varint";
        version = "0.4.0";
        edition = "2018";
        sha256 = "199z7py5pc1jvyw6qkby367a8wa2ng7x1z41r03ak4mnhdlpg7b6";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        features = {
          "codec" = [ "bytes" "tokio-util" ];
          "futures" = [ "futures-io" "futures-util" ];
          "futures-codec" = [ "bytes" "futures_codec" ];
        };
      };
      "unsigned-varint 0.5.1" = rec {
        crateName = "unsigned-varint";
        version = "0.5.1";
        edition = "2018";
        sha256 = "0ddc36m85jw5bzl2gjnhazi283r4qdsrnmdf77zavbq5ybdyxzgp";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        features = {
          "codec" = [ "std" "bytes" "tokio-util" ];
          "futures" = [ "std" "futures-io" "futures-util" ];
          "futures-codec" = [ "std" "bytes" "futures_codec" ];
        };
      };
      "untrusted" = rec {
        crateName = "untrusted";
        version = "0.7.1";
        edition = "2018";
        sha256 = "0jkbqaj9d3v5a91pp3wp9mffvng1nhycx6sh4qkdd9qyr62ccmm1";
        libPath = "src/untrusted.rs";
        authors = [
          "Brian Smith <brian@briansmith.org>"
        ];

      };
      "ureq" = rec {
        crateName = "ureq";
        version = "1.5.5";
        edition = "2018";
        sha256 = "0wdakplwjjya6m95z42pci8m63ddx913rd92kzh8l8ar5ly0d2rb";
        authors = [
          "Martin Algesten <martin@algesten.se>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64";
          }
          {
            name = "chunked_transfer";
            packageId = "chunked_transfer";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "native-tls";
            packageId = "native-tls";
            optional = true;
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "qstring";
            packageId = "qstring";
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            optional = true;
          }
          {
            name = "url";
            packageId = "url 2.2.2";
          }
        ];
        devDependencies = [
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
        ];
        features = {
          "charset" = [ "encoding" ];
          "cookies" = [ "cookie" "cookie_store" ];
          "default" = [ "tls" "cookies" ];
          "json" = [ "serde" "serde_json" ];
          "native-certs" = [ "rustls-native-certs" ];
          "socks-proxy" = [ "socks" ];
          "tls" = [ "rustls" "webpki" "webpki-roots" ];
        };
        resolvedDefaultFeatures = [ "json" "native-tls" "serde" "serde_json" ];
      };
      "url 1.7.2" = rec {
        crateName = "url";
        version = "1.7.2";
        edition = "2015";
        sha256 = "0nim1c90mxpi9wgdw2xh8dqd72vlklwlzam436akcrhjac6pqknx";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "idna";
            packageId = "idna 0.1.5";
          }
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 1.0.1";
          }
        ];
        features = {
          "heap_size" = [ "heapsize" ];
          "query_encoding" = [ "encoding" ];
        };
      };
      "url 2.2.2" = rec {
        crateName = "url";
        version = "2.2.2";
        edition = "2018";
        sha256 = "132pzpvfvpw33gjlzqd55n5iag9qddzffq8qbp1myfykna1w61x5";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "form_urlencoded";
            packageId = "form_urlencoded";
          }
          {
            name = "idna";
            packageId = "idna 0.2.3";
          }
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 2.1.0";
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
        ];

        resolvedDefaultFeatures = [ "serde" ];
      };
      "value-bag" = rec {
        crateName = "value-bag";
        version = "1.0.0-alpha.7";
        edition = "2018";
        sha256 = "1bj0v1sq0xvwmxcixvia08a9r1mdfr257xwn7qan2hpr40ahwcnx";
        authors = [
          "Ashley Mannix <ashleymannix@live.com.au>"
        ];
        dependencies = [
          {
            name = "ctor";
            packageId = "ctor";
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
            rename = "rustc";
          }
        ];
        features = {
          "error" = [ "std" "sval1_lib/std" ];
          "serde" = [ "serde1" ];
          "serde1" = [ "serde1_lib" "sval1_lib/serde1" "sval1_lib/alloc" "erased-serde1/alloc" "serde1_fmt" ];
          "sval" = [ "sval1" ];
          "sval1" = [ "sval1_lib" ];
          "test" = [ "std" ];
        };
      };
      "vcpkg" = rec {
        crateName = "vcpkg";
        version = "0.2.12";
        edition = "2015";
        sha256 = "0p9ypqvv55cq2rl0s7g5ca2bkvwn62cdrdb0hm8j0hd2crigznyb";
        authors = [
          "Jim McGrath <jimmc2@gmail.com>"
        ];

      };
      "vec_map" = rec {
        crateName = "vec_map";
        version = "0.8.2";
        edition = "2015";
        sha256 = "1481w9g1dw9rxp3l6snkdqihzyrd2f8vispzqmwjwsdyhw8xzggi";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Jorge Aparicio <japaricious@gmail.com>"
          "Alexis Beingessner <a.beingessner@gmail.com>"
          "Brian Anderson <>"
          "tbu- <>"
          "Manish Goregaokar <>"
          "Aaron Turon <aturon@mozilla.com>"
          "Adolfo Ochagavía <>"
          "Niko Matsakis <>"
          "Steven Fackler <>"
          "Chase Southwood <csouth3@illinois.edu>"
          "Eduard Burtescu <>"
          "Florian Wilkens <>"
          "Félix Raimundo <>"
          "Tibor Benke <>"
          "Markus Siemens <markus@m-siemens.de>"
          "Josh Branchaud <jbranchaud@gmail.com>"
          "Huon Wilson <dbau.pp@gmail.com>"
          "Corey Farwell <coref@rwell.org>"
          "Aaron Liblong <>"
          "Nick Cameron <nrc@ncameron.org>"
          "Patrick Walton <pcwalton@mimiga.net>"
          "Felix S Klock II <>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
          "Sean McArthur <sean.monstar@gmail.com>"
          "Vadim Petrochenkov <>"
        ];
        features = {
          "eders" = [ "serde" ];
        };
      };
      "version_check" = rec {
        crateName = "version_check";
        version = "0.9.3";
        edition = "2015";
        sha256 = "1zmkcgj2m0pq0l4wnhrp1wl1lygf7x2h5p7pvjwc4719lnlxrv2z";
        authors = [
          "Sergio Benitez <sb@sergio.bz>"
        ];

      };
      "vm" = rec {
        crateName = "vm";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "diem-crypto";
            packageId = "diem-crypto";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "mirai-annotations";
            packageId = "mirai-annotations";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "num-variants";
            packageId = "num-variants";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "ref-cast";
            packageId = "ref-cast";
          }
        ];
        devDependencies = [
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
            features = [ "fuzzing" ];
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" ];
          "fuzzing" = [ "proptest" "proptest-derive" "diem-proptest-helpers" "move-core-types/fuzzing" ];
          "ps_address" = [ "move-core-types/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "vm-genesis" = rec {
        crateName = "vm-genesis";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/dfinance/libra.git";
          rev = "ca5f70d21aad38a32c8f2b765826630e875c4db3";
          sha256 = "1qakijnycz32pzjpap1vlq71mx2k1y669rs8fywgw9vw62x7bp4p";
        };
        authors = [
          "Diem Association <opensource@diem.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "bcs";
            packageId = "bcs";
          }
          {
            name = "bytecode-verifier";
            packageId = "bytecode-verifier";
          }
          {
            name = "compiled-stdlib";
            packageId = "compiled-stdlib";
          }
          {
            name = "diem-config";
            packageId = "diem-config";
          }
          {
            name = "diem-crypto";
            packageId = "diem-crypto";
          }
          {
            name = "diem-network-address";
            packageId = "diem-network-address";
          }
          {
            name = "diem-state-view";
            packageId = "diem-state-view";
          }
          {
            name = "diem-types";
            packageId = "diem-types";
          }
          {
            name = "diem-vm";
            packageId = "diem-vm";
          }
          {
            name = "diem-workspace-hack";
            packageId = "diem-workspace-hack";
          }
          {
            name = "move-core-types";
            packageId = "move-core-types 0.1.0 (git+https://github.com/dfinance/libra.git?branch=release-1.1.4#ca5f70d21aad38a32c8f2b765826630e875c4db3)";
          }
          {
            name = "move-vm-runtime";
            packageId = "move-vm-runtime";
          }
          {
            name = "move-vm-types";
            packageId = "move-vm-types";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "transaction-builder";
            packageId = "transaction-builder";
          }
          {
            name = "vm";
            packageId = "vm";
          }
        ];
        features = {
          "dfinance_address" = [ "move-core-types/dfinance_address" "bytecode-verifier/dfinance_address" "diem-types/dfinance_address" "vm/dfinance_address" "move-vm-types/dfinance_address" "move-vm-runtime/dfinance_address" "diem-vm/dfinance_address" "diem-state-view/dfinance_address" "diem-config/dfinance_address" "diem-network-address/dfinance_address" "compiled-stdlib/dfinance_address" "transaction-builder/dfinance_address" ];
          "diem_address" = [ "move-core-types/diem_address" "bytecode-verifier/diem_address" "diem-types/diem_address" "vm/diem_address" "move-vm-types/diem_address" "move-vm-runtime/diem_address" "diem-vm/diem_address" "diem-state-view/diem_address" "diem-config/diem_address" "diem-network-address/diem_address" "compiled-stdlib/diem_address" "transaction-builder/diem_address" ];
          "fuzzing" = [ "diem-types/fuzzing" "move-vm-types/fuzzing" ];
          "ps_address" = [ "move-core-types/ps_address" "bytecode-verifier/ps_address" "diem-types/ps_address" "vm/ps_address" "move-vm-types/ps_address" "move-vm-runtime/ps_address" "diem-vm/ps_address" "diem-state-view/ps_address" "diem-config/ps_address" "diem-network-address/ps_address" "compiled-stdlib/ps_address" "transaction-builder/ps_address" ];
        };
        resolvedDefaultFeatures = [ "default" "dfinance_address" "diem_address" "ps_address" ];
      };
      "void" = rec {
        crateName = "void";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0zc8f0ksxvmhvgx4fdg0zyn6vdnbxd2xv9hfx4nhzg6kbs4f80ka";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "waker-fn" = rec {
        crateName = "waker-fn";
        version = "1.1.0";
        edition = "2018";
        sha256 = "1jpfiis0frk2b36krqvk8264kgxk2dyhfzjsr8g3wah1nii2qnwx";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];

      };
      "walkdir" = rec {
        crateName = "walkdir";
        version = "2.3.2";
        edition = "2018";
        sha256 = "0mnszy33685v8y9js8mw6x2p3iddqs8vfj7n2dhqddnlbirz5340";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "same-file";
            packageId = "same-file";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "std" "winnt" ];
          }
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: (target."windows" or false);
          }
        ];

      };
      "want" = rec {
        crateName = "want";
        version = "0.3.0";
        edition = "2018";
        sha256 = "181b2zmwfq389x9n2g1n37cvcvvdand832zz6v8i1l8wrdlaks0w";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "try-lock";
            packageId = "try-lock";
          }
        ];

      };
      "wasi 0.10.0+wasi-snapshot-preview1" = rec {
        crateName = "wasi";
        version = "0.10.0+wasi-snapshot-preview1";
        edition = "2018";
        sha256 = "07y3l8mzfzzz4cj09c8y90yak4hpsi9g7pllyzpr6xvwrabka50s";
        authors = [
          "The Cranelift Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "compiler_builtins" "core" "rustc-std-workspace-alloc" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "wasi 0.9.0+wasi-snapshot-preview1" = rec {
        crateName = "wasi";
        version = "0.9.0+wasi-snapshot-preview1";
        edition = "2018";
        sha256 = "06g5v3vrdapfzvfq662cij7v8a1flwr2my45nnncdv2galrdzkfc";
        authors = [
          "The Cranelift Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "compiler_builtins" "core" "rustc-std-workspace-alloc" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "wasm-bindgen" = rec {
        crateName = "wasm-bindgen";
        version = "0.2.74";
        edition = "2018";
        sha256 = "1zcp57mwb47vdw3r594cl7vbj6pwd503xrkq8a3phvs8xpaf2knm";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            optional = true;
          }
          {
            name = "wasm-bindgen-macro";
            packageId = "wasm-bindgen-macro";
          }
        ];
        features = {
          "default" = [ "spans" "std" ];
          "enable-interning" = [ "std" ];
          "serde-serialize" = [ "serde" "serde_json" "std" ];
          "spans" = [ "wasm-bindgen-macro/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro/strict-macro" ];
          "xxx_debug_only_print_generated_code" = [ "wasm-bindgen-macro/xxx_debug_only_print_generated_code" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "serde-serialize" "serde_json" "spans" "std" ];
      };
      "wasm-bindgen-backend" = rec {
        crateName = "wasm-bindgen-backend";
        version = "0.2.74";
        edition = "2018";
        sha256 = "005ra6jc8pm1y2wi6swkvn34r2is3knv5f2dv59ymkscd6hgccrv";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "bumpalo";
            packageId = "bumpalo";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-futures" = rec {
        crateName = "wasm-bindgen-futures";
        version = "0.4.24";
        edition = "2018";
        sha256 = "1wb75qgv91qjblv685hnka2fn3w4fp0wi05cs3i3rmbrqrw7kfjz";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            target = { target, features }: (builtins.elem "atomics" targetFeatures);
            features = [ "MessageEvent" "Worker" ];
          }
        ];
        features = {
          "futures-core-03-stream" = [ "futures-core" ];
        };
      };
      "wasm-bindgen-macro" = rec {
        crateName = "wasm-bindgen-macro";
        version = "0.2.74";
        edition = "2018";
        sha256 = "1m4bn6wlzc2rkp693zgnn7kh05r5fm4w55l0igjy23s3c756k088";
        procMacro = true;
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "wasm-bindgen-macro-support";
            packageId = "wasm-bindgen-macro-support";
          }
        ];
        features = {
          "spans" = [ "wasm-bindgen-macro-support/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro-support/strict-macro" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-macro-support" = rec {
        crateName = "wasm-bindgen-macro-support";
        version = "0.2.74";
        edition = "2018";
        sha256 = "15vsk3q4jfk8ax4walc8vy3fgvrpkg86vjz2ym0z5ngk5xa428my";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "visit" "full" ];
          }
          {
            name = "wasm-bindgen-backend";
            packageId = "wasm-bindgen-backend";
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
          "spans" = [ "wasm-bindgen-backend/spans" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-shared" = rec {
        crateName = "wasm-bindgen-shared";
        version = "0.2.74";
        edition = "2018";
        sha256 = "0ksbnhjzvnsmzc1n18bs98swnrzrwxjrpx3clrsyv3pip1vgikyp";
        authors = [
          "The wasm-bindgen Developers"
        ];

      };
      "wasm-timer" = rec {
        crateName = "wasm-timer";
        version = "0.2.5";
        edition = "2018";
        sha256 = "0zsyijv3wgj9p4q47a4awla8j4kw33jd7da2fsd1wml0nh6wn3my";
        authors = [
          "Pierre Krieger <pierre.krieger1708@gmail.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.15";
          }
          {
            name = "js-sys";
            packageId = "js-sys";
            target = { target, features }: ((target."arch" == "wasm32") && (target."os" == "unknown"));
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.11.1";
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            target = { target, features }: ((target."arch" == "wasm32") && (target."os" == "unknown"));
          }
          {
            name = "wasm-bindgen-futures";
            packageId = "wasm-bindgen-futures";
            target = { target, features }: ((target."arch" == "wasm32") && (target."os" == "unknown"));
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            target = { target, features }: ((target."arch" == "wasm32") && (target."os" == "unknown"));
            features = [ "Performance" "Window" ];
          }
        ];

      };
      "wasmi" = rec {
        crateName = "wasmi";
        version = "0.6.2";
        edition = "2015";
        crateBin = [];
        sha256 = "1zrar5hmrj6hq18f0mvdhxn0chd5mbvjjmblma3kbbr59n37sqdz";
        authors = [
          "Nikolay Volf <nikvolf@gmail.com>"
          "Svyatoslav Nikolsky <svyatonik@yandex.ru>"
          "Sergey Pepyakin <s.pepyakin@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "memory_units";
            packageId = "memory_units";
          }
          {
            name = "num-rational";
            packageId = "num-rational 0.2.4";
          }
          {
            name = "num-traits";
            packageId = "num-traits";
          }
          {
            name = "parity-wasm";
            packageId = "parity-wasm";
            usesDefaultFeatures = false;
          }
          {
            name = "wasmi-validation";
            packageId = "wasmi-validation";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "core" = [ "vec_memory" "wasmi-validation/core" "libm" ];
          "default" = [ "std" ];
          "std" = [ "parity-wasm/std" "wasmi-validation/std" "num-rational/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "wasmi-validation" = rec {
        crateName = "wasmi-validation";
        version = "0.3.0";
        edition = "2018";
        sha256 = "14sd4q5lzyas42ixsp56498hf6f0rzsf50cj16b3b9sb0sbway7a";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-wasm";
            packageId = "parity-wasm";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "parity-wasm/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "web-sys" = rec {
        crateName = "web-sys";
        version = "0.3.51";
        edition = "2018";
        sha256 = "10p514z7zmwzxqll0z0zqhlswv3hadbrwais3l8zfgcz6xxl2a78";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
        ];
        features = {
          "AbortSignal" = [ "EventTarget" ];
          "AnalyserNode" = [ "AudioNode" "EventTarget" ];
          "Animation" = [ "EventTarget" ];
          "AnimationEvent" = [ "Event" ];
          "AnimationPlaybackEvent" = [ "Event" ];
          "Attr" = [ "EventTarget" "Node" ];
          "AudioBufferSourceNode" = [ "AudioNode" "AudioScheduledSourceNode" "EventTarget" ];
          "AudioContext" = [ "BaseAudioContext" "EventTarget" ];
          "AudioDestinationNode" = [ "AudioNode" "EventTarget" ];
          "AudioNode" = [ "EventTarget" ];
          "AudioProcessingEvent" = [ "Event" ];
          "AudioScheduledSourceNode" = [ "AudioNode" "EventTarget" ];
          "AudioStreamTrack" = [ "EventTarget" "MediaStreamTrack" ];
          "AudioTrackList" = [ "EventTarget" ];
          "AudioWorklet" = [ "Worklet" ];
          "AudioWorkletGlobalScope" = [ "WorkletGlobalScope" ];
          "AudioWorkletNode" = [ "AudioNode" "EventTarget" ];
          "AuthenticatorAssertionResponse" = [ "AuthenticatorResponse" ];
          "AuthenticatorAttestationResponse" = [ "AuthenticatorResponse" ];
          "BaseAudioContext" = [ "EventTarget" ];
          "BatteryManager" = [ "EventTarget" ];
          "BeforeUnloadEvent" = [ "Event" ];
          "BiquadFilterNode" = [ "AudioNode" "EventTarget" ];
          "BlobEvent" = [ "Event" ];
          "Bluetooth" = [ "EventTarget" ];
          "BluetoothAdvertisingEvent" = [ "Event" ];
          "BluetoothDevice" = [ "EventTarget" ];
          "BluetoothPermissionResult" = [ "EventTarget" "PermissionStatus" ];
          "BluetoothRemoteGattCharacteristic" = [ "EventTarget" ];
          "BluetoothRemoteGattService" = [ "EventTarget" ];
          "BroadcastChannel" = [ "EventTarget" ];
          "CanvasCaptureMediaStream" = [ "EventTarget" "MediaStream" ];
          "CdataSection" = [ "CharacterData" "EventTarget" "Node" "Text" ];
          "ChannelMergerNode" = [ "AudioNode" "EventTarget" ];
          "ChannelSplitterNode" = [ "AudioNode" "EventTarget" ];
          "CharacterData" = [ "EventTarget" "Node" ];
          "ChromeWorker" = [ "EventTarget" "Worker" ];
          "Clipboard" = [ "EventTarget" ];
          "ClipboardEvent" = [ "Event" ];
          "CloseEvent" = [ "Event" ];
          "Comment" = [ "CharacterData" "EventTarget" "Node" ];
          "CompositionEvent" = [ "Event" "UiEvent" ];
          "ConstantSourceNode" = [ "AudioNode" "AudioScheduledSourceNode" "EventTarget" ];
          "ConvolverNode" = [ "AudioNode" "EventTarget" ];
          "CssAnimation" = [ "Animation" "EventTarget" ];
          "CssConditionRule" = [ "CssGroupingRule" "CssRule" ];
          "CssCounterStyleRule" = [ "CssRule" ];
          "CssFontFaceRule" = [ "CssRule" ];
          "CssFontFeatureValuesRule" = [ "CssRule" ];
          "CssGroupingRule" = [ "CssRule" ];
          "CssImportRule" = [ "CssRule" ];
          "CssKeyframeRule" = [ "CssRule" ];
          "CssKeyframesRule" = [ "CssRule" ];
          "CssMediaRule" = [ "CssConditionRule" "CssGroupingRule" "CssRule" ];
          "CssNamespaceRule" = [ "CssRule" ];
          "CssPageRule" = [ "CssRule" ];
          "CssStyleRule" = [ "CssRule" ];
          "CssStyleSheet" = [ "StyleSheet" ];
          "CssSupportsRule" = [ "CssConditionRule" "CssGroupingRule" "CssRule" ];
          "CssTransition" = [ "Animation" "EventTarget" ];
          "CustomEvent" = [ "Event" ];
          "DedicatedWorkerGlobalScope" = [ "EventTarget" "WorkerGlobalScope" ];
          "DelayNode" = [ "AudioNode" "EventTarget" ];
          "DeviceLightEvent" = [ "Event" ];
          "DeviceMotionEvent" = [ "Event" ];
          "DeviceOrientationEvent" = [ "Event" ];
          "DeviceProximityEvent" = [ "Event" ];
          "Document" = [ "EventTarget" "Node" ];
          "DocumentFragment" = [ "EventTarget" "Node" ];
          "DocumentTimeline" = [ "AnimationTimeline" ];
          "DocumentType" = [ "EventTarget" "Node" ];
          "DomMatrix" = [ "DomMatrixReadOnly" ];
          "DomPoint" = [ "DomPointReadOnly" ];
          "DomRect" = [ "DomRectReadOnly" ];
          "DomRequest" = [ "EventTarget" ];
          "DragEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "DynamicsCompressorNode" = [ "AudioNode" "EventTarget" ];
          "Element" = [ "EventTarget" "Node" ];
          "ErrorEvent" = [ "Event" ];
          "EventSource" = [ "EventTarget" ];
          "ExtendableEvent" = [ "Event" ];
          "ExtendableMessageEvent" = [ "Event" "ExtendableEvent" ];
          "FetchEvent" = [ "Event" "ExtendableEvent" ];
          "FetchObserver" = [ "EventTarget" ];
          "File" = [ "Blob" ];
          "FileReader" = [ "EventTarget" ];
          "FileSystemDirectoryEntry" = [ "FileSystemEntry" ];
          "FileSystemFileEntry" = [ "FileSystemEntry" ];
          "FocusEvent" = [ "Event" "UiEvent" ];
          "FontFaceSet" = [ "EventTarget" ];
          "FontFaceSetLoadEvent" = [ "Event" ];
          "GainNode" = [ "AudioNode" "EventTarget" ];
          "GamepadAxisMoveEvent" = [ "Event" "GamepadEvent" ];
          "GamepadButtonEvent" = [ "Event" "GamepadEvent" ];
          "GamepadEvent" = [ "Event" ];
          "GpuDevice" = [ "EventTarget" ];
          "GpuUncapturedErrorEvent" = [ "Event" ];
          "HashChangeEvent" = [ "Event" ];
          "HtmlAnchorElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlAreaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlAudioElement" = [ "Element" "EventTarget" "HtmlElement" "HtmlMediaElement" "Node" ];
          "HtmlBaseElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlBodyElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlBrElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlButtonElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlCanvasElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDataElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDataListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDetailsElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDialogElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDirectoryElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDivElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDocument" = [ "Document" "EventTarget" "Node" ];
          "HtmlElement" = [ "Element" "EventTarget" "Node" ];
          "HtmlEmbedElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFieldSetElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFontElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFormControlsCollection" = [ "HtmlCollection" ];
          "HtmlFormElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFrameElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFrameSetElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHeadElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHeadingElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHrElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHtmlElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlIFrameElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlImageElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlInputElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLabelElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLegendElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLiElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLinkElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMapElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMediaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMenuElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMenuItemElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMetaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMeterElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlModElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlObjectElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOptGroupElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOptionElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOptionsCollection" = [ "HtmlCollection" ];
          "HtmlOutputElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlParagraphElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlParamElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlPictureElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlPreElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlProgressElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlQuoteElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlScriptElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSelectElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSlotElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSourceElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSpanElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlStyleElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableCaptionElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableCellElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableColElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableRowElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableSectionElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTemplateElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTextAreaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTimeElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTitleElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTrackElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlUListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlUnknownElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlVideoElement" = [ "Element" "EventTarget" "HtmlElement" "HtmlMediaElement" "Node" ];
          "IdbCursorWithValue" = [ "IdbCursor" ];
          "IdbDatabase" = [ "EventTarget" ];
          "IdbFileHandle" = [ "EventTarget" ];
          "IdbFileRequest" = [ "DomRequest" "EventTarget" ];
          "IdbLocaleAwareKeyRange" = [ "IdbKeyRange" ];
          "IdbMutableFile" = [ "EventTarget" ];
          "IdbOpenDbRequest" = [ "EventTarget" "IdbRequest" ];
          "IdbRequest" = [ "EventTarget" ];
          "IdbTransaction" = [ "EventTarget" ];
          "IdbVersionChangeEvent" = [ "Event" ];
          "IirFilterNode" = [ "AudioNode" "EventTarget" ];
          "ImageCaptureErrorEvent" = [ "Event" ];
          "InputEvent" = [ "Event" "UiEvent" ];
          "KeyboardEvent" = [ "Event" "UiEvent" ];
          "KeyframeEffect" = [ "AnimationEffect" ];
          "LocalMediaStream" = [ "EventTarget" "MediaStream" ];
          "MediaDevices" = [ "EventTarget" ];
          "MediaElementAudioSourceNode" = [ "AudioNode" "EventTarget" ];
          "MediaEncryptedEvent" = [ "Event" ];
          "MediaKeyError" = [ "Event" ];
          "MediaKeyMessageEvent" = [ "Event" ];
          "MediaKeySession" = [ "EventTarget" ];
          "MediaQueryList" = [ "EventTarget" ];
          "MediaQueryListEvent" = [ "Event" ];
          "MediaRecorder" = [ "EventTarget" ];
          "MediaRecorderErrorEvent" = [ "Event" ];
          "MediaSource" = [ "EventTarget" ];
          "MediaStream" = [ "EventTarget" ];
          "MediaStreamAudioDestinationNode" = [ "AudioNode" "EventTarget" ];
          "MediaStreamAudioSourceNode" = [ "AudioNode" "EventTarget" ];
          "MediaStreamEvent" = [ "Event" ];
          "MediaStreamTrack" = [ "EventTarget" ];
          "MediaStreamTrackEvent" = [ "Event" ];
          "MessageEvent" = [ "Event" ];
          "MessagePort" = [ "EventTarget" ];
          "MidiAccess" = [ "EventTarget" ];
          "MidiConnectionEvent" = [ "Event" ];
          "MidiInput" = [ "EventTarget" "MidiPort" ];
          "MidiMessageEvent" = [ "Event" ];
          "MidiOutput" = [ "EventTarget" "MidiPort" ];
          "MidiPort" = [ "EventTarget" ];
          "MouseEvent" = [ "Event" "UiEvent" ];
          "MouseScrollEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "MutationEvent" = [ "Event" ];
          "NetworkInformation" = [ "EventTarget" ];
          "Node" = [ "EventTarget" ];
          "Notification" = [ "EventTarget" ];
          "NotificationEvent" = [ "Event" "ExtendableEvent" ];
          "OfflineAudioCompletionEvent" = [ "Event" ];
          "OfflineAudioContext" = [ "BaseAudioContext" "EventTarget" ];
          "OfflineResourceList" = [ "EventTarget" ];
          "OffscreenCanvas" = [ "EventTarget" ];
          "OscillatorNode" = [ "AudioNode" "AudioScheduledSourceNode" "EventTarget" ];
          "PageTransitionEvent" = [ "Event" ];
          "PaintWorkletGlobalScope" = [ "WorkletGlobalScope" ];
          "PannerNode" = [ "AudioNode" "EventTarget" ];
          "PaymentMethodChangeEvent" = [ "Event" "PaymentRequestUpdateEvent" ];
          "PaymentRequestUpdateEvent" = [ "Event" ];
          "Performance" = [ "EventTarget" ];
          "PerformanceMark" = [ "PerformanceEntry" ];
          "PerformanceMeasure" = [ "PerformanceEntry" ];
          "PerformanceNavigationTiming" = [ "PerformanceEntry" "PerformanceResourceTiming" ];
          "PerformanceResourceTiming" = [ "PerformanceEntry" ];
          "PermissionStatus" = [ "EventTarget" ];
          "PointerEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "PopStateEvent" = [ "Event" ];
          "PopupBlockedEvent" = [ "Event" ];
          "PresentationAvailability" = [ "EventTarget" ];
          "PresentationConnection" = [ "EventTarget" ];
          "PresentationConnectionAvailableEvent" = [ "Event" ];
          "PresentationConnectionCloseEvent" = [ "Event" ];
          "PresentationConnectionList" = [ "EventTarget" ];
          "PresentationRequest" = [ "EventTarget" ];
          "ProcessingInstruction" = [ "CharacterData" "EventTarget" "Node" ];
          "ProgressEvent" = [ "Event" ];
          "PromiseRejectionEvent" = [ "Event" ];
          "PublicKeyCredential" = [ "Credential" ];
          "PushEvent" = [ "Event" "ExtendableEvent" ];
          "RadioNodeList" = [ "NodeList" ];
          "RtcDataChannel" = [ "EventTarget" ];
          "RtcDataChannelEvent" = [ "Event" ];
          "RtcPeerConnection" = [ "EventTarget" ];
          "RtcPeerConnectionIceEvent" = [ "Event" ];
          "RtcTrackEvent" = [ "Event" ];
          "RtcdtmfSender" = [ "EventTarget" ];
          "RtcdtmfToneChangeEvent" = [ "Event" ];
          "Screen" = [ "EventTarget" ];
          "ScreenOrientation" = [ "EventTarget" ];
          "ScriptProcessorNode" = [ "AudioNode" "EventTarget" ];
          "ScrollAreaEvent" = [ "Event" "UiEvent" ];
          "SecurityPolicyViolationEvent" = [ "Event" ];
          "ServiceWorker" = [ "EventTarget" ];
          "ServiceWorkerContainer" = [ "EventTarget" ];
          "ServiceWorkerGlobalScope" = [ "EventTarget" "WorkerGlobalScope" ];
          "ServiceWorkerRegistration" = [ "EventTarget" ];
          "ShadowRoot" = [ "DocumentFragment" "EventTarget" "Node" ];
          "SharedWorker" = [ "EventTarget" ];
          "SharedWorkerGlobalScope" = [ "EventTarget" "WorkerGlobalScope" ];
          "SourceBuffer" = [ "EventTarget" ];
          "SourceBufferList" = [ "EventTarget" ];
          "SpeechRecognition" = [ "EventTarget" ];
          "SpeechRecognitionError" = [ "Event" ];
          "SpeechRecognitionEvent" = [ "Event" ];
          "SpeechSynthesis" = [ "EventTarget" ];
          "SpeechSynthesisErrorEvent" = [ "Event" "SpeechSynthesisEvent" ];
          "SpeechSynthesisEvent" = [ "Event" ];
          "SpeechSynthesisUtterance" = [ "EventTarget" ];
          "StereoPannerNode" = [ "AudioNode" "EventTarget" ];
          "StorageEvent" = [ "Event" ];
          "SvgAnimateElement" = [ "Element" "EventTarget" "Node" "SvgAnimationElement" "SvgElement" ];
          "SvgAnimateMotionElement" = [ "Element" "EventTarget" "Node" "SvgAnimationElement" "SvgElement" ];
          "SvgAnimateTransformElement" = [ "Element" "EventTarget" "Node" "SvgAnimationElement" "SvgElement" ];
          "SvgAnimationElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgCircleElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgClipPathElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgComponentTransferFunctionElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgDefsElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgDescElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgElement" = [ "Element" "EventTarget" "Node" ];
          "SvgEllipseElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgFilterElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgForeignObjectElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgGeometryElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgGradientElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgGraphicsElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgImageElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgLineElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgLinearGradientElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGradientElement" ];
          "SvgMarkerElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgMaskElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgMetadataElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgPathElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgPathSegArcAbs" = [ "SvgPathSeg" ];
          "SvgPathSegArcRel" = [ "SvgPathSeg" ];
          "SvgPathSegClosePath" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicRel" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicSmoothAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicSmoothRel" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticRel" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticSmoothAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticSmoothRel" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoAbs" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoHorizontalAbs" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoHorizontalRel" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoRel" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoVerticalAbs" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoVerticalRel" = [ "SvgPathSeg" ];
          "SvgPathSegMovetoAbs" = [ "SvgPathSeg" ];
          "SvgPathSegMovetoRel" = [ "SvgPathSeg" ];
          "SvgPatternElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgPolygonElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgPolylineElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgRadialGradientElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGradientElement" ];
          "SvgRectElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgScriptElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgSetElement" = [ "Element" "EventTarget" "Node" "SvgAnimationElement" "SvgElement" ];
          "SvgStopElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgStyleElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgSwitchElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgSymbolElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgTextContentElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgTextElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" "SvgTextContentElement" "SvgTextPositioningElement" ];
          "SvgTextPathElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" "SvgTextContentElement" ];
          "SvgTextPositioningElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" "SvgTextContentElement" ];
          "SvgTitleElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgUseElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgViewElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgaElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgfeBlendElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeColorMatrixElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeComponentTransferElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeCompositeElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeConvolveMatrixElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDiffuseLightingElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDisplacementMapElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDistantLightElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDropShadowElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeFloodElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeFuncAElement" = [ "Element" "EventTarget" "Node" "SvgComponentTransferFunctionElement" "SvgElement" ];
          "SvgfeFuncBElement" = [ "Element" "EventTarget" "Node" "SvgComponentTransferFunctionElement" "SvgElement" ];
          "SvgfeFuncGElement" = [ "Element" "EventTarget" "Node" "SvgComponentTransferFunctionElement" "SvgElement" ];
          "SvgfeFuncRElement" = [ "Element" "EventTarget" "Node" "SvgComponentTransferFunctionElement" "SvgElement" ];
          "SvgfeGaussianBlurElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeImageElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeMergeElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeMergeNodeElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeMorphologyElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeOffsetElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfePointLightElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeSpecularLightingElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeSpotLightElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeTileElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeTurbulenceElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvggElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgmPathElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgsvgElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgtSpanElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" "SvgTextContentElement" "SvgTextPositioningElement" ];
          "TcpServerSocket" = [ "EventTarget" ];
          "TcpServerSocketEvent" = [ "Event" ];
          "TcpSocket" = [ "EventTarget" ];
          "TcpSocketErrorEvent" = [ "Event" ];
          "TcpSocketEvent" = [ "Event" ];
          "Text" = [ "CharacterData" "EventTarget" "Node" ];
          "TextTrack" = [ "EventTarget" ];
          "TextTrackCue" = [ "EventTarget" ];
          "TextTrackList" = [ "EventTarget" ];
          "TimeEvent" = [ "Event" ];
          "TouchEvent" = [ "Event" "UiEvent" ];
          "TrackEvent" = [ "Event" ];
          "TransitionEvent" = [ "Event" ];
          "UiEvent" = [ "Event" ];
          "Usb" = [ "EventTarget" ];
          "UsbConnectionEvent" = [ "Event" ];
          "UsbPermissionResult" = [ "EventTarget" "PermissionStatus" ];
          "UserProximityEvent" = [ "Event" ];
          "ValueEvent" = [ "Event" ];
          "VideoStreamTrack" = [ "EventTarget" "MediaStreamTrack" ];
          "VideoTrackList" = [ "EventTarget" ];
          "VrDisplay" = [ "EventTarget" ];
          "VttCue" = [ "EventTarget" "TextTrackCue" ];
          "WaveShaperNode" = [ "AudioNode" "EventTarget" ];
          "WebGlContextEvent" = [ "Event" ];
          "WebKitCssMatrix" = [ "DomMatrix" "DomMatrixReadOnly" ];
          "WebSocket" = [ "EventTarget" ];
          "WheelEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "Window" = [ "EventTarget" ];
          "WindowClient" = [ "Client" ];
          "Worker" = [ "EventTarget" ];
          "WorkerDebuggerGlobalScope" = [ "EventTarget" ];
          "WorkerGlobalScope" = [ "EventTarget" ];
          "XmlDocument" = [ "Document" "EventTarget" "Node" ];
          "XmlHttpRequest" = [ "EventTarget" "XmlHttpRequestEventTarget" ];
          "XmlHttpRequestEventTarget" = [ "EventTarget" ];
          "XmlHttpRequestUpload" = [ "EventTarget" "XmlHttpRequestEventTarget" ];
          "Xr" = [ "EventTarget" ];
          "XrBoundedReferenceSpace" = [ "EventTarget" "XrReferenceSpace" "XrSpace" ];
          "XrInputSourceEvent" = [ "Event" ];
          "XrInputSourcesChangeEvent" = [ "Event" ];
          "XrReferenceSpace" = [ "EventTarget" "XrSpace" ];
          "XrReferenceSpaceEvent" = [ "Event" ];
          "XrSession" = [ "EventTarget" ];
          "XrSessionEvent" = [ "Event" ];
          "XrSpace" = [ "EventTarget" ];
          "XrViewerPose" = [ "XrPose" ];
        };
        resolvedDefaultFeatures = [ "Blob" "BlobPropertyBag" "Crypto" "Event" "EventTarget" "FormData" "Headers" "MessageEvent" "Performance" "Request" "RequestInit" "RequestMode" "Response" "ServiceWorkerGlobalScope" "Window" "Worker" "WorkerGlobalScope" ];
      };
      "wepoll-sys" = rec {
        crateName = "wepoll-sys";
        version = "3.0.1";
        edition = "2018";
        sha256 = "1zvpkr4dz3ny0k20mg1wdlp8vawz5p4gnya7h8j24119m7g19jqg";
        authors = [
          "Yorick Peterse <yorickpeterse@gmail.com>"
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "which" = rec {
        crateName = "which";
        version = "3.1.1";
        edition = "2015";
        sha256 = "094pw9pi48szshn9ln69z2kg7syq1jp80h5ps1qncbsaw4d0f4fh";
        authors = [
          "Harry Fei <tiziyuanfang@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "default" = [ "failure" ];
        };
      };
      "winapi 0.2.8" = rec {
        crateName = "winapi";
        version = "0.2.8";
        edition = "2015";
        sha256 = "0yh816lh6lf56dpsgxy189c2ai1z3j8mw9si6izqb6wsjkbcjz8n";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];

      };
      "winapi 0.3.9" = rec {
        crateName = "winapi";
        version = "0.3.9";
        edition = "2015";
        sha256 = "06gl025x418lchw1wxj64ycr7gha83m44cjr5sarhynd9xkrm0sw";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-i686-pc-windows-gnu";
            packageId = "winapi-i686-pc-windows-gnu";
            target = { target, features }: (stdenv.hostPlatform.config == "i686-pc-windows-gnu");
          }
          {
            name = "winapi-x86_64-pc-windows-gnu";
            packageId = "winapi-x86_64-pc-windows-gnu";
            target = { target, features }: (stdenv.hostPlatform.config == "x86_64-pc-windows-gnu");
          }
        ];
        features = {
          "debug" = [ "impl-debug" ];
        };
        resolvedDefaultFeatures = [ "consoleapi" "errhandlingapi" "fileapi" "handleapi" "heapapi" "impl-debug" "impl-default" "ioapiset" "lmcons" "minschannel" "minwinbase" "minwindef" "namedpipeapi" "ntdef" "ntsecapi" "ntstatus" "processenv" "profileapi" "schannel" "securitybaseapi" "sspi" "std" "synchapi" "sysinfoapi" "threadpoollegacyapiset" "timezoneapi" "winbase" "wincon" "wincrypt" "winerror" "winnt" "winreg" "winsock2" "ws2def" "ws2ipdef" "ws2tcpip" "wtypesbase" ];
      };
      "winapi-build" = rec {
        crateName = "winapi-build";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1g4rqsgjky0a7530qajn2bbfcrl2v0zb39idgdws9b1l7gp5wc9d";
        libName = "build";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];

      };
      "winapi-i686-pc-windows-gnu" = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1dmpa6mvcvzz16zg6d5vrfy4bxgg541wxrcip7cnshi06v38ffxc";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];

      };
      "winapi-util" = rec {
        crateName = "winapi-util";
        version = "0.1.5";
        edition = "2018";
        sha256 = "0y71bp7f6d536czj40dhqk0d55wfbbwqfp2ymqf1an5ibgl6rv3h";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "std" "consoleapi" "errhandlingapi" "fileapi" "minwindef" "processenv" "winbase" "wincon" "winerror" "winnt" ];
          }
        ];

      };
      "winapi-x86_64-pc-windows-gnu" = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0gqq64czqb64kskjryj8isp62m2sgvx25yyj3kpc2myh85w24bki";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];

      };
      "winreg" = rec {
        crateName = "winreg";
        version = "0.7.0";
        edition = "2015";
        sha256 = "0sdxcyvda4v1v6a0k1j2v1400z3ng323k9a56gxvkq51x21dn801";
        authors = [
          "Igor Shaula <gentoo90@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            features = [ "impl-default" "impl-debug" "minwindef" "minwinbase" "timezoneapi" "winerror" "winnt" "winreg" "handleapi" ];
          }
        ];
        features = {
          "serialization-serde" = [ "transactions" "serde" ];
          "transactions" = [ "winapi/ktmw32" ];
        };
      };
      "ws" = rec {
        crateName = "ws";
        version = "0.7.9";
        edition = "2015";
        sha256 = "1hzq7kp7p5v8ac5yp144lqhl3qp71dzh9q94633wbaahsinkx79j";
        authors = [
          "Jason Housley <HousleyJK@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "mio";
            packageId = "mio";
          }
          {
            name = "mio-extras";
            packageId = "mio-extras";
          }
          {
            name = "openssl";
            packageId = "openssl";
            optional = true;
          }
          {
            name = "rand";
            packageId = "rand 0.4.6";
          }
          {
            name = "sha1";
            packageId = "sha1";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "url";
            packageId = "url 1.7.2";
          }
        ];
        features = {
          "nativetls" = [ "native-tls" ];
          "permessage-deflate" = [ "libz-sys" "libc" ];
          "ssl" = [ "openssl" ];
        };
        resolvedDefaultFeatures = [ "default" "openssl" "ssl" ];
      };
      "ws2_32-sys" = rec {
        crateName = "ws2_32-sys";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0ppscg5qfqaw0gzwv2a4nhn5bn01ff9iwn6ysqnzm4n8s3myz76m";
        libName = "ws2_32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];

      };
      "x25519-dalek 0.6.0" = rec {
        crateName = "x25519-dalek";
        version = "0.6.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/novifinancial/x25519-dalek.git";
          rev = "459bb04bbe7ba650f3e5c30e594542c1f7892225";
          sha256 = "1xysmjlghsag9jlxyj3421clq7m12gc52cpf8hrdkxa4s5d4cj09";
        };
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "DebugSteven <debugsteven@gmail.com>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek 2.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" ];
          }
        ];
        features = {
          "default" = [ "std" "u64_backend" ];
          "fiat_u64_backend" = [ "curve25519-dalek/fiat_u64_backend" ];
          "nightly" = [ "curve25519-dalek/nightly" ];
          "serde" = [ "our_serde" "curve25519-dalek/serde" ];
          "std" = [ "curve25519-dalek/std" ];
          "u32_backend" = [ "curve25519-dalek/u32_backend" ];
          "u64_backend" = [ "curve25519-dalek/u64_backend" ];
        };
        resolvedDefaultFeatures = [ "fiat_u64_backend" "std" ];
      };
      "x25519-dalek 1.1.0" = rec {
        crateName = "x25519-dalek";
        version = "1.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/novifinancial/x25519-dalek.git";
          rev = "4d6e37cee0a2ae0d3df522b3c6286fab6ce607b6";
          sha256 = "0fkl7yjzjvdasr18gk3fa7r5xbdkw0c00fz1l2cqp1d51a1zcpna";
        };
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "DebugSteven <debugsteven@gmail.com>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek 3.0.0";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" ];
          }
        ];
        features = {
          "default" = [ "std" "u64_backend" ];
          "fiat_u64_backend" = [ "curve25519-dalek/fiat_u64_backend" ];
          "nightly" = [ "curve25519-dalek/nightly" ];
          "serde" = [ "our_serde" "curve25519-dalek/serde" ];
          "std" = [ "curve25519-dalek/std" ];
          "u32_backend" = [ "curve25519-dalek/u32_backend" ];
          "u64_backend" = [ "curve25519-dalek/u64_backend" ];
        };
        resolvedDefaultFeatures = [ "fiat_u64_backend" "std" ];
      };
      "yaml-rust" = rec {
        crateName = "yaml-rust";
        version = "0.4.5";
        edition = "2018";
        sha256 = "118wbqrr4n6wgk5rjjnlrdlahawlxc1bdsx146mwk8f79in97han";
        authors = [
          "Yuheng Chen <yuhengchen@sensetime.com>"
        ];
        dependencies = [
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map";
          }
        ];

      };
      "zeroize" = rec {
        crateName = "zeroize";
        version = "1.3.0";
        edition = "2018";
        sha256 = "1z8yix823b6lz878qwg6bvwhg3lb0cbw3c9yij9p8mbv7zdzfmj7";
        authors = [
          "Tony Arcieri <tony@iqlusion.io>"
        ];
        dependencies = [
          {
            name = "zeroize_derive";
            packageId = "zeroize_derive";
            optional = true;
          }
        ];
        features = {
          "default" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "zeroize_derive" ];
      };
      "zeroize_derive" = rec {
        crateName = "zeroize_derive";
        version = "1.1.0";
        edition = "2018";
        sha256 = "1cfsssf3jrkzhly58ln410j0jjx1mk5rmgw673rb5smspqqf3hd2";
        procMacro = true;
        authors = [
          "Tony Arcieri <tony@iqlusion.io>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
          {
            name = "synstructure";
            packageId = "synstructure";
          }
        ];

      };
    };

    #
# crate2nix/default.nix (excerpt start)
#

  /* Target (platform) data for conditional dependencies.
     This corresponds roughly to what buildRustCrate is setting.
  */
  defaultTarget = {
    unix = true;
    windows = false;
    fuchsia = true;
    test = false;

    # This doesn't appear to be officially documented anywhere yet.
    # See https://github.com/rust-lang-nursery/rust-forge/issues/101.
    os =
      if stdenv.hostPlatform.isDarwin
      then "macos"
      else stdenv.hostPlatform.parsed.kernel.name;
    arch = stdenv.hostPlatform.parsed.cpu.name;
    family = "unix";
    env = "gnu";
    endian =
      if stdenv.hostPlatform.parsed.cpu.significantByte.name == "littleEndian"
      then "little" else "big";
    pointer_width = toString stdenv.hostPlatform.parsed.cpu.bits;
    vendor = stdenv.hostPlatform.parsed.vendor.name;
    debug_assertions = false;
  };

  /* Filters common temp files and build files. */
  # TODO(pkolloch): Substitute with gitignore filter
  sourceFilter = name: type:
    let
      baseName = builtins.baseNameOf (builtins.toString name);
    in
      ! (
        # Filter out git
        baseName == ".gitignore"
        || (type == "directory" && baseName == ".git")

        # Filter out build results
        || (
          type == "directory" && (
            baseName == "target"
            || baseName == "_site"
            || baseName == ".sass-cache"
            || baseName == ".jekyll-metadata"
            || baseName == "build-artifacts"
          )
        )

        # Filter out nix-build result symlinks
        || (
          type == "symlink" && lib.hasPrefix "result" baseName
        )

        # Filter out IDE config
        || (
          type == "directory" && (
            baseName == ".idea" || baseName == ".vscode"
          )
        ) || lib.hasSuffix ".iml" baseName

        # Filter out nix build files
        || baseName == "Cargo.nix"

        # Filter out editor backup / swap files.
        || lib.hasSuffix "~" baseName
        || builtins.match "^\\.sw[a-z]$$" baseName != null
        || builtins.match "^\\..*\\.sw[a-z]$$" baseName != null
        || lib.hasSuffix ".tmp" baseName
        || lib.hasSuffix ".bak" baseName
        || baseName == "tests.nix"
      );

  /* Returns a crate which depends on successful test execution
     of crate given as the second argument.

     testCrateFlags: list of flags to pass to the test exectuable
     testInputs: list of packages that should be available during test execution
  */
  crateWithTest = { crate, testCrate, testCrateFlags, testInputs }:
    assert builtins.typeOf testCrateFlags == "list";
    assert builtins.typeOf testInputs == "list";
    let
      # override the `crate` so that it will build and execute tests instead of
      # building the actual lib and bin targets We just have to pass `--test`
      # to rustc and it will do the right thing.  We execute the tests and copy
      # their log and the test executables to $out for later inspection.
      test =
        let
          drv = testCrate.override
            (
              _: {
                buildTests = true;
              }
            );
        in
        pkgs.runCommand "run-tests-${testCrate.name}"
          {
            inherit testCrateFlags;
            buildInputs = testInputs;
          } ''
          set -ex

          export RUST_BACKTRACE=1

          # recreate a file hierarchy as when running tests with cargo

          # the source for test data
          ${pkgs.xorg.lndir}/bin/lndir ${crate.src}

          # build outputs
          testRoot=target/debug
          mkdir -p $testRoot

          # executables of the crate
          # we copy to prevent std::env::current_exe() to resolve to a store location
          for i in ${crate}/bin/*; do
            cp "$i" "$testRoot"
          done
          chmod +w -R .

          # test harness executables are suffixed with a hash, like cargo does
          # this allows to prevent name collision with the main
          # executables of the crate
          hash=$(basename $out)
          for file in ${drv}/tests/*; do
            f=$testRoot/$(basename $file)-$hash
            cp $file $f
            $f $testCrateFlags 2>&1 | tee -a $out
          done
        '';
    in
    pkgs.runCommand "${crate.name}-linked"
      {
        inherit (crate) outputs crateName;
        passthru = (crate.passthru or { }) // {
          inherit test;
        };
      } ''
      echo tested by ${test}
      ${lib.concatMapStringsSep "\n" (output: "ln -s ${crate.${output}} ${"$"}${output}") crate.outputs}
    '';

  /* A restricted overridable version of builtRustCratesWithFeatures. */
  buildRustCrateWithFeatures =
    { packageId
    , features ? rootFeatures
    , crateOverrides ? defaultCrateOverrides
    , buildRustCrateForPkgsFunc ? null
    , runTests ? false
    , testCrateFlags ? [ ]
    , testInputs ? [ ]
    }:
    lib.makeOverridable
      (
        { features
        , crateOverrides
        , runTests
        , testCrateFlags
        , testInputs
        }:
        let
          buildRustCrateForPkgsFuncOverriden =
            if buildRustCrateForPkgsFunc != null
            then buildRustCrateForPkgsFunc
            else
              (
                if crateOverrides == pkgs.defaultCrateOverrides
                then buildRustCrateForPkgs
                else
                  pkgs: (buildRustCrateForPkgs pkgs).override {
                    defaultCrateOverrides = crateOverrides;
                  }
              );
          builtRustCrates = builtRustCratesWithFeatures {
            inherit packageId features;
            buildRustCrateForPkgsFunc = buildRustCrateForPkgsFuncOverriden;
            runTests = false;
          };
          builtTestRustCrates = builtRustCratesWithFeatures {
            inherit packageId features;
            buildRustCrateForPkgsFunc = buildRustCrateForPkgsFuncOverriden;
            runTests = true;
          };
          drv = builtRustCrates.crates.${packageId};
          testDrv = builtTestRustCrates.crates.${packageId};
          derivation =
            if runTests then
              crateWithTest
                {
                  crate = drv;
                  testCrate = testDrv;
                  inherit testCrateFlags testInputs;
                }
            else drv;
        in
        derivation
      )
      { inherit features crateOverrides runTests testCrateFlags testInputs; };

  /* Returns an attr set with packageId mapped to the result of buildRustCrateForPkgsFunc
     for the corresponding crate.
  */
  builtRustCratesWithFeatures =
    { packageId
    , features
    , crateConfigs ? crates
    , buildRustCrateForPkgsFunc
    , runTests
    , target ? defaultTarget
    } @ args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isList features);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);
      let
        rootPackageId = packageId;
        mergedFeatures = mergePackageFeatures
          (
            args // {
              inherit rootPackageId;
              target = target // { test = runTests; };
            }
          );
        # Memoize built packages so that reappearing packages are only built once.
        builtByPackageIdByPkgs = mkBuiltByPackageIdByPkgs pkgs;
        mkBuiltByPackageIdByPkgs = pkgs:
          let
            self = {
              crates = lib.mapAttrs (packageId: value: buildByPackageIdForPkgsImpl self pkgs packageId) crateConfigs;
              build = mkBuiltByPackageIdByPkgs pkgs.buildPackages;
            };
          in
          self;
        buildByPackageIdForPkgsImpl = self: pkgs: packageId:
          let
            features = mergedFeatures."${packageId}" or [ ];
            crateConfig' = crateConfigs."${packageId}";
            crateConfig =
              builtins.removeAttrs crateConfig' [ "resolvedDefaultFeatures" "devDependencies" ];
            devDependencies =
              lib.optionals
                (runTests && packageId == rootPackageId)
                (crateConfig'.devDependencies or [ ]);
            dependencies =
              dependencyDerivations {
                inherit features target;
                buildByPackageId = depPackageId:
                  # proc_macro crates must be compiled for the build architecture
                  if crateConfigs.${depPackageId}.procMacro or false
                  then self.build.crates.${depPackageId}
                  else self.crates.${depPackageId};
                dependencies =
                  (crateConfig.dependencies or [ ])
                  ++ devDependencies;
              };
            buildDependencies =
              dependencyDerivations {
                inherit features target;
                buildByPackageId = depPackageId:
                  self.build.crates.${depPackageId};
                dependencies = crateConfig.buildDependencies or [ ];
              };
            filterEnabledDependenciesForThis = dependencies: filterEnabledDependencies {
              inherit dependencies features target;
            };
            dependenciesWithRenames =
              lib.filter (d: d ? "rename")
                (
                  filterEnabledDependenciesForThis
                    (
                      (crateConfig.buildDependencies or [ ])
                      ++ (crateConfig.dependencies or [ ])
                      ++ devDependencies
                    )
                );
            # Crate renames have the form:
            #
            # {
            #    crate_name = [
            #       { version = "1.2.3"; rename = "crate_name01"; }
            #    ];
            #    # ...
            # }
            crateRenames =
              let
                grouped =
                  lib.groupBy
                    (dependency: dependency.name)
                    dependenciesWithRenames;
                versionAndRename = dep:
                  let
                    package = crateConfigs."${dep.packageId}";
                  in
                  { inherit (dep) rename; version = package.version; };
              in
              lib.mapAttrs (name: choices: builtins.map versionAndRename choices) grouped;
          in
          buildRustCrateForPkgsFunc pkgs
            (
              crateConfig // {
                src = crateConfig.src or (
                  pkgs.fetchurl rec {
                    name = "${crateConfig.crateName}-${crateConfig.version}.tar.gz";
                    # https://www.pietroalbini.org/blog/downloading-crates-io/
                    # Not rate-limited, CDN URL.
                    url = "https://static.crates.io/crates/${crateConfig.crateName}/${crateConfig.crateName}-${crateConfig.version}.crate";
                    sha256 =
                      assert (lib.assertMsg (crateConfig ? sha256) "Missing sha256 for ${name}");
                      crateConfig.sha256;
                  }
                );
                extraRustcOpts = lib.lists.optional (targetFeatures != [ ]) "-C target-feature=${lib.concatMapStringsSep "," (x: "+${x}") targetFeatures}";
                inherit features dependencies buildDependencies crateRenames release;
              }
            );
      in
      builtByPackageIdByPkgs;

  /* Returns the actual derivations for the given dependencies. */
  dependencyDerivations =
    { buildByPackageId
    , features
    , dependencies
    , target
    }:
      assert (builtins.isList features);
      assert (builtins.isList dependencies);
      assert (builtins.isAttrs target);
      let
        enabledDependencies = filterEnabledDependencies {
          inherit dependencies features target;
        };
        depDerivation = dependency: buildByPackageId dependency.packageId;
      in
      map depDerivation enabledDependencies;

  /* Returns a sanitized version of val with all values substituted that cannot
     be serialized as JSON.
  */
  sanitizeForJson = val:
    if builtins.isAttrs val
    then lib.mapAttrs (n: v: sanitizeForJson v) val
    else if builtins.isList val
    then builtins.map sanitizeForJson val
    else if builtins.isFunction val
    then "function"
    else val;

  /* Returns various tools to debug a crate. */
  debugCrate = { packageId, target ? defaultTarget }:
    assert (builtins.isString packageId);
    let
      debug = rec {
        # The built tree as passed to buildRustCrate.
        buildTree = buildRustCrateWithFeatures {
          buildRustCrateForPkgsFunc = _: lib.id;
          inherit packageId;
        };
        sanitizedBuildTree = sanitizeForJson buildTree;
        dependencyTree = sanitizeForJson
          (
            buildRustCrateWithFeatures {
              buildRustCrateForPkgsFunc = _: crate: {
                "01_crateName" = crate.crateName or false;
                "02_features" = crate.features or [ ];
                "03_dependencies" = crate.dependencies or [ ];
              };
              inherit packageId;
            }
          );
        mergedPackageFeatures = mergePackageFeatures {
          features = rootFeatures;
          inherit packageId target;
        };
        diffedDefaultPackageFeatures = diffDefaultPackageFeatures {
          inherit packageId target;
        };
      };
    in
    { internal = debug; };

  /* Returns differences between cargo default features and crate2nix default
     features.

     This is useful for verifying the feature resolution in crate2nix.
  */
  diffDefaultPackageFeatures =
    { crateConfigs ? crates
    , packageId
    , target
    }:
      assert (builtins.isAttrs crateConfigs);
      let
        prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures =
          prefixValues
            "crate2nix"
            (mergePackageFeatures { inherit crateConfigs packageId target; features = [ "default" ]; });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) { } [ mergedFeatures configs ];
        onlyInCargo =
          builtins.attrNames
            (lib.filterAttrs (n: v: !(v ? "crate2nix") && (v ? "cargo")) combined);
        onlyInCrate2Nix =
          builtins.attrNames
            (lib.filterAttrs (n: v: (v ? "crate2nix") && !(v ? "cargo")) combined);
        differentFeatures = lib.filterAttrs
          (
            n: v:
              (v ? "crate2nix")
              && (v ? "cargo")
              && (v.crate2nix.features or [ ]) != (v."cargo".resolved_default_features or [ ])
          )
          combined;
      in
      builtins.toJSON {
        inherit onlyInCargo onlyInCrate2Nix differentFeatures;
      };

  /* Returns an attrset mapping packageId to the list of enabled features.

     If multiple paths to a dependency enable different features, the
     corresponding feature sets are merged. Features in rust are additive.
  */
  mergePackageFeatures =
    { crateConfigs ? crates
    , packageId
    , rootPackageId ? packageId
    , features ? rootFeatures
    , dependencyPath ? [ crates.${packageId}.crateName ]
    , featuresByPackageId ? { }
    , target
      # Adds devDependencies to the crate with rootPackageId.
    , runTests ? false
    , ...
    } @ args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isString rootPackageId);
      assert (builtins.isList features);
      assert (builtins.isList dependencyPath);
      assert (builtins.isAttrs featuresByPackageId);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);
      let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw "Package not found: ${packageId}");
        expandedFeatures = expandFeatures (crateConfig.features or { }) features;
        enabledFeatures = enableFeatures (crateConfig.dependencies or [ ]) expandedFeatures;
        depWithResolvedFeatures = dependency:
          let
            packageId = dependency.packageId;
            features = dependencyFeatures enabledFeatures dependency;
          in
          { inherit packageId features; };
        resolveDependencies = cache: path: dependencies:
          assert (builtins.isAttrs cache);
          assert (builtins.isList dependencies);
          let
            enabledDependencies = filterEnabledDependencies {
              inherit dependencies target;
              features = enabledFeatures;
            };
            directDependencies = map depWithResolvedFeatures enabledDependencies;
            foldOverCache = op: lib.foldl op cache directDependencies;
          in
          foldOverCache
            (
              cache: { packageId, features }:
                let
                  cacheFeatures = cache.${packageId} or [ ];
                  combinedFeatures = sortedUnique (cacheFeatures ++ features);
                in
                if cache ? ${packageId} && cache.${packageId} == combinedFeatures
                then cache
                else
                  mergePackageFeatures {
                    features = combinedFeatures;
                    featuresByPackageId = cache;
                    inherit crateConfigs packageId target runTests rootPackageId;
                  }
            );
        cacheWithSelf =
          let
            cacheFeatures = featuresByPackageId.${packageId} or [ ];
            combinedFeatures = sortedUnique (cacheFeatures ++ enabledFeatures);
          in
          featuresByPackageId // {
            "${packageId}" = combinedFeatures;
          };
        cacheWithDependencies =
          resolveDependencies cacheWithSelf "dep"
            (
              crateConfig.dependencies or [ ]
              ++ lib.optionals
                (runTests && packageId == rootPackageId)
                (crateConfig.devDependencies or [ ])
            );
        cacheWithAll =
          resolveDependencies
            cacheWithDependencies "build"
            (crateConfig.buildDependencies or [ ]);
      in
      cacheWithAll;

  /* Returns the enabled dependencies given the enabled features. */
  filterEnabledDependencies = { dependencies, features, target }:
    assert (builtins.isList dependencies);
    assert (builtins.isList features);
    assert (builtins.isAttrs target);

    lib.filter
      (
        dep:
        let
          targetFunc = dep.target or (features: true);
        in
        targetFunc { inherit features target; }
        && (
          !(dep.optional or false)
          || builtins.any (doesFeatureEnableDependency dep) features
        )
      )
      dependencies;

  /* Returns whether the given feature should enable the given dependency. */
  doesFeatureEnableDependency = { name, rename ? null, ... }: feature:
    let
      prefix = "${name}/";
      len = builtins.stringLength prefix;
      startsWithPrefix = builtins.substring 0 len feature == prefix;
    in
    (rename == null && feature == name)
    || (rename != null && rename == feature)
    || startsWithPrefix;

  /* Returns the expanded features for the given inputFeatures by applying the
     rules in featureMap.

     featureMap is an attribute set which maps feature names to lists of further
     feature names to enable in case this feature is selected.
  */
  expandFeatures = featureMap: inputFeatures:
    assert (builtins.isAttrs featureMap);
    assert (builtins.isList inputFeatures);
    let
      expandFeature = feature:
        assert (builtins.isString feature);
        [ feature ] ++ (expandFeatures featureMap (featureMap."${feature}" or [ ]));
      outFeatures = lib.concatMap expandFeature inputFeatures;
    in
    sortedUnique outFeatures;

  /* This function adds optional dependencies as features if they are enabled
     indirectly by dependency features. This function mimics Cargo's behavior
     described in a note at:
     https://doc.rust-lang.org/nightly/cargo/reference/features.html#dependency-features
  */
  enableFeatures = dependencies: features:
    assert (builtins.isList features);
    assert (builtins.isList dependencies);
    let
      additionalFeatures = lib.concatMap
        (
          dependency:
            assert (builtins.isAttrs dependency);
            let
              enabled = builtins.any (doesFeatureEnableDependency dependency) features;
            in
            if (dependency.optional or false) && enabled then [ dependency.name ] else [ ]
        )
        dependencies;
    in
    sortedUnique (features ++ additionalFeatures);

  /*
     Returns the actual features for the given dependency.

     features: The features of the crate that refers this dependency.
  */
  dependencyFeatures = features: dependency:
    assert (builtins.isList features);
    assert (builtins.isAttrs dependency);
    let
      defaultOrNil =
        if dependency.usesDefaultFeatures or true
        then [ "default" ]
        else [ ];
      explicitFeatures = dependency.features or [ ];
      additionalDependencyFeatures =
        let
          dependencyPrefix = (dependency.rename or dependency.name) + "/";
          dependencyFeatures =
            builtins.filter (f: lib.hasPrefix dependencyPrefix f) features;
        in
        builtins.map (lib.removePrefix dependencyPrefix) dependencyFeatures;
    in
    defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

  /* Sorts and removes duplicates from a list of strings. */
  sortedUnique = features:
    assert (builtins.isList features);
    assert (builtins.all builtins.isString features);
    let
      outFeaturesSet = lib.foldl (set: feature: set // { "${feature}" = 1; }) { } features;
      outFeaturesUnique = builtins.attrNames outFeaturesSet;
    in
    builtins.sort (a: b: a < b) outFeaturesUnique;

  deprecationWarning = message: value:
    if strictDeprecation
    then builtins.throw "strictDeprecation enabled, aborting: ${message}"
    else builtins.trace message value;

  #
  # crate2nix/default.nix (excerpt end)
  #

  };
}

